arXiv:1610.01521v2 [math.CO] 27 Aug 2017

Supersaturation in Posets and Applications Involving the
Container Method
Jonathan A. Noel1, 2

Alex Scott3

Benny Sudakov1

Abstract
We consider ‘supersaturation’ problems in partially ordered sets (posets) of the following form. Given a finite poset P and an integer m greater than the cardinality of the
largest antichain in P , what is the minimum number of comparable pairs in a subset of
P of cardinality m? We provide a framework for obtaining lower bounds on this quantity
based on counting comparable pairs relative to a random chain and apply this framework
to obtain supersaturation results for three classical posets: the boolean lattice, the collection of subspaces of Fnq ordered by set inclusion and the set of divisors of the square of a
square-free integer under the ‘divides’ relation. The bound that we obtain for the boolean
lattice can be viewed as an approximate version of a known theorem of Kleitman [23].
In addition, we apply our supersaturation results to obtain (a) upper bounds on the
number of antichains in these posets and (b) asymptotic bounds on the cardinality of the
largest antichain in p-random subsets of these posets which hold with high probability
(for p in a certain range). The proofs of these results rely on a ‘container-type’ lemma
for posets which generalises a result of Balogh, Mycroft and Treglown [6]. We also state
a number of open problems regarding supersaturation in posets and counting antichains.

1

Introduction

A large part of extremal combinatorics is concerned with determining the maximum size of a
combinatorial object subject to the constraint that it does not contain a certain ‘forbidden’
substructure. One example of such an extremal problem is to determine the cardinality of the
largest subset of a partially ordered set (poset) P which does not contain a comparable pair;
i.e. to determine the cardinality of the largest antichain. Perhaps the most famous result in
this area is Sperner’s Theorem [37] which says that the size of the largest antichain in the
boolean lattice poset P(n), consisting of all subsets of [n] := {1, . . . , n} ordered by inclusion,
n
.
is ⌊n/2⌋
A closely related problem is to determine the minimum number of copies of a particular
substructure in a combinatorial object of prescribed size. These so called ‘supersaturation’
problems have a long history starting with a result of Rademacher (unpublished, see [18])
which says that every graph with n vertices and more than n2 /4 edges must contain at
least ⌊n/2⌋ triangles. For additional background on supersaturation problems in extremal
combinatorics see, e.g., [14, 29, 30, 33, 34] and the references therein.
1

Department of Mathematics, ETH, Raemistrasse 101, HG G 33.4, 8092 Zurich, Switzerland. E-mail:
{jonathan.noel,benjamin.sudakov}@math.ethz.ch.
2
Part of this work was completed while the first author was a DPhil student at the University of Oxford.
3
Mathematical Institute, University of Oxford, Andrew Wiles Building, Radcliffe Observatory Quarter,
Woodstock Road, Oxford, OX2 6GG, UK. E-mail: scott@maths.ox.ac.uk.

1

Our focus in this paper is on a natural supersaturation problem for posets: given a finite
poset P and a positive integer m ≤ |P |, what is the minimum number of comparable pairs in
a subset S of P of cardinality m? An early result in this direction is due to Kleitman [23]
who proved that, for 1 ≤ m ≤ 2n , the number of comparable pairs in a subset of P(n) of
cardinality m is minimised by a collection of m subsets of [n] whose cardinalities are as close
to n/2 as possible. This result strengthens Sperner’s Theorem and settled a conjecture of
Erdős and Katona (see [10, 13, 16] for further results).
In this paper, we prove new supersaturation results for two classical posets (Theorems 1.2
and 1.4 below). Our method involves counting comparisons relative to a random chain and
should be applicable to posets beyond those covered in this paper. We also illustrate the
method by using it to prove an approximate version of the supersaturation theorem of Kleitman [23] in the boolean lattice (Theorem 3.1). All three of these supersaturation results will
be applied to prove bounds on the number of antichains in these posets and bounds on the
size of antichains in random subsets of these posets.
Throughout the paper, for a subset S of a poset P , we let comp(S) denote the number of
comparable pairs in S.
Definition 1.1. Given a prime power q and integers n ≥ 1 let V (q, n) be the poset of all
subspaces
of Fnq ordered by inclusion. For an integer 0 ≤ i ≤ n, the q-binomial coefficient
n
n
i q is the number of subspaces of Fq of dimension i.
Elementary counting shows that

hni
i

q

i−1
Y
1 − q n−j
.
=
1 − q j+1
j=0

 
 
One may also observe that, for fixed n and q, the sequence n0 q , . . . , nn q is unimodal and
h
i
 
n
satisfies ni q = n−i
for all 0 ≤ i ≤ n. We prove the following theorem.
q

Theorem 1.2. Let q be a prime power and k be a fixed positive integer. There exists a
constant n0 (k) such that if n ≥ n0 (k) and S ⊆ V (q, n) has cardinality at least
k−1 
X
r=0

then

n
 n−k+1+2r 
2





+ t,
q

⌈(n + k)/2⌉
comp(S) ≥ t
k



.
q

It is easy to see that Theorem 1.2 is best possible when k = 1 and 0 ≤ t ≤

h

i

n
⌊(n−1)/2⌋ q

as the set S consisting of all hsubspacesi of dimension ⌈n/2⌉ and t subspaces of dimension
⌊(n − 1)/2⌋ contains exactly t ⌈(n+1)/2⌉
comparable pairs.
1
q

Definition 1.3. Given n ≥ 1, we define a poset on {0, 1, 2}n where x ≤ y if and only if
xj ≤ yj for 1 ≤ j ≤ n, where xj and yj are the jth coordinates of x and y, respectively. For
0 ≤ i ≤ 2n, let ℓi (n) denote the number of vectors in {0, 1, 2}n whose coordinates sum to i.
2

The poset {0, 1, 2}n can also be viewed as the poset of divisors of the square of a squarefree integer with n prime factors under the ‘divides’ relation or the poset of all submultisets
of a multiset consisting of n distinct elements each of multiplicity two under inclusion. It is
easy to see that



⌊i/2⌋
X
n
i−s
ℓi (n) =
.
i−s
s
s=max{0,i−n}

Also, trivially, ℓi (n) = ℓ2n−i (n) for 0 ≤ i ≤ 2n. A result of de Bruijn, van Ebbenhorst
Tengbergen and Kruyswijk [15] says that {0, 1, 2}n has a ‘symmetric chain decomposition’ (see
[3] for details) which, in particular, implies that the sequence ℓ0 (n), . . . , ℓ2n (n) is unimodal.
We prove the following theorem.
Theorem 1.4. Let k be a fixed positive integer. Then there exists a constant n0 (k) such that
if n ≥ n0 (k) and S ⊆ {0, 1, 2}n has cardinality at least
n+⌈ k−1
2 ⌉

X

r=n−⌊

k−1
2

then
comp(S) ≥
ℓ



ℓr (n) + t,
⌋


ℓ3k−1 (n)
− 1 t.
ℓ2k−1 (n)

(n)

n−1
3k−1
Note that for k = 1 we have ℓ2k−1
(n) − 1 = 2 and, for general k and n large with respect
to k, we have

n
(1 + o(1) 3k−1
ℓ3k−1 (n)
(1 + o(1))(2k − 1)!nk

−1=
.
(1.5)
=
n
ℓ2k−1 (n)
(3k − 1)!
2k−1

In particular, for k = 1 and |S| not much larger than ℓn (n), Theorem 1.4 is nearly best
possible. To see this, let S = Sn ∪ Sn+1 where Sn contains all elements of {0, 1, 2}n whose
coordinates sum to n and Sn+1 contains the |S|−ℓn (n) elements of {0, 1, 2}n whose coordinates
sum to n + 1 and, subject to this, have the minimum number of non-zero coordinates.
In the past few years, there has been some considerable success in extending classical
results in extremal combinatorics to sparse random settings due to the breakthroughs made
independently by Conlon and Gowers [12] and Schacht [36]. Shortly thereafter another, very
different, approach known as the ‘container method’ was developed independently by Balogh,
Morris and Samotij [5] and Saxton and Thomason [35]. As was demonstrated in [5, 35],
the container method can be used to prove many of the results of [12, 36]. Two advantages
of the container method are that it is relatively straightforward to apply and that it often
provides ‘counting’ results which can be much stronger than the corresponding probabilistic
statements. Supersaturation theorems form a key ingredient in most proofs involving the
container method. For instance, many of the proofs in [5, 35] applied the classical graph
supersaturation theorem of Erdős and Simonovits [20]. For additional applications of the
container method, see [4, 8, 31] and the references therein.
We apply Theorems 1.2 and 1.4 and the container method to prove upper bounds on the
number of antichains in V (q, n) and {0, 1, 2}n (Theorem 1.6 and 1.7) and upper bounds on
the largest antichains in random subsets of these posets of a certain density which hold with
high probability (Theorems 1.8 and 1.9).
3

Theorem 1.6.h Let iq be a fixed prime power.
√
n
(1+O( nq−n/4 )) ⌊n/2⌋
q.
2
Theorem 1.7. The number of antichains in

The number of antichains in V(q, n) is

{0, 1, 2}n


√

1+O
log n/n ℓn (n)

is 2

.

Of course, the number of antichains in any poset P is at least 2 to the power of the
cardinality of its largest antichain, and so Theorems 1.6 and 1.7 are best possible up to the
(1 + o(1)) factor in the exponent.
Given a set X, a p-random subset of X is a subset of X obtained by including each element
of X with probability p independently of one another.
Theorem 1.8. Let q be a fixed prime power and ε > 0. There exists a positive constant
c(ε, q) such that if p ≥ c(ε, q)/q n/2 , then with highh probability
every antichain in a p-random
i
n
subset of V (q, n) has cardinality at most (1 + ε)p ⌊n/2⌋ .
q

Theorem 1.9. Let ε > 0 be fixed. There exists a positive constant c(ε) such that if p ≥ c(ε)/n,
then with high probability every antichain in a p-random subset of {0, 1, 2}n has cardinality
at most (1 + ε)pℓn (n).
It is not hard to see that Theorems 1.8 and 1.9 are best possible up to the choice of the
constants c(ε, q) and c(ε); this is made explicit in Section 6.
In the next section, we prove a general lemma for obtaining lower bounds on the number of
comparable pairs in a subset S of a poset P . We provide a few basic applications of this lemma
in Section 3 including a proof of an approximate version of the theorem of Kleitman [23] and
a proof of Theorem 1.2. In Section 4, we apply this lemma again to prove Theorem 1.4. In
Section 5 we prove a container-type lemma for posets which generalises a result of [6] proved
for the boolean lattice. In Section 6, we use this lemma to prove Theorems 1.6, 1.7, 1.8 and 1.9
and a known upper bound on the number of antichains in the boolean lattice included for the

sake of demonstration. Throughout the paper, we will require several known bounds on ni q
and ℓi (n) which are stated in the appendix.

2

Comparison Counting Via Random Chains

Our general approach to proving supersaturation results, which was inspired by [13], is to
count comparable pairs in a subset S of P by considering the expected number of such pairs
in a chain of P chosen randomly according to some distribution. One should point out that
the general idea of counting comparable pairs relative to a random chain goes back, in some
sense, to Lubell’s proof [28] of the LYM inequality. It was recently used by Das, Gan and
Sudakov [13] and Dove, Griggs, Kang and Sereni [16] to count chains of length k in subsets
of P(n) of prescribed cardinality. In order for this technique to be effective, one requires a
distribution on the chains in P which is sufficiently ‘balanced.’ Roughly speaking, what we
mean by this is that a random chain chosen according to this distribution is not too unlikely
to contain any fixed element of P and, at the same time, not too likely to contain any fixed
comparable pair of P . Our estimates will use a lemma on random chains, for which we require
the notion of a comparability digraph.
Definition 2.1. Let P be a poset. A comparability digraph for P is a digraph D with
V (D) = P such that
4

• for every directed arc (x, y) of D, we have that x is comparable to y in P , and
• for every comparable pair x, y ∈ P , exactly one of the arcs (x, y) or (y, x) is in E(D).
We remark that a poset P can have many comparability digraphs. In particular, the fact
that a comparability digraph contains an arc from x to y does not determine which of the
relations x < y or y < x holds.
Lemma 2.2. Let P be a poset, let D be a comparability digraph for P , let µ be a distribution
on the chains of P and let Cµ be a random chain chosen according to µ. Suppose further that
P (x ∈ Cµ ) > 0 for every x ∈ P . Then, for every set S ⊆ P , we have

 !


comp(S) ≥

max

(x,y)∈E(D)

P (y ∈ Cµ | x ∈ Cµ )

−1

|S| − min P (x ∈ Cµ )

−1

x∈P

.

Proof. We proceed by induction on |S| where the base case |S| ≤ (minx∈P P (x ∈ Cµ ))−1 is
z ∈ S.
trivial. Given w ∈ S, we define d+
S (w) to be the number of arcs (w, z) ∈ E(D) with
−1
+
Suppose that there exists w ∈ S with dS (w) ≥ max(x,y)∈E(D) P (y ∈ Cµ | x ∈ Cµ ) . In this
case, we apply the inductive hypothesis to S \ {w} to obtain at least

 !


max

(x,y)∈E(D)

P (y ∈ Cµ | x ∈ Cµ )

−1

|S \ {w}| − min P (x ∈ Cµ )
x∈P

−1

.

comparable pairs in S which do not involve w. We then obtain the desired bound on comp(S)
by considering these comparable pairs along with those of the form (w, z) ∈ E(D) with z ∈ S.
Thus, we may assume that every w ∈ S satisfies

−1
.
(2.3)
(w)
<
max
P
(y
∈
C
|
x
∈
C
)
d+
µ
µ
S
(x,y)∈E(D)


The chain Cµ contains precisely |Cµ ∩ S| elements of S and |Cµ2∩S| of the comparable pairs

of S (since every pair in Cµ is comparable). Since k − k2 ≤ 1 for all k, we get that


 X
X
|Cµ ∩ S|
P (w, z ∈ Cµ )
1 ≥ E |Cµ ∩ S| −
=
P (w ∈ Cµ ) −
2
w∈S

=

X

w∈S

≥

X

w∈S




P (w ∈ Cµ ) 
1 −


P (w ∈ Cµ ) 1 −

w,z∈S
(w,z)∈E(D)

X

z∈S
(w,z)∈E(D)




P (z ∈ Cµ | w ∈ Cµ )


max P (y
d+
S (w)
(x,y)∈E(D)


∈ Cµ | x ∈ Cµ ) .

By (2.3), all of the summands are positive, and so this expression is bounded below by


X
+
min P (x ∈ Cµ )
1 − dS (w) max P (y ∈ Cµ | x ∈ Cµ ) .
w∈S

x∈P

(x,y)∈E(D)

5

Rearranging, we obtain
comp(S) =

X

w∈S

d+
S (w)

≥



max

(x,y)∈E(D)

P (y ∈ Cµ | x ∈ Cµ )

−1

−1 !
|S| − min P (x ∈ Cµ )


x∈P

as desired.
Remark 2.4. We remark that the proof of this lemma generalises to give a lower bound
on the number of edges induced by a set of m vertices in a general graph G in terms of m.
That is, one could orient the edges of the graph and select a random clique according to a
probability distribution µ.

3

Supersaturation in P(n) and V (q, n)

To illustrate the applicability of Lemma 2.2, we prove a weak version of the theorem of
Kleitman [23] in the boolean lattice which is often good enough for applications involving the
container method (see, e.g., [6, 8, 11] and Theorem 6.1).
Theorem 3.1 (Kleitman [23]). Let k be a fixed positive integer. Then there exists a constant
n0 (k) such that if n ≥ n0 (k) and S ⊆ P(n) is a set of cardinality at least
k−1 
X
r=0

then


n
 n−k+1+2r  + t,
2




⌈(n + k)/2⌉
comp(S) ≥ t
.
k

Proof. For 0 ≤
 r ≤ k − 1, let Pr be the poset consisting all subsets of [n] of cardinality
modulo k ordered by inclusion (the idea of splitting the levels of
equivalent to n−k+1+2r
2
P(n) into equivalence classes modulo k is also used by Collares Neto and Morris [11]). Note
that P0 ∪ · · · ∪ Pk−1 partitions P(n). Define Sr := S ∩ Pr and


n
tr := |Sr | −  n−k+1+2r  .
2

Pk−1

= t. Our goal is to show that, for 0 ≤ r ≤ k − 1, the following holds:


⌈(n + k)/2⌉
comp(Sr ) ≥ tr
.
(3.2)
k
Pk−1
This will imply the result since comp(S) ≥ r=0
comp(Sr ).
Let r ∈ {0, . . . , k − 1} be fixed. We prove (3.2) by induction on tr . Note that (3.2) holds
trivially if tr ≤ 0. Now, for tr ≥ 1, if Sr contains an element x which is comparable to
at least ⌈(n+k)/2⌉
elements of Sr , then we apply the induction hypothesis to find at least
k
⌈(n+k)/2⌉
(tr − 1)
comparable pairs in Sr \ {x} and we are done. Therefore, we can assume
k
that there is no such x ∈ Sr .
Next, we show that we can assume that S does not contain any extremely small sets. Let
≡ s mod k. Let X be the set of all elements of Sr of
s ∈ {0, . . . , k − 1} so that n−k+1+2r
2
Clearly,

r=0 tr

6

cardinality s. Suppose that X 6= ∅ and for each x ∈ X let Nk+s (x) be the elements of Pr \ Sr
of cardinality k + s which are comparable
to x. By the result of the previous paragraph, x is

comparable to fewer than ⌈(n+k)/2⌉
elements
of Sr and so
k

 
 
 

n−s
⌈(n + k)/2⌉
n−k+1
⌈(n + k)/2⌉
|Nk+s (x)| >
−
≥
−
k
k
k
k
which, if n0 (k) is chosen large enough with respect to k, is at least

  
n
n
≥
≥ |X|.
k−1
s
Therefore, we can greedily associate each element x of X to an element yx of Pr \ Sr of
cardinality k + s such that x is comparable to yx and the yx are distinct from one another.
It is clear that the set Sr′ := (Sr \ X) ∪ {yx : x ∈ X} has the same cardinality as Sr and at
most as many comparable pairs as Sr . So, in what follows, we can assume that X = ∅; that
is, every element of Sr has cardinality at least k + s.
Now, define Pr∗ to be the poset obtained from Pr by deleting all sets of cardinality s. Let
D be a digraph with V (D) = Pr∗ containing every arc (x, y) where either
• x and y are comparable and the cardinality of y is closer to n/2 than the cardinality of
x, or
• x < y and |x| = n − |y|.
Let Cµ be a random chain in Pr∗ obtained by taking a maximal chain in P(n) uniformly at
random and intersecting it with Pr∗ . Then any two elements of Pr∗ of the same cardinality are
equally likely to be contained in Cµ and so
−1

n
for all x ∈ Pr∗ .
P (x ∈ Cµ ) ≥  n−k+1+2r 
2

Also, given (x, y) ∈ E(D), we have

P (y ∈ Cµ | x ∈ Cµ ) =





|x|−1
|y|
n−|x| −1
|y|−|x|

if x > y,
otherwise.

By definition of D and the fact that X = ∅, we get that this quantity is always at most
⌈(n+k)/2⌉−1
. Thus, (3.2) holds by Lemma 2.2.
k

The proof of Theorem 3.1 above exploits the following two properties of a uniformly
random maximal chain Cµ in the boolean lattice:
• any two subsets of [n] of the same cardinality are equally likely to be contained in Cµ
and
• for any two comparable pairs (x1 , y1 ) and (x2 , y2 ) in P(n) such that |x1 | = |x2 | and
|y1 | = |y2 |, we have P (x1 , y1 ∈ Cµ ) = P (x2 , y2 ∈ Cµ ).
It is clear that one can often obtain a supersaturation result for posets satisfying these two
conditions by taking a maximal chain uniformly at random and applying Lemma 2.2. We
demonstrate this by outlining a proof of Theorem 1.2.
7

Proof of Theorem 1.2. For 0 ≤ r ≤ k − 1, let Pr be the poset consisting all subspaces of Fnq of


dimension equivalent to n−k+1+2r
modulo k ordered by inclusion. Analogous to the proof
2
of Theorem 3.1, we define Sr := S ∩ Pr and


n
tr := |Sr | −  n−k+1+2r  .
2

Clearly,

Pk−1

r=0 tr

q

= t. Our goal is to prove that, for each r = 0, . . . , k − 1,


⌈(n + k)/2⌉
comp(Sr ) ≥ tr
.
k
q

(3.3)

We prove (3.3) by induction on tr where the case tr ≤ 0 is trivial. By the
i
h inductive
hypothesis, we can assume that every element of Sr is comparable to fewer than ⌈(n+k)/2⌉
k
q

other elements of Sr . If Sr contains an element of dimension s < k, then we can shift all such
elements up to subspaces of dimension k + s without increasing the number of comparable
pairs (as in the proof of Theorem 3.1) since






n−k+1
⌈(n + k)/2⌉
n
−
≥
k
k
k−1 q
q
q
if n0 (k) is chosen large enough with respect to k.
Now, we let Pr∗ be the poset obtained from Pr by deleting all elements of dimension less
than k and let D be a digraph with V (D) = Pr∗ containing every arc (x, y) such that either
• x is comparable to y and the dimension of y is closer to n/2 than the dimension of x, or
• x < y and the dimension of x is n minus the dimension of y.
Let Cµ be a uniformly random chain in Pr∗ obtained by taking a random maximal chain in
V (q, n) and intersecting it with Pr∗ . It is not hard to show that


n

P (x ∈ Cµ ) ≥  n−k+1+2r 
2



−1

for all x ∈ Pr∗ and

q

⌈(n + k)/2⌉
P (y ∈ Cµ | x ∈ Cµ ) ≤
k

−1
q

for all (x, y) ∈ E(D).

The result follows.
Our main difficulty in proving Theorem 1.4 is that one can no longer obtain a good bound
by taking a uniformly random maximal chain in {0, 1, 2}n and applying Lemma 2.2. Much
of the next section is devoted to constructing a more appropriate distribution on chains in
{0, 1, 2}n and studying its properties.

8

4

Supersaturation in {0, 1, 2}n

We open this section with a basic definition.
Definition 4.1. A poset P is said to be ranked if it can be partitioned into non-empty sets
L0 , . . . , LN called levels such that
S
• if x ∈ Li and x < y, then y ∈ j>i Lj ,
• if x < y such that x ∈ Li and y ∈ Lj for j > i + 1, then there exists z ∈ Li+1 such that
x < z < y.

If x ∈ Li , then we say that the rank of x is i.
It is clear that {0, 1, 2}n is a ranked poset where Li is the set of vectors in {0, 1, 2}n whose
coordinates sum to i. Also, the posets P(n) and V (q, n) are both ranked posets where the
rank of an element is equal to its cardinality or dimension, respectively.
In the previous section, we used the fact that a uniformly random chain of maximal length
in P(n) or V (q, n) is equally likely to contain any element of rank i. The poset {0, 1, 2}n
does not have this property. That is, one can easily show that for n ≥ 2 a uniformly random
maximal chain is not equally likely to contain any given element in Li for 2 ≤ i ≤ 2n − 2.
Therefore, if we are to apply Lemma 2.2 to obtain a supersaturation result which applies
to all subsets of {0, 1, 2}n of cardinality greater than ℓn (n), then we will require a different
distribution on the chains of {0, 1, 2}n .
Definition 4.2. Let P be a ranked poset with non-empty levels L0 , . . . , LN . A non-empty
finite multiset C of maximal chains in P is called a regular covering by chains if for 0 ≤ i ≤ N
every element of Li is contained in exactly |C |/|Li | chains of C .
As noted above, the collection of all maximal chains in {0, 1, 2}n is not a regular covering
by chains. However, Anderson [1] proved that {0, 1, 2}n does possess a regular covering by
chains (in fact, he proved that the same is true for the poset of divisors of any integer; see
also [3]). The following useful result of Kleitman [25] characterises ranked posets with regular
coverings by chains in terms of two other natural conditions, one of which will be used in our
proof.
Definition 4.3. Let P be a ranked poset with levels L0 , . . . , LN . Then P is said to have the
LYM property if, for every antichain A ⊆ P ,
N
X
|A ∩ Li |
i=0

|Li |

≤ 1.

Definition 4.4. Let P be a ranked poset with levels L0 , . . . , LN . Then P is said to have the
normalised matching property if for 0 ≤ i ≤ N − 1 and T ⊆ Li we have
|T |
|{y ∈ Li+1 : y > x for some x ∈ T }|
≥
.
|Li+1 |
|Li |
Theorem 4.5 (Kleitman [25]). Let P be a ranked poset. The following are equivalent: (1) P
has a regular covering by chains, (2) P has the LYM property and (3) P has the normalised
matching property.
9

The distribution µ on the maximal chains of {0, 1, 2}n that we construct essentially
amounts to choosing a uniformly random chain from a regular covering by chains. One
subtle point is that, in the proof of Theorem 1.4, it will be useful to insist that the distribution µ is ‘memoryless’ in the sense that if z1 < z2 < · · · < zq in {0, 1, 2}n and Cµ is a chain
chosen randomly according to µ, then
P (zq ∈ Cµ | z1 , . . . , zq−1 ∈ Cµ ) = P (zq ∈ Cµ | zq−1 ∈ Cµ ) .

(4.6)

Note that a chain chosen uniformly at random from a regular covering by chains need not
satisfy (4.6). Also note that, if (4.6) holds for every such sequence, then one can easily deduce
P (z1 ∈ Cµ | z2 , . . . , zq ∈ Cµ ) = P (z1 ∈ Cµ | z2 ∈ Cµ )
as well. Before constructing µ, we require a couple of definitions.
Definition 4.7. For integers i and s, let Lsi be the elements of Li with exactly s coordinates
equal to 2. Note that Lsi is non-empty if and only if max{0, i − n} ≤ s ≤ ⌊i/2⌋.
Definition 4.8. For integers i and s, define
L≥s
i

:=

⌊i/2⌋

[

Lri and

r=s

L≤s
i :=

s
[

Lri .

r=max{0,i−n}

Our goal is to construct a distribution µ on the maximal chains in {0, 1, 2}n such that
(4.6) holds and, for 0 ≤ i ≤ 2n, every element of Li is equally likely to be contained in Cµ .
We begin by insisting that Cµ contains (0, . . . , 0) with probability one and that it is equally
likely to contain any element of L1 .
Now, suppose that Cµ has been constructed up to level i where 1 ≤ i ≤ 2n − 2. In order
for (4.6)to hold, we
must choose an element of Li+1 to add to Cµ independently of the choice
Si−1 
of Cµ ∩
j=1 Lj . That is, our goal is to define the values of P(y ∈ Cµ | x ∈ Cµ ) for all
x ∈ Li and y ∈ Li+1 with x < y in such a way that each element of Li+1 is equally likely to
be contained in Cµ .
We rephrase the problem of defining these conditional probabilities as follows. Suppose
that we define a weighting of Li+1 by assigning each element of Li a weight of 1/|Li | and
then redistributing the weight in such
P a way that each x ∈ Li sends weight wx,y ≥ 0 to each
y ∈ Li+1 comparable to x, where y∈Li+1 wx,y = 1/|Li |. What we would like to do is to fix
x<y

the weights wx,y in such a way that every element of Li+1 receives weight 1/|Li+1 |. Note that,
for max{0, i − n} ≤ s ≤ ⌊(i − 2)/2⌋ all of the weight sent by elements of Li≥s+1 is received by
≥s+1
≥s+1
elements of Li+1
. So, the total weight received by the set Li+1
is


 ≥s+1 
Li

X
+
wx,y .
|Li |
s+1
s
(x,y)∈Li ×Li+1
x<y

10

In order to achieve the desired weighting of Li+1 , we need this quantity to be equal to
which implies that




 ≥s+1 
 ≥s+1 
|Li | Li+1
 − |Li+1 | Li

X
.
wx,y =
|Li | |Li+1 |
s+1
s



 ≥s+1 
Li+1 
|Li+1 |

,

(4.9)

(x,y)∈Li ×Li+1
x<y

Similarly since, for max{0, i + 1 − n} ≤ s ≤ ⌊i/2⌋, all of the weight sent by elements of Li≤s−1
is received by elements of L≤s
i+1 , we require that

 


  ≤s−1 
|Li | L≤s
−

L
 |Li+1 |
X
i+1
i
wx,y =
.
(4.10)
|Li ||Li+1 |
s
s
(x,y)∈Li ×Li+1
x<y

We insist that our construction has the property that wx,y depends only on the number of
coordinates of x and y which are equal to two. That is, if x ∈ Lsi and y ∈ Ls+1
i+1 for some s,
′ . The left sides of (4.9)
then set wx,y = wi,s and if x ∈ Lsi and y ∈ Lsi+1 , then set wx,y = wi,s
′ , respectively. Rearranging, we get
and (4.10) become (i − 2s)|Lsi |wi,s and (n − i + s)|Lsi |wi,s
that, for max{0, i − n} ≤ s ≤ ⌊(i − 1)/2⌋,




 ≥s+1 
 ≥s+1 
|Li | Li+1  − |Li+1 | Li

wi,s =
(4.11)
s
|Li | |Li | |Li+1 | (i − 2s)
and, for max{0, i − n + 1} ≤ s ≤ ⌊i/2⌋,
′
wi,s
=






 ≤s−1 

|Li | L≤s
L
−
|L
|



i+1
i+1
i
|Lsi | |Li | |Li+1 | (n − i + s)

.

(4.12)

′
For completeness, if i is even, then set wi,i/2 := 0 and if i ≥ n, set wi,i−n
:= 0. The weights
′
n
wi,s and wi,s are all non-negative since {0, 1, 2} has the normalised matching property.
So, we extend the chain Cµ to level i + 1 in the following way. Given that Cµ contains
x ∈ Lsi , then we add an element y of Li+1 comparable to x to Cµ , independently of the choice
′
s
of Cµ \ {x}, with probability |Li |wi,s if y ∈ Ls+1
i+1 and with probability |Li |wi,s if y ∈ Li+1 .
s
Note that x is comparable to i − 2s elements of Ls+1
i+1 and n − i + s elements of Li+1 and that
′
(i − 2s)wi,s + (n − i + s)wi,s = 1/|Li | = P(x ∈ Cµ ) by definition.
Let us verify that any element of Li+1 is contained in Cµ with probability 1/|Li+1 |. By
construction, given y ∈ Lti+1 , the probability that y is contained in Cµ is

X

x∈Li
x<y

P (x, y ∈ Cµ ) =

X

x∈Lt−1
i

P (x ∈ Cµ ) P (y ∈ C | x ∈ Cµ ) +

X

x∈Lti

P (x ∈ Cµ ) P (y ∈ C | x ∈ Cµ ) .

x<y

x<y

′ =
If t = 0, then the first sum is zero and the second is equal to (i + 1)wi,0





(i+1)L≤0
i+1 

=
|L0i ||Li+1 |(n−i)
1/|Li+1 |. If i is odd and t = (i + 1)/2, then the second sum is zero and the first is equal to
11

i+1
2





 ≥(i+1)/2 
(i+1)Li+1



 (i−1)/2 
2Li
|Li+1 |

wi,(i−1)/2 =

= 1/|Li+1 |. Finally, if max{i + 1 − n, 1} ≤ t ≤ ⌊i/2⌋, then

the above expression becomes

′
twi,t−1 + (i + 1 − 2t)wi,t













 ≥t 
 ≤t 
 ≤t−1 
t |Li | L≥t
−
|L
|
(i
+
1
−
2t)
|L
|
−
|L
|

i+1 Li 
i Li+1 
i+1 Li
i+1 
=  t−1 
+
t
L  |Li | |Li+1 | (i − 2t + 2)
|Li | |Li | |Li+1 | (n − i + t)






 
 i 
 ≤t 
 ≤t−1 


 ≥t 
|L
|
−
|L
|
|Li | L≥t
−
|L
|

i Li+1 
i+1 Li
i+1 Li 
i+1 
+
=
n  i+1−t
n  i+1−t
|Li | |Li+1 |
|Li | |Li+1 |
i+1−t
t
i+1−t
t
=

n
i+1−t



|Lti+1 |

i+1−t
t



|Li+1 |

=

1

|Li+1 |

.

We complete the construction by insisting that Cµ contains (2, . . . , 2) with probability one.
Most of the work in this section is devoted to proving the following lemma.
Lemma 4.13. Let k ≥ 1 be a fixed integer, let n be large with respect to k and let Cµ be a
chain chosen randomly according to µ. Let 0 ≤ i, j ≤ 2n be integers such that
• |i − j| ≥ k,
• either min{i, j} ≥ 2k or max{i, j} ≤ 2n − 2k, and
• |j − n| ≤ |i − n|.
If x ∈ Li and y ∈ Lj are such that x is comparable to y, then
P (y ∈ Cµ | x ∈ Cµ ) ≤



−1
ℓ3k−1 (n)
.
−1
ℓ2k−1 (n)

We now derive Theorem 1.4 from Lemma 4.13 after which we will turn our attention to
proving the lemma itself.
Proof of Theorem 1.4 assuming Lemma 4.13. For 0 ≤ r ≤ k−1,
 let Pr be the poset consisting
modulo k with partial order
all elements of {0, 1, 2}n of rank equivalent to n + 2r−k+1
2
n
inherited from {0, 1, 2} . Define Sr := S ∩ Pr and
tr := |Sr | − ℓn+⌈ 2r−k+1 ⌉ (n).
2

Clearly,

Pk−1

r=0 tr

= t. We prove that, for each r = 0, . . . , k − 1,


ℓ3k−1 (n)
comp(Sr ) ≥
− 1 tr .
ℓ2k−1 (n)

(4.14)

We prove (4.14) by induction on tr where the case tr ≤ 0 is trivial. By the inductive
ℓ3k−1 (n)
hypothesis, we can assume that every element of Sr is comparable to fewer than ℓ2k−1
(n) − 1
other elements of Sr .
12

Next, we prove that it suffices to consider the case that Sr contains no elements of rank
less than 2k. First, let A be the set of all elements of Sr of rank less than k. Clearly, each
element of A has rank r. Let us show that we can assume that A is empty. For each subset
T of A, let Γ(T ) denote the elements of Lr+k comparable to at least one member of T . If we
had |Γ(T ) \ Sr | ≥ |T | for every subset T of A, then by Hall’s Marriage Theorem [21] we could
associate each element of x ∈ A to an element f (x) of Lr+k \ Sr such that x < f (x) and the
function f is injective. Given such a function f , it is clear that the set S ′ := (Sr \ A) ∪ f (A)
has the same cardinality as Sr and at most as many comparable pairs as Sr .
Thus, we suppose that no such f exists and so there there must be a set T ⊆ A such that
|Γ(T ) \ Sr | < |T |. Since {0, 1, 2}n has the normalised matching property, we have
|Γ(T )| |Γ(T ) \ Sr |
|Lr+k |
|Γ(T ) ∩ Sr |
=
−
>
−1
|T |
|T |
|T |
|Lr |
which is at least

ℓ3k−1 (n)
ℓ2k−1 (n)

− 1 by Theorem A.3. Putting these two facts together, we have
|Γ(T ) ∩ Sr | >




ℓ3k−1 (n)
− 1 |T |.
ℓ2k−1 (n)

(4.15)

So, by the Pigeonhole Principle, there must be some element of T which is comparable to
ℓ3k−1 (n)
more than ℓ2k−1
(n) − 1 elements of Sr , which is a contradiction. Thus, Sr contains no elements
of rank less than k. Applying the same argument to the elements of Sr of rank r+k (and using
the fact that Sr has no elements of rank r, which we just proved), we get that Sr contains no
elements of rank less than 2k.
Now, we let Pr∗ be the poset obtained from Pr by deleting all elements of rank less than
2k. By the above argument, we can assume Sr ⊆ Pr∗ . Let D be a digraph with V (D) = Pr∗
containing every arc (x, y) such that
• x is comparable to y and the rank of y is closer to n than the rank of x, or
• x < y and the rank of x is 2n minus the rank of y.
Let Cµ be a random chain in Pr∗ obtained by taking a random chain in {0, 1, 2}n chosen
according to µ and intersecting it with Pr∗ . Provided that n0 (k) is sufficiently large, the
theorem now follows from Lemmas 2.2 and 4.13.

4.1

Proof of Lemma 4.13

It is clear by construction of µ that one can obtain an upper bound on P (y ∈ Cµ | x ∈ Cµ )
′ from
when x and y are in consecutive levels by bounding the ‘weight functions’ wi,s and wi,s
above. Our first step is to bound the weight functions relative to one another.
′ <w .
Proposition 4.16. For 1 ≤ i ≤ n − 1 and 0 ≤ s < i/2 we have wi,s
i,s

Proof. Define a weighting of the elements of Li+1 by first assigning weight one to each element
of Li and then redistributing the weight so that, for 0 ≤ s ≤ ⌊i/2⌋, each x ∈ Lsi sends weight
s+1
′ to each y ∈ Ls
|Li |wi,s
i+1 comparable to x and weight |Li |wi,s to each y ∈ Li+1 comparable
′ we see that, after redistributing,
to x. By construction of the weight functions wi,s and wi,s
each element of Li has weight zero and each element of Li+1 has weight |Li |/|Li+1 |.
13

Now, we define a second weighting of Li+1 by assigning each element of Li weight one and
redistributing the weight so that each element of Lsi sends its weight evenly to the elements
of Li+1 comparable to it. Under this weighting, each y ∈ Lsi+1 receives weight
f (s) :=

s
i + 1 − 2s
+
.
n+1−s
n−s

We claim that f (s) is strictly decreasing in s for s in the range 0 ≤ s ≤ i+1
2 . Indeed, for
i−1
0 ≤ s ≤ 2 , we have
 


s
i − 2s + 1
s + 1 i − 2s − 1
+
+
−
f (s + 1) − f (s) =
n−s
n−s−1
n−s+1
n−s
(n − i)(s − n − 1) − 2s
s(n − i − 2) − (n − i)(n + 1)
=
.
=
(n − s + 1)(n − s)(n − s − 1)
(n − s + 1)(n − s)(n − s − 1)
The denominator is always positive for 0 ≤ s ≤ n−2
2 . If i ∈ {n − 2, n − 1}, then the numerator
is clearly negative. Finally, if 1 ≤ i ≤ n − 3, then the numerator is again negative since
n−2
0 ≤ s ≤ i−1
2 ≤ 2 < n + 1 and n − i − 2 < n − i. Thus, f (s) is strictly decreasing in s.
≤s
Therefore, for 0 ≤ s ≤ i−1
2 , the elements of Li+1 receive more weight on average under
≥s+1
the second weighting than do the elements of Li+1
. Note that, under both redistribution
≤s−1
≤s
rules, all of the weight from Li
is sent to Li+1 and all of the weight from Li≥s+1 is sent to
≥s+1
≥s+1
Li+1
. Therefore, the amount of weight received by the elements of Li+1
versus the amount
≤s
received by elements of Li+1 is only affected by the amount of weight that the elements of Lsi
choose to send to Lsi+1 and Ls+1
i+1 . As we have mentioned, the first redistribution rule assigns
each element of Li+1 to the same weight while the second assigns more weight to elements
of Li+1 which have fewer coordinates equal to two. Putting this all together, it must be the
case that, under the first redistribution rule, each x ∈ Lsi sends more weight to each element
s
of Ls+1
i+1 comparable to it than it sends to each element of Li+1 comparable to it. This proves
′ <w .
that wi,s
i,s
We also use a similar ‘weight redistribution trick’ to obtain various bounds on the ratio
|Li+1 |/|Li | which will be needed later in this section. Since these proofs are all fairly routine,
and not particularly enlightening, we have included them in the appendix.
′ exhibit
In what follows, it will be useful to notice that the weight functions wi,s and wi,s
a certain symmetry around the nth level. Specifically,




 ≤n−i+s 
 ≤n−i+s−1 
|L2n−i−1 | L2n−i  − |L2n−i | L2n−i−1 
′
 n−i+s 
w2n−i−1,n−i+s
=
L
 |L2n−i−1 ||L2n−i |(s + 1)
 2n−i−1




 ≤s 

|Li+1 | L≤s
L
−
|L
|


i
i
i+1 
= wi,s
(4.17)
=
s
|Li | |Li+1 ||Li |(i − 2s)
and, similarly,
′
w2n−i−1,n−i+s−1 = wi,s
.

Next, we prove an upper bound on wi,s which is tight when i is odd and s =
result for the ‘upper half’ of {0, 1, 2}n follows from (4.17).
14

(4.18)
i−1
2 .

An analogous

Proposition 4.19. Suppose that n ≥ 5. Then for 1 ≤ i ≤ n − 1 and 0 ≤ s <
2
.
wi,s ≤ (i+1)|L
i+1 |
Proof. If there is an integer s such that 0 ≤ s <

i
2

i
2

we have

and

2 |Li | s(s + 1)(n − i + s)(n − i + s + 1)

≤ (i − 2s − 1)(i − 2s)(i − 2s + 1) ((i + 1)|Li+1 | − (n − i + s + 1)|Li |) ,

(4.20)

then we let s0 be the largest such integer. Otherwise, set s0 := 0. Note that both sides of
(4.20) are non-negative for all s such that 0 ≤ s < 2i , where Lemma A.4 is used to verify
that the right side is non-negative. If s0 ≥ 1, then the inequality (4.20) must hold for all
0 ≤ i ≤ n−1 and s such that 0 ≤ s ≤ s0 and must fail to hold for all s such that s0 +1 ≤ s < 2i ;
this is because, for fixed 0 ≤ i ≤ n − 1 and s in the range 0 ≤ s < 2i , the left side of (4.20) is
increasing in s and the right side is decreasing in s.
2
By (4.11), the inequality wi,s ≤ (i+1)|L
can be rewritten as follows:
i+1 |

or, equivalently,






 ≥s+1 
 ≥s+1 
(i + 1) |Li | Li+1
L
−
|L
|

 ≤ 2 |Lsi | |Li | (i − 2s)
i+1  i







 ≥s+1 
 ≥s+1 
|Li | (i + 1) Li+1
 − 2(i − 2s) |Lsi | ≤ |Li+1 | (i + 1) Li
.

(4.21)

i
Our goal is to prove that
 i  (4.21) holds for 0 ≤ s < 2 . The argument will either use induction
on s or induction on 2 − s depending on whether s ≤ s0 or s ≥ s0 + 1. Before proving the
case s ≤ s0 , though, we need to verify the ‘base case’ s = 0.

Case 1: s = 0.
In this case, (4.21) becomes

 
 

|Li | (i + 1) |Li+1 | − (i + 1) L0i+1  − 2i L0i  ≤ |Li+1 | (i + 1) |Li | − L0i  .


 


n
Since (i + 1) L0i+1  = (i + 1) i+1
= (n − i) ni = (n − i) L0i , this simplifies to
(i + 1) |Li+1 | ≤ (n + i) |Li | .

(4.22)

To prove (4.22), we observe that each element of Lri is comparable to n − r elements of Li+1
and each element of Lri+1 comparable to i + 1 − r elements of Li . Therefore,
i+1
⌊X
2 ⌋

r=0

⌊ 2i ⌋
 r  X
(i + 1 − r) Li+1  =
(n − r) |Lri | .
r=0

This equality can be rewritten as follows:

i+1
i
⌊X
⌊X
2 ⌋
2⌋
 r 
r Li+1  = (n + i) |Li | −
(i + r) |Lri | .
(i + 1) |Li+1 | −

r=0

r=0

15

So, after a change of index, we see that (4.22) is equivalent to
i−1
i
⌊X
⌊X
2⌋
2 ⌋


r

(i + r) |Li | ≥
(r + 1) Lr+1
i+1 .

r=0

For 0 ≤ r ≤

 i−1 
2

we have

(i +

r) |Lri |

r=0







(i + r) Lr+1
n
i−r
i+1
= (i + r)
=

i−r
i−r
r
r+1




(i + r)(r + 1)  r+1 

=
Li+1 ≥ (r + 1) Lr+1
i+1
i − 2r

i−r
r



and so (4.22) holds. This completes the proof in this case.
Case 2: 1 ≤ s ≤ s0 .

We can assume, by induction and the previous case, that (4.21) is true if s is replaced by
s − 1. That is, we assume that the following inequality is true:





 s−1 


L  ≤ |Li+1 | (i + 1) L≥s  .
|Li | (i + 1) L≥s
−
2(i
−
2s
+
2)

i
i+1
i

Subtracting this inequality from (4.21), we see that it suffices to prove that
 s−1 


s



|Li | (i + 1) Ls+1
i+1 − 2(i − 2s) |Li | + 2(i − 2s + 2) Li


.
≤ |Li+1 | (i + 1) Ls+1
i






s  s−1  and Ls+1  into the above inequality, it

After substituting the values of Ls+1
i
i+1 , |Li |, Li
becomes










n
i−s
n
i−s
n
i−s+1
|Li | (i + 1)
− 2(i − 2s)
+ 2(i − 2s + 2)
i−s s+1
i−s
s
i−s+1
s−1



n
i−s−1
≤ |Li+1 | (i + 1)
.
i−s−1
s+1

By simplifying this expression, one can show that it is in fact equivalent to (4.20), which holds
for s because s ≤ s0 . This completes the proof in this case.
Case 3: s0 + 1 ≤ s < 2i .
In the case that i is odd and s =

i−1
2

we have wi,s =

2
(i+1)|Li+1 | by definition and so the
4
by (4.11).
wi,s = i|L2i+1 | − (2n−i)|L
i|

result holds with equality. If i is even and s = i−2
2 , then
2
In this case, the bound wi,s ≤ (i+1)|Li+1 | reduces to the following:
(2n − i)|Li | ≤ 2(i + 1)|Li+1 |.

Since 1 ≤ i ≤ n − 1, this inequality holds by Lemmas A.4, A.5 and A.6.
 
So, we are done unless s0 < s < 2i − 1. We can assume, by induction on 2i − s, that
(4.21) is true if s is replaced by s + 1. That is, we assume that the following inequality holds:







 ≥s+2 
 ≤ |Li+1 | (i + 1) L≥s+2  .
|Li | (i + 1) Li+1
 − 2(i − 2s − 2) Ls+1
i
i
16

Similar to the proof of the previous case, we can derive (4.21) from the above inequality
provided that we can prove the following:


 s+1 



 + 2(i − 2s) |Lsi |
|Li | (i + 1) Ls+2
i+1 − 2(i − 2s − 2) Li


.
> |Li+1 | (i + 1) Ls+2
i

Simplifying this expression in a similar fashion to the proof of the previous case, we see that
it is equivalent to the following inequality:
2 |Li | (s + 1)(s + 2)(n − i + s + 1)(n − i + s + 2)
> (i − 2s − 3)(i − 2s − 2)(i − 2s − 1) ((i + 1) |Li+1 | − (n − i + s + 2) |Li |) .
This is precisely the negation of (4.20) with s is replaced by s + 1. This inequality holds
because s > s0 and s0 was chosen to be the largest index satisfying (4.20). This completes
the proof of the proposition.
We derive the following corollary.
Corollary 4.23. For n ≥ 5 and 0 ≤ i ≤ 2n − 1, if x ∈ Li and y ∈ Li+1 such that x < y, then
(
2|Li |/(i + 1)|Li+1 | if i ≤ n − 1
P (y ∈ Cµ | x ∈ Cµ ) ≤
2/(2n − i)
otherwise.
Proof. Let max{0, i − n} ≤ s ≤ i/2 so that x ∈ Lsi . By construction, P (y ∈ Cµ | x ∈ Cµ ) is
′ |L |.
either equal to wi,s |Li | or wi,s
i
Suppose first that i ≤ n − 1. If s < i/2, then by Propositions 4.16 and 4.19, we have
2
′ are both bounded above by
that wi,s and wi,s
(i+1)|Li+1 | and we are done. In the case that

2
′
i is even and s = i/2, we have that wi,i/2 = 0 and wi,i/2
= 2n−i
which is bounded above
2
by (i+1)|Li+1 | by Lemmas A.4, A.5 and A.6. This completes the proof for i ≤ n − 1. The
case i ≥ n follows from the case i ≤ n − 1 via equations (4.17) and (4.18) and the fact that
P (y ∈ Cµ | x ∈ Cµ ) = P (x ∈ Cµ | y ∈ Cµ ) |Li+1 |/|Li |.

We are now ready to prove Lemma 4.13. The proof is divided into three cases depending
on whether
• |j − i| is ‘small,’
• |j − i| is ‘large’ and i + j = 2n, or
• |j − i| is ‘large’ and i + j 6= 2n.
The first case is done by summing over all chains containing x and y and applying (4.6)
and Corollary 4.23 to each of them. In the second case, we assume that (x, y) is chosen
from Li × Lj to maximise P (y ∈ Cµ | x ∈ Cµ ) and obtain a lower bound on the number of
y ′ ∈ Lj comparable to x such that P (y ′ ∈ Cµ | x ∈ Cµ ) = P (y ∈ Cµ | x ∈ Cµ ). Since the sum of
P (y ′ ∈ Cµ | x ∈ Cµ ) over all such y ′ is at most one, this lower bound on the number of such y ′
gives us an upper bound on P (y ∈ Cµ | x ∈ Cµ ). The third case is done by a simple inductive
trick which uses the first two cases.
17

Proof of Lemma 4.13. Let k ≥ 1 be a fixed integer and let n be sufficiently large with respect
to k. Let i, j be integers satisfying the hypotheses of the lemma. Note that, by the symmetry
of µ around level n (i.e. by equations (4.17) and (4.18)), we can assume that i < n. The
assumption |j − n| ≤ |i − n| can therefore be rewritten as i < j and i + j ≤ 2n.
Case 1: k ≤ j − i ≤ 11n/10.
It is clear that P (y ∈ Cµ | x ∈ Cµ ) is equal to the sum of P (zi+1 , . . . , zj ∈ Cµ | zi ∈ Cµ ) over
all sequences zi < zi+1 < · · · < zj such that zi = x and zj = y. The number of such sequences
is clearly bounded above by (j − i)! and, for every such sequence, we have
P (zi+1 , . . . , zj ∈ Cµ | zi ∈ Cµ ) =

j−1
Y
r=i

P (zr+1 ∈ Cµ | zr ∈ Cµ )

2|Li |
by (4.6). For i ≤ r ≤ n − 1, we have that P (zr+1 ∈ Cµ | zr ∈ Cµ ) ≤ (i+1)|L
≤ n2 by Coroli+1 |
lary 4.23 and Lemmas A.4, A.5 and A.6 and for n ≤ r ≤ j−1 we have P (zr+1 ∈ Cµ | zr ∈ Cµ ) ≤
j−i
2
2n−r by Corollary 4.23. Since i + j ≤ 2n, we have that i ≤ n − 2 and so we get

 ⌈(j−i)/2⌉
2⌊(j−i)/2⌋
2
P (zi+1 , . . . , zj ∈ Cµ | zi ∈ Cµ ) ≤
n
n(n − 1) · · · (n − ⌊(j − i)/2⌋ + 1)
j−i
2 (n − ⌊(j − i)/2⌋)!
=
.
n⌈(j−i)/2⌉ n!
As mentioned earlier, the number of such sequences is at most (j − i)! and so we obtain
2j−i (j − i)!(n − ⌊(j − i)/2⌋)!
.
(4.24)
n⌈(j−i)/2⌉ n!
−1
In the case j − i = k, the right side is at most 2k nk
which, by (1.5) and the fact that

−1
ℓ3k−1 (n)
ℓ2 (n)
n−1
for n0 (k) sufficiently large and so we are done.
ℓ1 (n) − 1 = 2 , is less than ℓ2k−1 (n) − 1
Also, the right side is decreasing in j − i for k ≤ j − i ≤ n/10 and so we are done for j − i in
this range as well.
So, we assume that n/10 < j − i ≤ 11n/10. If we define c := j−i
n , then (4.24) can be
rewritten as
2cn (cn)!(n − ⌊cn/2⌋)!
P (y ∈ Cµ | x ∈ Cµ ) ≤
.
n⌈cn/2⌉ n!
Applying Stirling’s Approximation, we see that the right side is bounded above by


√ cn cn cn  n(1−c/2) n(1−c/2)


 
√
e
e
(2c)c (1 − c/2) n
 n2


O
n c/2
.
=O
n
e (1 − c/2)c/2
ncn/2 ne
P (y ∈ Cµ | x ∈ Cµ ) ≤

(2c)c (1−c/2)
ec/2 (1−c/2)c/2

< 0.99 for 1/10 < c ≤ 11/10 and so the above expression decreases
−1

ℓ3k−1 (n)
−
1
for n0 (k) sufficiently large.
exponentially with n and therefore is less than ℓ2k−1
(n)
This completes the proof in this case.

Notice that

Case 2: i + j = 2n and i < 9n/20.
18

In this case, we suppose further that the pair (x, y) is chosen from Li × L2n−i so that
P (y ∈ Cµ | x ∈ Cµ ) is maximised. We prove the following claim.
Claim 4.25. If there exist a coordinate α ∈ [n] such that xα = 0 and yα = 2, then for every
coordinate β ∈ [n] with xβ = 1 we have yβ = 2.
Proof. Suppose to the contrary that there is a coordinate α ∈ [n] such that xα = 0 and yα = 2
and a coordinate β ∈ [n] with xβ = yβ = 1. Let τα,β : {0, 1, 2}n → {0, 1, 2}n be the function
which exchanges the αth coordinate with the βth coordinate. Note that x < τα,β (y). Our
goal is to show that
P (τα,β (y) ∈ Cµ | x ∈ Cµ ) > P (y ∈ Cµ | x ∈ Cµ )
which will contradict our choice of x and y.
Given a sequence Z = (zi , . . . , z2n−i ) of elements of {0, 1, 2}n with zi < · · · < z2n−i , zi = x
and z2n−i = y define ℓ(Z) to be the smallest integer ℓ such that the αth coordinate of zℓ is a
two. For every such sequence, define another sequence π(Z) as follows:


π(Z) := zi , . . . , zℓ(Z)−1 , τα,β zℓ(Z) , . . . , τα,β (z2n−i ) .
Notice that π(Z) is a chain starting with x and ending at πα,β (y). It is not hard to see that
the function π is injective. Now, the key observation is that, by construction of Cµ , for any
such sequence Z, we have
P (zi+1 , . . . , z2n−i ∈ Cµ | zi ∈ Cµ )


= P zi+1 , . . . , zℓ(Z)−1 , τα,β zℓ(Z) , . . . , τα,β (z2n−i ) ∈ Cµ | zi ∈ Cµ .

This proves P (τα,β (y) ∈ Cµ | x ∈ Cµ ) ≥ P (y ∈ Cµ | x ∈ Cµ ) since P (y ∈ Cµ | x ∈ Cµ ) is equal
to the sum over all such sequences of P (zi+1 , . . . , z2n−i ∈ Cµ | zi ∈ Cµ ). In order to prove the
strict inequality, all that we need is a single chain containing x and τα,β (y) which is not a
subsequence of one of the chains π(Z) for Z as above. Any chain of the form x < z < τα,β (y)
with zβ = 2 has this property. This completes the proof of the claim.
We now prove that, in fact, there must be at least n/10 coordinates α ∈ [n] such that
xα = 0 and yα = 2. If not, then we must have that the rank of y is at most 2i+(n−i)+n/10 =
11n/10 + i. However, by assumption of this case, the rank of y is precisely 2n − i. Putting
this together, we get that 2n − i ≤ 11n/10 + i which implies that i ≥ 9n/20, a contradiction.
Thus, by Claim 4.25 we have that yβ = 2 for every coordinate β ∈ [n] with xβ ≥ 1.
By the result of the previous paragraph and the symmetry of the distribution µ, we see
that P (y ′ ∈ Cµ | x ∈ Cµ ) is equal to P (y ∈ Cµ | x ∈ Cµ ) for every y ′ ∈ L2n−i such that
• yβ′ = 2 for every coordinate β ∈ [n] with xβ ≥ 1, and
• y ′ has the same number of coordinates in {0, 1} as y.
By the hypotheses of the lemma and the fact that the rank of x plus the rank of y is 2n, we
must have that the rank of y is at most 2n − 2k. This implies that y must have at least k
coordinates in {0, 1}. Also, recall that we have proved above that there are at least n/10 ≫ k
coordinates such that α ∈ [n] such that xα = 0 and yα = 2. Since i < 9n/20, we have that x

19

has at least 11n/20 coordinates which are equal to zero. Putting all of this together, we get
that, for n0 (k) sufficiently large, the number of such y ′ is at least


⌈11n/20⌉
ℓ3k−1 (n)
>
−1
k
ℓ2k−1 (n)
by (1.5). Since P (y ′ ∈ Cµ | x ∈ Cµ ) is the same for all such y ′ and the sum of this quantity

−1
ℓ
(n)
over all y ′ is at most one, we must have that P (y ∈ Cµ | x ∈ Cµ ) ≤ ℓ3k−1
−
1
. This
2k−1 (n)
completes the proof in this case.
Case 3: j − i > 11n/10 and i + j < 2n.
In this case, we proceed by induction on 2n − i − j. The basis of our induction will be the
case 2n − i − j = 0, which is covered by Case 2. We can write P (y ∈ Cµ | x ∈ Cµ ) as
X
P (y, z ∈ Cµ | x ∈ Cµ )
z∈Li+1
x<z<y

=

X

z∈Li+1
x<z<y

by (4.6). Since

P

z∈Li+1
x<z<y

P (z ∈ Cµ | x ∈ Cµ ) P (y ∈ Cµ | z ∈ Cµ )

P (z ∈ Cµ | x ∈ Cµ ) ≤ 1, we see that it suffices to show that
P (y ∈ Cµ | z ∈ Cµ ) ≤



−1
ℓ3k−1 (n)
−1
ℓ2k−1 (n)

(4.26)

for every z ∈ Li+1 such that x < z < y. So, let z be any such element. By assumption, we
have that i + 1 < j and (i + 1) + j ≤ 2n and so the rank of y is at least as close to n as the
rank of z is. If we have j − (i + 1) ≤ 11n/10, then (4.26) holds by the argument given in
Case 1 and we are done. So, we assume that j − (i + 1) > 11n/10. If we have (i + 1) + j = 2n,
then (4.26) holds by the argument given in Case 2. Thus, we have that j − (i + 1) > 11n/10
and (i + 1) + j < 2n and we now get that (4.26) holds by the inductive hypothesis. This
completes the proof of the lemma.

5

Containers for Antichains

In this section, we generalise a container-type lemma for the boolean lattice proved by Balogh,
Mycroft and Treglown [6] to general posets. The main idea in the proof originated in the
work of Kleitman and Winston [26] and has now been used many times; see, e.g., [6, 8, 31].
In essence, what this lemma says is that if P satisfies a certain supersaturation bound, then
there is a collection of ‘not very large’ subsets of P indexed by ‘very small’ subsets of P with
the property that every antichain in P is contained in at least one set from the collection. The
elements of such a collection are referred to as containers. The fact that the containers are
indexed by small subsets of P is typically used to argue that the total number of containers
is very small compared to the total number of antichains.
X
Definition 5.1. Given a set X and an integer j, we let ≤j
denote the set of all subsets of

Pj
n
m of cardinality at most j. Also, for n ≥ j, define ≤j := r=0 nr .
20

Lemma 5.2. Let d and m be positive integers and let P be a poset such that |P | > m and
every subset S of P of cardinality greater than m contains at least |S|d comparable pairs.
Then there exists a function




P
P
f:
→
≤ |P |/(2d + 1)
≤m
such that for every antichain I ⊆ P there exists a subset T of I of cardinality at most
|P |/(2d + 1) with T ∩ f (T ) = ∅ and I ⊆ T ∪ f (T ).
A key idea from [6] is that it can often be advantageous to prove a ‘multi-stage’ container
lemma, where the purpose of the early stages is to ‘thin out’ the poset to reduce the overall
number of containers (see also [8]). We prove the following lemma of this type, which implies
Lemma 5.2.
Lemma 5.3. For k ≥ 1 let d1 > · · · > dk and m0 > · · · > mk be positive integers and let P
be a poset such that |P | = m0 and, for 1 ≤ j ≤ k, every subset S of P of cardinality greater
than mj contains at least |S|dj comparable pairs. Then there exists functions f1 , . . . , fk where




P
P
Pj
fj :
→
≤ r=1 (mr−1 /(2dr + 1))
≤ mj
such that for every antichain I ⊆ P there exists disjoint subsets T1 , . . . , Tk of I with
(i) |Tj | ≤ mj−1 /(2dj + 1) for 1 ≤ j ≤ k,
S

j−1
(ii) Tj ⊆ fj−1
T
r=1 r for 2 ≤ j ≤ k − 1,

(iii)

S

j
r=1 Tr

(iv) I ⊆

S
k



∩ fj

S

j
r=1 Tr



= ∅ for 1 ≤ j ≤ k and


S

k
∪
f
.
T
T
r
r
k
r=1
r=1

Proof. Fix an arbitrary total order x1 , . . . , x|P | on the elements of P (this will only be used to
‘break ties’ later in the proof). The proof of this lemma amounts to a simple application of the
so-called Kleitman–Winston algorithm [26]. This algorithm takes, as an input,
S an antichain

k
I of P and produces the sets T1 , . . . , Tk as well as the sets f1 (T1 ), . . . , fk
. After
T
r
r=1
describing this algorithm, we will verify that these sets have all of the
Sdesiredproperties and
j
that the functions f1 , . . . , fk are well defined; i.e., we show that fj
r=1 Tr depends only
Sj
on r=1 Tr and not on the input antichain I or on the sets T1 , . . . , Tj individually.
Given a set S ⊆ P and x ∈ S, define NS (x) to be the set of elements of S that are
comparable to x and let dS (x) := |NS (x)|. Set P0 := P and let u0 be the element of P0 such
that dP0 (u0 ) is maximum; if there is a tie, then we let u0 be the choice which comes earliest
in the total order. Now, given i ≥ 1, the set Pi−1 and an element ui−1 of Pi−1 , the ith step
of the algorithm will either terminate or it will produce a non-empty set Pi ( Pi−1 and an
element ui of Pi which it will pass to the next step. We proceed differently depending on the
value of dPi−1 (ui−1 ).
Case 1: dPi−1 (ui−1 ) ≥ 2dk .
21

Let j be the smallest integer in {1, . . . , k} such that dPi−1 (ui−1 ) ≥ 2dj . If ui−1 ∈
/ I, then
we define Pi := Pi−1 \ {ui−1 }. On the other
hand, if ui−1 ∈ I, then we add ui−1 to Tj and

define Pi := Pi−1 \ {ui−1 } ∪ NPi−1 (ui−1 ) . It is clear that Pi ( Pi−1 .
If Pi 6= ∅, then let ui ∈ Pi such that dPi (ui ) is maximum and, subject to this, ui comes
earliest in the total order. If, in addition, dPi (ui ) ≥ 2dj , then we simply proceed to the next
step of the algorithm.
Suppose now that Pi = ∅ or that dPi (ui ) < 2dj . In the former case, set ℓ := k − j and, in
the latter case, let ℓ ∈ {0, . . . , k − j} be the largest integer such that dPi (ui ) < 2dj+ℓ . We do
the following:
• terminate the definition of Tj ,
• set Tj+1 , . . . , Tj+ℓ := ∅,
S

S

j
j+ℓ
=
·
·
·
=
f
:= Pi .
• set fj
T
T
r
r
j+ℓ
r=1
r=1

If Pi = ∅, then terminate the algorithm; otherwise, proceed to the next step.
Case 2: dPi−1 (ui−1 ) < 2dk .
In this case, we simply terminate the algorithm. This concludes the description of the
algorithm.
A key feature of the algorithm is that the sequence dP0 (u0 ), dP1 (u1 ), . . . is non-increasing,
which follows easily from the choice of the elements u0 , u1 , . . . and the fact that Pi ( Pi−1
for all i ≥ 1. Since this sequence is non-increasing and d1 > · · · > dk we see that, for each
j ∈
of Tj and
S the definition

S{1, . . . ,k}, there is a unique step of the algorithm such that
j
j
′
fj
r=1 Tr are defined before
r=1 Tr is finalised. Also, if 1 ≤ j < j ≤ k, then Tj and fj
S ′

j
Tj ′ and fj ′
r=1 Tr .
It is clear by construction that (ii) and (iii) hold and that Tj ⊆ I for 1 ≤ j ≤ k. Also,
(iv) holds since we never delete an
Selement
 of I during the running of the algorithm. By
j
construction, every element of fj
Tr is comparable to fewer than 2dj other elements
 S
S

r=1S




j
j
j
in fj
.
Therefore,
comp
f
T
<
T
T
f
j
r
j
r=1 r  dj which implies that
r=1 r
 S r=1 


j
P 
fj
r=1 Tr  ≤ mj by hypothesis. This verifies that fj does, indeed, map into ≤mj . For
each element that we added to T1 , we deleted at least 2d1 + 1 elements of P . Therefore,
|T1 | ≤ |P |/(2d1 + 1) = m0 /(2d1 + 1). Similarly, for
Sj ≥ 2, for each element that we added
j−1
to Tj we deleted at least 2dj + 1 elements of fj−1
r=1 Tr and so |Tj | ≤ mj−1 /(2dj + 1).
Thus, (i) holds.
′
Finally, we argue that
Sj the functions f1 , . . . , fk are well defined. Let I and I be antichains
yielding the same set r=1 Tr for some j with 1 ≤ j ≤ k. Let u0 , u1 , . . . and P0 , P1 , . . .
be the elements and subsets of P produced while running the algorithm with input I and
let u′0 , u′1 , . . . and P0′ , P1′ , . . . be the elements and subsets of P produced while running the
algorithm with input I ′ . Let i denote the minimum integer such that dPi (ui ) < 2dj . We
prove that ut = u′t and Pt = Pt′ for all 0 ≤ t ≤ i. If not, let t be the smallest such integer
for which it fails. Clearly, t ≥ 1. Now, if Pt = Pt′ , then ut = u′t follows immediately so we
′ , the only way that we
must have Pt 6= Pt′ . However, since ut−1 = u′t−1 and Pt−1 = Pt−1
′
′
′
can have Pt 6= Pt is if ut−1 ∈ I and ut−1 ∈
/ I or vice versa. By definition of i, we have
22

S
dPt−1 (ut−1 ) ≥ 2dj and so ut−1 ∈ I implies ut−1 ∈ jr=1 Tr by the description of the algorithm.
However, u′t−1 ∈
/ I ′ implies that the algorithm will not add u′t−1 to any of thesets T1 , 
. . . , Tk
Sj
S
j
′
′
/ r=1 Tr , contradicting the fact that ut−1 = ut−1 . Therefore fj
and so ut−1 ∈
r=1 Tr does
S
not depend on I. This argument also proves that it depends only on the union jr=1 Tr and
not on the sets T1 , . . . , Tj individually. This completes the proof.
The following lemma is a consequence of Lemma 5.3 which we will use to count antichains
in the next section.
Lemma 5.4. For k ≥ 1 let d1 > · · · > dk and m0 > · · · > mk be positive integers and let P
be a poset such that |P | = m0 and, for 1 ≤ j ≤ k, every subset S of P of cardinality greater
than mj contains at least |S|dj comparable pairs. Then there is a collection F of subsets of
P such that

Q
mr−1
(a) |F| ≤ kr=1 ≤mr−1
/(2dr +1) ,
(b) |A| ≤ mk +

mr−1
r=1 2dr +1

Pk

for every A ∈ F and

(c) for every antichain I of P , there exists A ∈ F such that I ⊆ A.
Proof. Apply Lemma 5.3 to obtain the functions f1 , . . . , fk .For each
S antichain
 I, let T1,I , . . . , Tk,I
Sk
k
be disjoint sets as in Lemma 5.3 such that I ⊆
r=1 Tr,I ∪ f
r=1 Tr,I . Define
F :=

(

k
[

Tr,I

r=1

!

∪f

k
[

Tr,I

r=1

!

)

: I ⊆ P is an antichain .

Then (b) and (c) hold by construction. Let us show that (a) holds. The number of ways of

|P |
. Now, for 2 ≤ j ≤ k, given that T1,I , . . . , Tj−1,I have
choosing T1,I is at most ≤|P |/(2d
1 +1)
S

j−1
. Therefore, there are at most
been chosen, we know that Tj,I is a subset of fj−1
T
r,I
r=1

mj−1
ways to choose Tj,I . This argument proves (a).
≤mj−1 /(2dj +1)

6
6.1

Applications of the Container-Type Lemma
Counting Antichains

Before presenting the proofs of Theorems 1.6 and 1.7, we illustrate the the method by applying
Lemma 5.4 and Theorem 3.1 to obtain a short proof of a known upper bound on the number
of antichains in P(n). The problem of approximating the number of antichains in P(n) is
known as Dedekind’s Problem and has a long history; see Kahn [22].
Theorem 6.1 (See, e.g., [22]). The number of antichains in P(n) is at most


2

1+O

√

log(n)/n



n
(⌈n/2⌉
)

.

Proof. We generate a set of containers for the antichains of P(n) using Lemma 5.4. An
upper bound on the number of antichains will then follow by considering all subsets of the

23

n
n
√
√
2(⌊n/2⌋
(⌊n/2⌋
)
)
and
m
:=
containers. Set d1 := n log n, d2 := n log n, m0 := 2n , m1 := 1−8d
2
2
1−2d2 /n .
1 /n
If S is a subset of P(n) of cardinality at least m1 , then, by Theorem 3.1,


  2 
n
n
comp(S) ≥ |S| − 2
⌈n/2⌉
8
 2 

  2 
n
n
n
= (|S| − m1 )
+ m1 − 2
≥ (|S| − m1 )d1 + m1 d1 = |S|d1
8
8
⌈n/2⌉

  n2 
n
since m1 − 2 ⌊n/2⌋
= m1 d1 . Similarly, if S has cardinality at least m2 , then comp(S) ≥
8
|S|d2 . Therefore, we can apply Lemma 5.4 to P(n) with
k = 2 and these values of d1 , d2 , m0 , m1
2n 
and m2 to obtain a collection F of at most ≤2n /d1 ≤mm11/d2 containers, each of cardinality
n

2
1
at most m2 + m
d2 + d1 , such that each antichain of P(n) is contained in at least one container.
Thus, the number of antichains in P(n) is at most



n
m
m
2n
m1
2n
m2 + d 1 + 2d
2n /d1
m1 /d2 m2 + d21 + d1
2
1 ≤ (e · d1 )
2
(e
·
d
)
2
2
≤ m1 /d2
≤ 2n /d1

=2

n
m log (e·d2 )
m
2n log2 (e·d1 )
+ 1 d2
+m2 + d 1 + 2d
d1
2
2
1

m2 +O

≤2




2n log n m1 log n
+ d
d1
2

for n sufficiently large. Now, bounding the exponent, we get
 n√



 n

n 
p
2 log n
n
2 log n m1 log n
⌊n/2⌋
log n/n
+
+O
+
=
m2 + O
⌊n/2⌋
d1
d2
1 − 2d2 /n
n







p
n
n
n
4d2
log n/n
≤
+
+O
n ⌊n/2⌋
⌊n/2⌋
⌊n/2⌋
  n 

p
log n/n
= 1+O
⌊n/2⌋
 n
n 
2
since ⌊n/2⌋
=Θ √
by Stirling’s Approximation. The result follows.
n

We now prove Theorems 1.6 and 1.7 by following along similar lines to the proof of
Theorem 6.1 given above.
 2 
Proof of Theorem 1.6. For brevity, define N := |V(q, n)| and note that N = Θ q n /2 by

Theorem A.1. Let d :=

√

nq n/4 and m :=

h

i

n
⌊n/2⌋ q

h
i−1 .
1−d ⌈(n+1)/2⌉
1

Note that Theorem A.1 also

q
 2 
implies that m = Θ q n /2 and so m and N are of the same order of magnitude. By
Theorem 1.2, if S is a subset of V (q, n) of cardinality at least m, then

 !

n
⌈(n + 1)/2⌉
comp(S) ≥ |S| −
⌊n/2⌋ q
1
q



⌈(n + 1)/2⌉
= (|S| − m)
1



+
q



n
m−
⌊n/2⌋

 !
q

24

⌈(n + 1)/2⌉
1



q

≥ (|S| − m) d + md = |S|d.

N 
≤N/d

Thus, by Lemma 5.4, there is a collection of at most
N
d,

containers, each of cardinality

at most m +
such that each antichain is contained in at least one container. Thus, the
number of antichains in V (q, n) is at most


N
N
N
N
N
2m+ d ≤ (e · d) d 2m+ d = 2m+log N +( d )(log(e·d)+1)
≤ N/d
Since q is fixed, we can use Theorem A.1 to bound the exponent as follows:
h
i
n
 


⌊n/2⌋ q
N
N ·n
2
m + log N +
(log(e · d) + 1) ≤
h
i−1 + O n +
d
d
⌈(n+1)/2⌉
1−d
1
q
h
i
n




2d ⌊n/2⌋
N ·n
n
q
i +O
≤
+h
.
⌈(n+1)/2⌉
⌊n/2⌋ q
d
1

q

i 

h

n
and, for fixed q, we have
This completes the proof since N = Θ ⌊n/2⌋
q

Θ q n/2 .
√
√
Proof of Theorem 1.7. Set d1 := n log n, d2 := n log n, m0 := 3n , m1 :=
ℓn (n)
1−4d2 /n .

i

⌈(n+1)/2⌉
1
q

2ℓn (n)
1−50d1 /n2

=

and

{0, 1, 2}n

of cardinality at least m1 , then, by Theorem 1.4,
 2
n
comp(S) ≥ (|S| − 2ℓn (n))
50
 2
 2
n
n
+ (m1 − 2ℓn (n))
≥ (|S| − m1 )d1 + m1 d1 = |S|d1 ,
= (|S| − m1 )
50
50
 2
since (m1 − 2ℓn (n)) n50 = m1 d1 . Similarly, if the cardinality of S is at least m2 , then
comp(S) ≥ |S|d2 . Therefore, we can apply Lemma 5.4 to {0, 1, 2}n with
 k = 2 and these
n
values of d1 , d2 , m0 , m1 and m2 to obtain a collection F of at most ≤33n /d1 ≤mm11/d2 containers,
m2 :=

If S is a subset of

h

n

3
n
1
each of cardinality at most m2 + m
d2 + d1 , such that each antichain of {0, 1, 2} is contained
in at least one container. We get that the number of antichains in {0, 1, 2}n is at most



n
m
m
3n
m1
3n
m2 + d 1 + 3d
3n /d1
m1 /d2 m2 + d21 + d1
2
1 ≤ (e · d1 )
(e
·
d
)
2
2
2
≤ m1 /d2
≤ 3n /d1
m2 +O

≤2




3n log n m1 log n
+ d
d1
2

for n sufficiently large. Now, bounding the exponent, we get
 n


 n
3 log n ℓn (n) log n
3 log n m1 log n
ℓn (n)
+O
+
+
=
m2 + O
d1
d2
1 − 4d2 /n
d1
d2
 n

3 log n ℓn (n) log n
8d2 ℓn (n)
+O
+
≤ ℓn (n) +
n
d1
d2

p

= 1+O
log n/n ℓn (n)
 n
3
by Theorem A.2. The result follows.
since ℓn (n) = Θ √
n
25

Remark 6.2. Balogh, Treglown and Wagner [8] have also used the container method to prove
an upper bound on the number of antichains in P(n). Their proof only applies a single-stage
container lemma (similar to Lemma 5.2), however, and so the bound that they obtain is
weaker than that of Theorem 6.1.
In the proofs of Theorems 6.1 and 1.7 we used Lemma 5.3 with k = 2 and in the proof
of Theorem 1.6 we used Lemma 5.3 with k = 1. We remark that it is not possible to obtain
better bounds by following the same proof with a larger fixed value of k.
We should also mention that much stronger bounds than that of Theorem 6.1 are known.
In particular, Korshunov [27] obtained precise asymptotics of the number of antichains in
P(n).

6.2

Antichains in Random Subsets

In this section, we use Lemma 5.4 to prove Theorems 1.8 and 1.9. We remark that our
approach is very similar to that of Balogh, Mycroft and Treglown [6] who used a rough form
of Theorem 3.1 to show that, when p ≫ 1/n, the largest antichain in a p-random subset of
n
P(n) is (1 + o(1))p ⌊n/2⌋
with high probability; the same result was obtained independently
by Collares Neto and Morris [11] using a somewhat different approach.
In both proofs, the first step will be to use Lemma 5.2 to obtain a collection of containers
for the antichains of the poset. Now, if a p-random subset contains a large antichain, then
in particular it must contain a large subset of one of the containers (since every antichain
is contained in some container). By applying a version of the standard Chernoff Bound
(Theorem 6.3, stated below) one obtains that the probability that this occurs for any fixed
container is very small and, using the fact that the number of containers is not too large, we
can apply a simple union bound to complete the proof.
Theorem 6.3 (The Chernoff Bound; see, e.g., [17]). Suppose
that X1 , . . . , Xn are independent
P
random variables taking values in {0, 1} and let X := ni=1 Xi . Then

 − δ2 E(X)
3
if 0 < δ < 1,
e
P(X > (1 + δ)E(X)) ≤
δE(X)
e− 3
if δ > 1.
We prove Theorem 1.8.

Proof of Theorem 1.8. Define N := |V (q, n) | and note that N = Θ

h

i 

n
⌈n/2⌉ q

by Theo-

rem A.1. Let p = c(ε, q)/q n/2 for some constant c(ε, q), to be chosen later, and let Ap be a
subset of V (q, n)
by including each element independently with probability p. Let
h obtained
i
n
m := (1 + ε/2) ⌈n/2⌉ . By Theorem 1.2, every subset S of V (q, n) of cardinality at least m
q

satisfies

comp(S) ≥



1
1−
1 + ε/2



given that ε ∈ (0, 1). So, we set d :=

⌈(n + 1)/2⌉
1

ε
3



 h ⌈(n+1)/2⌉ i
1

q

q

|S| ≥

 ε   ⌈(n + 1)/2⌉ 
3

1

q

|S|

and let f be the function resulting from

applying Lemma 5.2 to V (q, n) with these values m and d. Note that, since q is constant, we
have d = Θ q n/2 . In particular, p is bounded below by a constant multiple of c(ε, q)/d.
26

N
Fix T ⊆ V (q, n) such that |T | ≤ 2d+1
. The probability that Ap contains an antichain I
h
i
n
of size at least (1 + ε)p ⌈n/2⌉
with T ⊆ I ⊆ T ∪ f (T ) is at most
q



n
P(T ⊆ Ap ) · P |Ap ∩ f (T )| ≥ p(1 + ε)
⌈n/2⌉



q

!

− |T |


h
i 
n
N
= O q −n/2 ⌈n/2⌉
since T ∩ f (T ) = ∅. By Theorem A.1, |T | ≤ 2d+1
. By choosing c(ε, q)
q
h
i

n
and so we get that the above probability
sufficiently large, we can make |T | ≤ 4ε p ⌈n/2⌉
q

is at most



n
p|T | P |Ap ∩ f (T )| ≥ p(1 + 3ε/4)
⌈n/2⌉

Applying Theorem 6.3 with δ =

h
i
n
−|f (T )|
(1+3ε/4) ⌈n/2⌉
q

|f (T )|



n
P |Ap ∩ f (T )| ≥ p(1 + 3ε/4)
⌈n/2⌉
Since |f (T )| ≤ m = (1 + ε/2)

h

i

n
⌈n/2⌉ q ,

 !
q

 !

.

q

we get that

≤




e−

δ 2 |f (T )|p
3

δ|f (T )|p
−
3

e

if 0 < δ < 1,
if δ > 1.

the right side is bounded above by e−ε

2 mp/100

. Therei
n
fore, the probability that Ap contains an antichain of size at least (1 + ε)p ⌈n/2⌉
is at
most

X

T ⊆V(q,n)
|T |≤N/(2d+1)

p

|T | −ε2 mp/100

e

≤

N/(2d+1) 

X
a=0

h

q


N a −ε2 mp/100
p e
.
a


N
. Thus,
Given that c(ε, q) is large enough, the quantity Na pa is increasing for 0 ≤ a ≤ 2d+1
this is bounded above by


N
2
+ 1 (e(2d + 1)p)N/(2d+1) e−ε mp/100 .
2d + 1

Since d = Θ q n/2 and N = Θ(m), the quantity e(2d + 1)p bounded above by a constant
2
multiple of c(ε, q) and
 ε mp/100 is bounded below by a constant multiple (depending only on
N
ε and q) of c(ε, q) 2d+1
. Therefore, we may choose c(ε, q) large enough so that log(e(2d +


N
< ε2 mp/200, and so the above expression is o(1). The result follows.
1)p) 2d+1

Let us note that Theorem 1.8 is best possible up to the choice of the constant c(ε, q).
Let Ap be a p-random subset of V (q, n) where p = c/q n/2 for some constant c > 0 and
let n be large with respect to q and c. Given x ∈ V (q, n) of dimension ⌈(n + 1)/2⌉, the
expected number of subspaces of x of dimension ⌊n/2⌋ contained in Ap is constant. Thus,
with probability bounded away from zero, a constant proportion of the elements of V (q, n)∩Ap
of dimension ⌈(n + 1)/2⌉ have no subspaces of dimension ⌊n/2⌋ contained in Ap . Taking this
set along with all subspaces of Fnq of dimension ⌊n/2⌋ contained in Ap gives us an antichain
27

h
i
n
of size at least (1 + ε)p ⌊n/2⌋
for some ε = ε(q, c) > 0. Here, we used the fact that
q
h
h
i
i 
n
n
= Θ ⌊n/2⌋
for fixed q (Theorem A.1). A similar argument shows that
⌈(n+1)/2⌉
q

q

Theorem 1.9 is best possible up to the choice of c(ε). Next, we apply Lemma 5.2 and
Theorem 1.4 to prove Theorem 1.9.
Proof of Theorem 1.9. Let p = c(ε)/n for some constant c(ε) to be chosen later and let Ap
be a subset of {0, 1, 2}n obtained by including each element independently with probability p.
Let m1 := 3ℓn (n) and let m2 := (1 + ε/2)ℓn (n). By Theorem 1.4, every subset S of {0, 1, 2}n
of cardinality at least m1 satisfies
 2  2 
n
n
≥
|S|
comp(S) ≥ (|S| − 2ℓn (n))
50
200

Also, by Theorem 1.4, every subset S of {0, 1, 2}n of cardinality at least m2 satisfies
 n   εn 
≥
|S|
comp(S) ≥ (|S| − ℓn (n))
4
12
2

n
given that ε ∈ (0, 1). So, we set d1 := 200
and d2 := εn
12 . Let f1 and f2 be the functions
resulting from applying Lemma 5.3 to {0, 1, 2}n with k = 2 and the values of d1 , d2 , m1 , m2
above.
n
1
. The
Fix T1 ⊆ {0, 1, 2}n such that |T1 | ≤ 2d31 +1 and fix T2 ⊆ f1 (T1 ) such that |T2 | ≤ 2dm2 +1
probability that Ap contains an antichain I of size at least (1 + ε)pℓn (n) with T1 ∪ T2 ⊆ I ⊆
T1 ∪ T2 ∪ f2 (T1 ∪ T2 ) is at most

P(T1 ∪ T2 ⊆ Ap ) · P (|Ap ∩ f2 (T1 ∪ T2 )| ≥ p(1 + ε)ℓn (n) − |T1 ∪ T2 |)

(6.4)

n

n (n)
n (n)
+ 6ℓεn
≤ 10ℓεn
for large n
since (T1 ∪ T2 ) ∩ f2 (T1 ∪ T2 ) = ∅. Note that |T1 ∪ T2 | ≤ 100·3
n2
byTheorem A.2. Since p = c(ε)/n, we may choose c(ε) sufficiently large so that |T1 ∪ T2 | ≤
ε
4 pℓn (n). Therefore, the expression in (6.4) is bounded above by

p|T1 ∪T2 | P (|Ap ∩ f2 (T1 ∪ T2 )| ≥ p(1 + 3ε/4)ℓn (n)) .

Applying Theorem 6.3 with δ =

(1+3ε/4)ℓn (n)−|f2 (T1 ∪T2 )|
|f2 (T1 ∪T2 )|

P (|Ap ∩ f2 (T1 ∪ T2 )| ≥ p(1 + 3ε/4)ℓn (n)) ≤




we get that
e−

δ 2 |f2 (T1 ∪T2 )|p
3

e− δ|f2 (T13∪T2 )|p

if 0 < δ < 1,
if δ > 1.
2

Since |f2 (T1 ∪ T2 )| ≤ (1 + ε/2)ℓn (n), the right side is bounded above by e−ε ℓn (n)p/100 . Therefore, the probability that Ap contains an antichain of size at least (1 + ε)pℓn (n) is at most
m1
3n
2d1 +1 2d2 +1

X X 3n m1 
2
pa+b e−ε ℓn (n)p/100
a
b
a=0
b=0


n
For c(ε) sufficiently large, the quantity 3a mb1 pa+b is increasing in both a and b in the range
n
1
. Therefore, the above expression is at most
0 ≤ a ≤ 2d31 +1 and 0 ≤ b ≤ 2dm2 +1




m1
3n
3n
m1
2
(3ed1 p) 2d1 +1 (3ed2 p) 2d2 +1 e−ε ℓn (n)p/100 .
2d1 + 1
2d2 + 1
28

By definition of d2 and p, we have that 3ed2 p is bounded above by a constant multiple of
2
c(ε) and, since ℓn (n) = Θ (m1 ), we have
 that ε ℓn (n)p/100 is bounded below by a constant
1
multiple (depending only on ε) of c(ε) 2dm2 +1
. Therefore we may choose c(ε) large enough so


1
that log(3ed2 p) 2dm2 +1
< ε2 ℓn (n)p/200 and so the above expression is o(1). This completes
the proof.
To close this section, we remark that none of the proofs in this section required asymptotically sharp supersaturation results. In applying the container method, it is often sufficient
to have a supersaturation result which is best possible up to a constant factor (such as the
graph supersaturation theorem of Erdős and Simonovits [20]).

7

Open Problems

For general r ≥ 1 one can define a partial order on {0, . . . , r}n where x ≤ y if and only if
xj ≤ yj for all j. For 0 ≤ i ≤ rn let ℓi (n, r) be the number of elements of {0, . . . , r}n with
coordinate sum equal to i. We propose the following conjecture.
Conjecture 7.1. Let r, n be positive integers such that n is large with respect to r. Then, for
1 ≤ m ≤ (r + 1)n , the number of comparable pairs in a subset of {0, . . . , r}n of cardinality m
is minimised by a set whose elements have coordinate sum as close to rn/2 as possible.
We remark that the same conjecture was made independently by Balogh and Wagner [10].
The case r = 1 of Conjecture 7.1 follows from the theorem of Kleitman [23] (without the
requirement that n is large), but it is open for all other values of r. In particular, the case
r = 2 of Conjecture 7.1 is strictly stronger than Theorem 1.4. The following weak form of
Conjecture 7.1 would be good enough for certain applications.
Conjecture 7.2 (Weak form of Conjecture 7.1). Let r, k be positive integers. There exist a
positive constant c(r, k) such that for every S ⊆ {0, . . . , r}n we have

comp(S) ≥ |S| − kℓ⌈rn/2⌉ (n, r) c(r, k)nk

The poset {0, . . . , r}n can also be viewed as the poset of divisors of the rth power of a
square-free integer with n prime factors. Another natural direction for future work could be
to prove a non-trivial supersaturation theorem for the poset of divisors of a general integer
(perhaps with the number of distinct prime factors sufficiently large with respect to the largest
multiplicity of a prime factor). As mentioned earlier, Anderson [1] proved that such posets
have regular coverings by chains. It seems possible that one could prove a supersaturation
theorem for such a poset by considering a chain chosen randomly according to a distribution
based on a regular covering by chains and applying Lemma 2.2. The devil, however, is in the
details.
Also, one could consider supersaturation problems for other classical posets. In particular,
it would also be interesting to prove supersaturation results for posets which do not have
regular coverings by chains, or for posets which are not even ranked.
In another direction, one could try to improve our bounds on the number of antichains in
V (q, n) and {0, 1, 2}n (Theorems 1.6 and 1.7) and obtain similar bounds for other posets.

29

Note added in the proof. Following the submission of this paper, Balogh, Petřı́čová and
Wagner [7] disproved Conjecture 7.1 for all r ≥ 2 and Samotij [32] proved the conjecture of
Kleitman [23] that, for any k ≥ 2 and 1 ≤ m ≤ 2n , the number of chains of length k in a
subset of P(n) of size m is minimised by a collection of subsets of [n] of size as close to n/2
as possible.

References
[1] I. Anderson. On the divisors of a number. J. London Math. Soc., 43:410–418, 1968.
[2] I. Anderson. A variance method in combinatorial number theory. Glasgow Math. J.,
10:126–129, 1969.
[3] I. Anderson. Combinatorics of finite sets. Oxford Science Publications. The Clarendon
Press, Oxford University Press, New York, 1987.
[4] J. Balogh, H. Liu, and M. Sharifzadeh. The number of subsets of integers with no k-term
arithmetic progression. Int. Math. Res. Not. IMRN, 2016(00): 1–19.
[5] J. Balogh, R. Morris, and W. Samotij. Independent sets in hypergraphs. J. Amer. Math.
Soc., 28(3):669–709, 2015.
[6] J. Balogh, R. Mycroft, and A. Treglown. A random version of Sperner’s theorem. J.
Combin. Theory Ser. A, 128:104–110, 2014.
[7] J. Balogh, Š. Petřı́čová, and A. Zs. Wagner. Families in posets minimizing the number
of comparable pairs. arXiv:1703.05427v1, preprint.
[8] J. Balogh, A. Treglown, and A. Zs. Wagner. Applications of graph containers in the
boolean lattice. Random Structures Algorithms, 49(4):845–872, 2016.
[9] J. Balogh and A. Zs. Wagner. Further applications of the container method. In A. Beveridge, J. R. Griggs, G. Hogben, L. Musiker, and P. Tetali, editors, Recent Trends in
Combinatorics, volume 159 of The IMA Volumes in Mathematics and its Applications,
pages 191–213. Springer, Cham, 2016.
[10] J. Balogh and A. Zs. Wagner. Kleitman’s conjecture about families of given size minimizing the number of k-chains. arXiv:1609.02262v1, preprint, 2016.
[11] M. Collares and R. Morris. Maximum-size antichains in random set-systems. Random
Structures Algorithms, 49(2):308–321, 2016.
[12] D. Conlon and T. Gowers. Combinatorial theorems in sparse random sets. Ann. of Math.
(2), 184(2):367–454, 2016.
[13] S. Das, W. Gan, and B. Sudakov. Sperner’s theorem and a problem of Erdős, Katona
and Kleitman. Combin. Probab. Comput., 24(4):585–608, 2015.
[14] S. Das, W. Gan and B. Sudakov, The minimum number of disjoint pairs in set systems
and related problems, Combinatorica, 36(6):623–660, 2016.

30

[15] N. G. de Bruijn, Ca. van Ebbenhorst Tengbergen, and D. Kruyswijk. On the set of
divisors of a number. Nieuw Arch. Wiskunde (2), 23:191–193, 1951.
[16] A. P. Dove, J. R. Griggs, R. J. Kang, and J.-S. Sereni. Supersaturation in the Boolean
lattice. Integers, 14A:Paper No. A4, 7, 2014.
[17] D. P. Dubhashi and A. Panconesi. Concentration of measure for the analysis of randomized algorithms. Cambridge University Press, Cambridge, 2009.
[18] P. Erdős. On a theorem of Rademacher-Turán. Illinois J. Math., 6:122–127, 1962.
[19] P. Erdős. Some recent results on extremal problems in graph theory. Results. In Theory of
Graphs (Internat. Sympos., Rome, 1966), pages 117–123 (English); pp. 124–130 (French).
Gordon and Breach, New York; Dunod, Paris, 1967.
[20] P. Erdős and M. Simonovits. Supersaturated graphs and hypergraphs. Combinatorica,
3(2):181–192, 1983.
[21] P. Hall. On representatives of subsets. J. London Math. Soc., 10(1):26–30, 1935.
[22] J. Kahn. Entropy, independent sets and antichains: a new approach to Dedekind’s
problem. Proc. Amer. Math. Soc., 130(2):371–378, 2002.
[23] D. Kleitman. A conjecture of Erdős-Katona on commensurable pairs among subsets of
an n-set. In Theory of Graphs (Proc. Colloq., Tihany, 1966), pages 215–218. Academic
Press, New York, 1968.
[24] D. Kleitman. On Dedekind’s problem: The number of monotone Boolean functions.
Proc. Amer. Math. Soc., 21:677–682, 1969.
[25] D. J. Kleitman. On an extremal property of antichains in partial orders. The LYM
property and some of its implications and applications. In Combinatorics (Proc. NATO
Advanced Study Inst., Breukelen, 1974), Part 2: Graph theory; foundations, partitions
and combinatorial geometry, pages 77–90. Math. Centre Tracts, No. 56. Math. Centrum,
Amsterdam, 1974.
[26] D. J. Kleitman and K. J. Winston. On the number of graphs without 4-cycles. Discrete
Math., 41(2):167–172, 1982.
[27] A. D. Korshunov. The number of monotone Boolean functions. Problemy Kibernet.,
(38):5–108, 272, 1981.
[28] D. Lubell. A short proof of Sperner’s lemma. J. Combinatorial Theory, 1:299, 1966.
[29] B. Patkós. Supersaturation and stability for forbidden subposet problems. J. Combin.
Theory Ser. A, 136:220–237, 2015.
[30] C. Reiher. The clique density theorem. Ann. of Math. (2), 184(3):683–707, 2016.
[31] W. Samotij. Counting independent sets in graphs. European J. Combin., 48:5–18, 2015.
[32] W. Samotij. Subsets of posets minimising the number of chains. arXiv:1708.02436v1,
preprint.
31

[33] W. Samotij and B. Sudakov, On the number of monotone sequences, J. Combinatorial
Theory Ser. B 115:132–163, 2015.
[34] W. Samotij and B. Sudakov. The number of additive triples in subsets of abelian groups.
Math. Proc. Cambridge Philos. Soc., 160(3):495–512, 2016.
[35] D. Saxton and A. Thomason. Hypergraph containers. Invent. Math., 201(3):925–992,
2015.
[36] M. Schacht. Extremal results for random discrete structures.
184(2):333–365, 2016.

Ann. of Math. (2),

[37] E. Sperner. Ein Satz über Untermengen einer endlichen Menge. Math. Z., 27(1):544–548,
1928.
[38] H. S. Wilf. Three problems in combinatorial asymptotics. J. Combin. Theory Ser. A,
35(2):199–207, 1983.

A

Rank Numbers in V (q, n) and {0, 1, 2}n

We provide a number of results regarding the rank numbers in V (q, n) and {0, 1, 2}n that
we require in the paper. The first is a theorem of Wilf [38] which is used in the proofs of
Theorems 1.6 and 1.8.
Theorem A.1 (Wilf [38]). For a fixed prime power q and n → ∞, we have
 2 
|V (q, n) | = Θ q n /2 , and


n
⌊n/2⌋
h
i 
n
In particular, |V (q, n) | = Θ ⌊n/2⌋
.



q

 2 
= Θ q n /2 .

q

The following result of Anderson [2] is used in the proofs of Theorems 1.7 and 1.9.
 n
3
.
Theorem A.2 (Anderson [2]). ℓn (n) = Θ √
n
a

ai
A sequence a0 , . . . , aN is said to be log-concave if i+1
ai ≤ ai−1 for 1 ≤ i ≤ N − 1. In the
proof of Theorem 1.4 we use the following theorem, which has been proven in several different
papers (see Chapter 4 of [3] for references). To our knowledge, the earliest proof is due to
Anderson [1].

Theorem A.3 (Anderson [1]). The sequence ℓ0 (n), . . . , ℓ2n (n) is log-concave.
We now provide some quantitative upper and lower bounds on the ratios ℓi+1 (n)/ℓi (n)
which we used in Section 4. We obtain different bounds depending on whether 1 ≤ i ≤ n − 3,
i = n − 2 or i = n − 1.
Lemma A.4. For n ≥ 4 and 1 ≤ i ≤ n − 3,
ℓi+1 (n)
⌈i/2⌉ − ⌊i/2⌋
n − ⌈i/2⌉
n+1
≤
≤
+
.
i+1
ℓi (n)
⌈i/2⌉
⌈(i + 2)/2⌉
32

Proof. Begin by giving each element y of Li+1 a ‘weight’ of 1 and then redistributing the
weight of y evenly among the x ∈ Li with x < y. For 0 ≤ s ≤ ⌊i/2⌋, the weight recieved by
x ∈ Lsi is precisely
i − 2s n − i + s
f (s) :=
+
.
i−s
i−s+1

Note that f (s) is well defined as i ≥ 1 and so s < i. We claim that f (s) is non-decreasing for
s in the range 0 ≤ s ≤ ⌊i/2⌋. Indeed, for i ≥ 2 and 0 ≤ s ≤ ⌊(i − 2)/2⌋, we have
 


i − 2s n − i + s
i − 2s − 2 n − i + s + 1
+
+
−
f (s + 1) − f (s) =
i−s−1
i−s
i−s
i−s+1
=
Since n > i and s ≤

i−2
2 ,

s(−n + i − 1) + ni − n − i2 − 1
.
(i − s + 1)(i − s)(i − s − 1)

this expression is bounded below by

(i − 2)(−n + i − 1) + 2ni − 2n − 2i2 − 2
i(n − i − 3)
=
2(i − s + 1)(i − s)(i − s − 1)
2(i − s + 1)(i − s)(i − s − 1)
which is non-negative since i ≤ n − 3. Therefore, the total weight is bounded below by |Li |
multiplied by the weight recieved by an element of L0i and bounded above by |Li | multiplied
⌊i/2⌋
by the weight recieved by an element of Li
. However, clearly, the total weight is precisely
|Li+1 | and so we obtain




⌈i/2⌉ − ⌊i/2⌋
n − ⌈i/2⌉
n+1
+
|Li | ≤ |Li+1 | ≤
|Li |
i+1
⌈i/2⌉
⌈(i + 2)/2⌉
as desired.
Lemma A.5. For n ≥ 5 we have
n+2
ℓn−1 (n)
4n + 7
≤
≤
n
ℓn−2 (n)
4n − 2
Proof. Distribute weights to the elements of Li in the same way as in the proof of Lemma A.4
and define f (s) in the same way as well, except that i = n − 2. As in that proof, for
0 ≤ s ≤ ⌊(n − 4)/2⌋, we have
f (s + 1) − f (s) =
=

s(−n + (n − 2) − 1) + n(n − 2) − n − (n − 2)2 − 1
((n − 2) − s + 1)((n − 2) − s)((n − 2) − s − 1)
−3s + n − 5
(n − 1 − s)(n − 2 − s)(n − 3 − s)

n−5
is non-decreasing in the
which is non-negative
 n−2 that f (s)n−2
 n−2  if and only if s ≤ 3 . So, we have
range 0 ≤ s ≤ 3 and non-increasing in the range 3 ≤ s ≤ 2 . It follows that





n−2
n−2
min f (0), f
|Li | ≤ |Li+1 | ≤ f
|Li |
2
3
 n+2
 4n+7
n+1
= n < n−1
= f (0) and f n−2
= 4n−2 .
and the result follows since f n−2
2
3

33

Lemma A.6. For n ≥ 5 we have
ℓn (n)
n+1
⌈(n − 1)/2⌉ − ⌊(n − 1)/2⌋ ⌊(n + 1)/2⌋
+
≤
≤
⌈(n − 1)/2⌉
⌈(n + 1)/2⌉
ℓn−1 (n)
n
Proof. Proceed as in the previous two proofs. This time, we have
f (s + 1) − f (s) =

s(−n + (n − 1) − 1) + n(n − 1) − n − (n − 1)2 − 1
((n − 1) − s + 1)((n − 1) − s)((n − 1) − s − 1)

−2(s + 1)
(n − s)(n − 1 − s)(n − 2 − s)


. Therefore,
and so f (s) is decreasing in s for 0 ≤ s ≤ n−1
2


n−1
f
|Li | ≤ |Li+1 | ≤ f (0)|Li |
2
=

and we are done since f

 n−1 
2

=

⌈(n−1)/2⌉−⌊(n−1)/2⌋
⌈(n−1)/2⌉

34

+

⌊(n+1)/2⌋
⌈(n+1)/2⌉

and f (0) =

n+1
n .

