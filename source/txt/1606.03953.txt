OPTIMAL PACKINGS OF BOUNDED DEGREE TREES

arXiv:1606.03953v1 [math.CO] 13 Jun 2016

FELIX JOOS, JAEHOON KIM, DANIELA KÜHN, AND DERYK OSTHUS
Abstract. We prove that if T1 , . . . , Tn is a sequence of bounded degree trees so that Ti has
i vertices, then Kn has a decomposition into T1 , . . . , Tn . This shows that the tree packing
conjecture of Gyárfás and Lehel from 1976 holds for all bounded degree trees (in fact, we can
allow the first o(n) trees to have arbitrary degrees). Similarly, we show that Ringel’s conjecture
from 1963 holds for all bounded degree trees. We deduce these results from a more general
theorem, which yields decompositions of dense quasi-random graphs into suitable families of
bounded degree graphs. Our proofs involve Szemerédi’s regularity lemma, results on Hamilton
decompositions of robust expanders, random walks, iterative absorption as well as a recent
blow-up lemma for approximate decompositions.

1. Introduction
For a collection of graphs H = {H1 , . . . , Hs } and a graph G, we say H packs into G if there
are pairwise edge-disjoint copies of H1 , . . . , Hs in G. If every edge of G lies in one of these copies,
then we have a decomposition of G into H. Packing and decomposition problems are central to
combinatorics and related areas. Famous early instances of such problems involve Steiner triple
systems as well as Hamilton decompositions: Kirkman’s theorem on the existence of Steiner
triple systems translates into decompositions of cliques into triangles (subject to divisibility
conditions) and Walecki’s construction provides an analogue of this for decompositions into
Hamilton cycles. A celebrated theorem of Wilson [31, 32, 33] generalizes Kirkman’s theorem
to decompositions of cliques into arbitrary subgraphs F – this forms one of the cornerstones
of design theory. These results now are part of a major area, with connections to coding and
information theory, as well as extremal combinatorics and algorithms.
Classical results on packings and decompositions have often been limited to symmetric structures, as these allow for the exploitation of these symmetries or the use of algebraic techniques.
Probabilistic approaches are having an increasing impact on the area, and enable the construction of packings in more complex or general settings. In particular, in this paper we build on
such approaches to obtain optimal results on packing suitable families of bounded degree graphs
into quasi-random graphs. This provides the first instance of optimal packing and decomposition results involving general families of large (but sparse) structures which are not necessarily
symmetric.
1.1. Packing trees into complete graphs. The famous tree packing conjecture of Gyárfás
and Lehel has driven a large amount of research in the area.
Conjecture 1.1 (Gyárfás and Lehel [15]). Given n ∈ N and trees T1 . . . , Tn with |Ti | = i, the
complete graph Kn has a decomposition into copies of T1 , . . . , Tn .
The conjecture has been verified for several very special classes of trees (see e.g. [7, 15, 16,
29, 35]). Bollobás [5] showed that one can pack T1 , . . . , Tn/√2 into Kn (and that a better bound
would follow from the Erdős-Sós conjecture). Balogh and Palmer [4] showed that one can pack
Tn−n1/4 /10 , . . . , Tn−1 into Kn . Zak [35] showed (amongst others) that one can pack the final five
trees into Kn . Fishburn [11] verified that the set of degree sequences of the trees T1 , . . . , Tn can
be “packed” into the degree sequence of Kn . Böttcher, Hladkỳ, Piguet and Taraz [6] were able
Date: June 14, 2016.
The research leading to these results was partially supported by the EPSRC, grant no. EP/M009408/1 (F. Joos,
D. Kühn and D. Osthus), and by the Royal Society and the Wolfson Foundation (D. Kühn). The research was
also partially supported by the European Research Council under the European Union’s Seventh Framework
Programme (FP/2007–2013) / ERC Grant 306349 (J. Kim and D. Osthus).
1

2

FELIX JOOS, JAEHOON KIM, DANIELA KÜHN, AND DERYK OSTHUS

to prove that we can obtain a near-optimal packing if one restricts to bounded degree trees.
More generally, they showed
that if T1 , . . . , Ts have bounded degree, satisfy |Ti | ≤ (1 − ε)n, and
P
s
n
e(T
)
≤
(1−ε)
,
then
T
i
1 , . . . , Ts pack into Kn . Messuti, Rödl and Schacht [27] generalized
i=1
2
this to separable families of graphs (which also includes minor-closed families of graphs). This
was further improved by Ferber, Lee and Mousset [10], who obtained near-optimal packings of
spanning copies of separable bounded degree graphs into Kn . Finally, Kim, Kühn, Osthus and
Tyomkyn [19] proved that such
P a result in fact holds for all bounded degree graphs: if H1 , . . . , Hs
have bounded degree and si=1 e(Hi ) ≤ (1 − ε) n2 , then H1 , . . . , Hs pack into Kn . Note that
if we place no further restrictions on the Hi , then we cannot ask for an actual decomposition.
However, in the setting of the tree packing conjecture, we do obtain such a decomposition in
the current paper.
Theorem 1.2. For all ∆ ∈ N, there are N ∈ N and ε > 0 such that for all n ≥ N the following
holds. Suppose that for each i ∈ [n], we have a tree Ti with |Ti | = i and suppose ∆(Ti ) ≤ ∆ for
all i > εn. Then Kn decomposes into T1 , . . . , Tn .
Note that this implies Conjecture 1.1 for all bounded degree trees. (In fact, we do not require
the first εn trees to have bounded degree.) We will deduce Theorem 1.2 from Theorem 1.7 in
Section 10.
For bounded degree trees, we actually obtain the following more general result which has less
restrictive
assumptions on |Ti |. For a family H = {H1 , . . . , Hs } of graphs we write e(H) :=
Ps
e(H
).
i
i=1

Theorem 1.3. For all ∆ ∈ N and δ > 0, there is N ∈ N such that for all n ≥ N the following
holds. Suppose that T is a collection of trees such that
(i) |T | ≤ n and ∆(T ) ≤ ∆ for all T ∈ T ,
(ii) there are at
 least (1/2 + δ)n trees T ∈ T such that δn ≤ |T | ≤ (1 − δ)n, and
(iii) e(T ) = n2 .
Then Kn decomposes into T .

Another beautiful open problem in the area of tree decompositions is Ringel’s conjecture
(which in turn would follow from the notorious graceful labelling conjecture).
Conjecture 1.4 (Ringel [28]). Given n ∈ N and a tree T on n + 1 vertices, the complete graph
K2n+1 has a decomposition into 2n + 1 copies of T .
The conjecture has been verified for several very special classes of trees. A dynamic survey is
maintained by Gallian [12]. Note the results in [6, 10, 19, 27] imply an approximate version of
Conjecture 1.4 for bounded degree trees. Recent progress on Conjecture 1.4 (and its bipartite
analogue) for random trees was obtained in [8, 26]. Snevily [30] showed that Ringel’s conjecture
holds if we replace K2n+1 by Km , where m = Ω(n3 ), which improved a bound of Yuster [34].
Recently Ringel’s conjecture was generalized to allow for more than one tree by Böttcher, Hladkỳ,
Piguet and Taraz.
Conjecture 1.5 ([6]). Given n ∈ N, suppose T is a collection of trees such that |T | ≤ n + 1 for
all T ∈ T . If e(T ) ≤ e(K2n+1 ), then T packs into K2n+1 .
Note that Theorem 1.3 immediately implies that Ringel’s conjecture holds for all bounded
degree trees. In fact, by concatenating small trees into large ones if necessary, one can easily use
Theorem 1.3 to show that the more general Conjecture 1.5 holds for all bounded degree trees,
too.
Corollary 1.6. For all ∆ ∈ N, there is N ∈ N such that for all n ≥ N the following holds.
Suppose T is a collection of trees such that |T | ≤ n + 1 and ∆(T ) ≤ ∆ for all T ∈ T . If
e(T ) ≤ e(K2n+1 ), then T packs into K2n+1 .
1.2. Quasi-random graphs. We actually prove our results in the setting of dense quasi-random
graphs, which we now define. Let G be a graph and let u, v ∈ V (G). We denote by dG (u) the
degree of u and by dG (u, v) the size of the common neighbourhood of u and v. We say a graph

OPTIMAL PACKINGS OF BOUNDED DEGREE TREES

3

G on n vertices is (ε, p)-quasi-random if dG (u) = (1 ± ε)pn and dG (u, v) = (1 ± ε)p2 n for all
distinct vertices u, v ∈ V (G).
The next theorem is the main result of this paper (and implies all other results stated in the
introduction). It states that we can decompose a dense quasi-random graph into a family of
bounded degree graphs as long as this family contains sufficiently many trees which are not too
small and not too large.
Theorem 1.7. For all ∆ ∈ N and δ > 0, there are N ∈ N and ε > 0 such that for all n ≥ N
and all p ∈ [0, 1] the following holds. Suppose G is an (ε, p)-quasi-random graph on n vertices,
and H, T are sets of graphs satisfying
(i) |J| ≤ n and ∆(J) ≤ ∆ for all J ∈ H ∪ T ,
(ii) for all T ∈ T , the graph T is a tree and δn ≤ |T | ≤ (1 − δ)n,
(iii) |T | ≥ (1/2 + δ)n, and
(iv) e(H) + e(T ) = e(G).
Then G decomposes into H ∪ T .
Observe that p ≥ δ by (ii)–(iv) and that Theorem 1.7 immediately implies Theorem 1.3.
A construction which shows that the upper bound in (ii) cannot be omitted completely (even
if H = ∅) is described in [6]. The bound in (iii) also arises naturally: suppose T consists of
n/2 − 1 paths, the collection of graphs H consists only of Eulerian graphs, and G is a regular
graph of odd degree on n vertices. Then we can satisfy e(H ∪ T ) = e(G), but G will not have a
decomposition into H ∪ T .
In Section 10.2 we use Theorem 1.7 to deduce Corollary 1.8. Corollary 1.8 implies that for
trees of bounded maximum degree (an analogue of) Ringel’s conjecture holds even in the dense
quasi-random setting. Note that Corollary 1.8 immediately implies Corollary 1.6.
Corollary 1.8. For all α, ∆, p0 > 0, there are N ∈ N and ε > 0 such that for all n ≥ N and
p ≥ p0 the following holds. Suppose G is an (ε, p)-quasi-random graph on n vertices. Suppose
that T is a collection of trees such that each T ∈ T satisfies |T | ≤ (1 − α)pn, ∆(T ) ≤ ∆ and
e(T ) ≤ e(G). Then T packs into G.
A related result of [19] guarantees a near-optimal packing of a collection of bounded degree graphs (which are allowed to be spanning) into quasi-random graphs. The results in [19]
are actually proved in the even more general setting of ε-regular graphs (so they significantly
strengthen the classical Blow-up lemma of Komlós, Sárközy and Szemerédi [22]). In combination with Szemerédi’s regularity lemma these results will be a crucial tool in our proof (see
Theorem 6.8 and Theorem 10.2 for the precise statement of the results from [19] that we use).
Note that the results of this paper hold for dense quasi-random graphs. It would be very
interesting to find out if it is possible to extend them to the sparse (quasi-)random setting (see
e.g. [3] for partial results).
2. Outline of the argument
2.1. The tree packing conjecture. Suppose our aim is to pack trees T1 , . . . , Tn with |Ti | = i
and ∆(Ti ) ≤ ∆ into G = Kn , i.e. we have the setting of Theorem 1.2 with uniformly bounded
degrees. Our proof develops an “iterative absorbing approach” going back to [21].
Roughly speaking, an absorbing approach to find an optimal packing means that we first find
and remove an absorbing graph Gabs from the host graph G. In our case, we would then aim to
find a near-optimal packing φ of most of the trees Ti into G − E(Gabs ), which leaves some sparse
remainder Grem of G uncovered. The properties of Gabs then should ensure that we can find
an optimal packing of the remaining trees into Gabs ∪ Grem , altogether leading to an (optimal)
packing of T1 , . . . , Tn into G.
A recent result of [19] allows us to find the near-optimal packing required in the second step
above. However, it is far from clear how to construct such an absorbing graph Gabs . The
iterative absorbing approach replaces the single absorbing step with a sequence of steps, each
designed (amongst others) to reduce the number of uncovered “leftover edges”. The argument

4

FELIX JOOS, JAEHOON KIM, DANIELA KÜHN, AND DERYK OSTHUS

is still concluded with an absorbing step, but the small size of the leftover and the added control
over its location now makes this step feasible.
To be more precise, we consider a sequence V (G) = A0 ⊇ A1 ⊇ . . . ⊇ AΛ of sets with
|Ai+1 | ≪ |Ai | and such that |AΛ | ≈ n1/3 (see Section 10.1). After the ith step of the iteration,
we will ensure that any edges of G not covered so far lie inside Ai and that this leftover is still
sufficiently dense, when viewed as having vertex set Ai .
We can achieve this as follows. We split {T1 , . . . , Tn } into sets T0 , . . . , TΛ−1 such that each Ti
contains approximately |Ai | trees of order at most |Ai |. Assume we have packed T0 ∪ . . . ∪ Ti−1
in such a way that
(a) all edges in Gi−1 := G[Ai−1 ] − E(G[Ai ]) are covered and
(b) most edges in G[Ai ] are not covered.
Our aim then is to find a packing of most of the trees in Ti into Gi := G[Ai ] − E(G[Ai+1 ]) using
the results from [19]. However, a direct application of the results in [19] to Gi would produce a
leftover which is too dense. Thus instead we apply Szemerédi’s regularity lemma to Gi in order
to obtain a very efficient decomposition of Gi into a bounded number of blown-up cycles (see
Section 5). We can then use a random walk algorithm as well as the results in [19] to obtain
a very efficient packing of most of Ti into these blown-up cycles (see Section 6 and Step 2 in
Section 8) and thus into Gi .
Roughly speaking we next use the “unpacked” trees in Ti to cover the remaining edges of
Gi greedily. To achieve this, we will make use of a small number of edges from Gi+1 , but
need to be very careful that we do not affect the structure of Gi+1 too much. This task of
covering the remaining edges is divided into several steps. For example, one step consists of
covering all remaining edges induced by Ai \ Ai+1 . Another step consists of adjusting the parity
of the degrees of the remaining graph. (We achieve this by embedding a leaf onto a vertex of
“incorrect” parity.) The tools for carrying out these steps are provided in Section 7. Eventually,
we have now packed Ti in such a way that (a) and (b) hold with i replaced by i + 1.
After Λ iterations we arrive at a final leftover graph G∗Λ on AΛ , which is almost complete.
So we have a very restricted leftover, but have so far no method for carrying out the actual
absorption step. In order to prepare for this, we actually run the iterative process on a slightly
modified set of trees: we choose an arbitrary collection T ∗ of m trees from T2 , . . . , Tn/2 (where

m is slightly smaller than |A2Λ | ) and remove a leaf ℓT ∗ from each T ∗ ∈ T ∗ . Let zT ∗ be the
vertex incident to ℓT ∗ . When carrying out the above iteration we do not embed T ∗ ∈ T ∗ but
instead we embed T ∗ − ℓT ∗ in such a way that zT ∗ is embedded into AΛ (and no other vertex of
T ∗ is embedded into AΛ ).
This means that after Λ iterations, we have embedded all (modified) trees T1 , . . . , Tn except
for the leaves ℓT ∗ (and their incident edges) of the trees in T ∗ . Also, the uncovered leftover
graph G∗Λ has exactly m = |T ∗ | edges. Thus in order to complete the absorption step it remains
to assign these edges to the images of T ∗ − ℓT ∗ in a suitable way. Hence each edge of G∗Λ will
be the image of zT ∗ ℓT ∗ for some T ∗ ∈ T ∗ . (This is the reason why we embedded zT ∗ into AΛ .)
This assignment is carried out by considering a suitable “out-regular” orientation of G∗Λ . We
prove the existence of such an orientation in Section 9. Note that in this process, the role of the
final absorbing graph Gabs is played by the images of the modified trees in T ∗ .
2.2. The general setting. We now discuss the additional ideas needed to prove Theorem 1.7.
It turns out that considering a quasi-random graph G instead of Kn does not affect the argument
significantly. Moreover, the family of graphs H of bounded degree in Theorem 1.7 can easily be
packed (with a quasi-random remainder) using the results of [19]. What does make a difference
is that the family T of trees in Theorem 1.7 consists entirely of trees of linear size whereas the
iterative absorption argument outlined in the previous section only makes sense if in the ith
iteration the trees to be embedded have order at most |Ai | = |Gi |.
To overcome this problem, we run the iterative absorption with suitable subtrees of the original
trees. More precisely, in the 0th iteration, we start by packing almost all of the trees, but from
a small proportion of the trees F ∈ T , we cut off a small subforest F ∗ and denote by T 1 the set
consisting of all the F ∗ . We then embed each F − V (F ∗ ) into G[A0 \ A1 ]. In the first iteration,

OPTIMAL PACKINGS OF BOUNDED DEGREE TREES

5

we proceed similarly for T 1 , i.e. most forests in T 1 are embedded in their entirety, but from the
others we cut off small subforests which together form T 2 , most of which we pack in the second
iteration and so on.
A significant difficulty with this approach is of course that if we embed a tree in several
iterations, then the subforests embedded in the various rounds must fit together. To achieve
this we carefully embed the “intersection points” (or “roots”) of these subforests in a separate
step.
2.3. Organisation of the paper. In Section 3, we introduce some notation, collect some
probabilistic tools, introduce Szemerédi’s regularity lemma, and prove some basic results on
packings and decompositions. In Section 4, we prove a result on near-optimal decompositions of
suitable graphs into long cycles. In Section 5, we combine this with Szemerédi’s regularity lemma
to obtain near-optimal decompositions of suitable graphs into blown-up cycles. In Section 6, we
combine the results of [19] with a random walk algorithm to find efficient packings of trees into
blown-up cycles. In Section 7, we provide tools for covering a sparse set of leftover edges with
trees. In Section 8, we then combine the results from Section 3–7 to prove the iteration lemma,
which forms the core of the proof of Theorem 1.7. In Section 9, we prove an orientation lemma
which will be important in the final absorbing step. In Section 10, we repeatedly apply the
iteration lemma and then finally apply the orientation lemma to prove a version of Theorem 1.7
where we require H = ∅ (see Theorem 10.1). We then derive Theorem 1.7 itself (using a result
from [19]). We also derive Corollary 1.8 and Theorem 1.2 from Theorem 1.7.
3. Preliminaries
3.1. Basic definitions. For a, b, c ∈ R we write a = b ± c if b − c ≤ a ≤ b + c. In order
to simplify the presentation, we omit floors and ceilings and treat large numbers as integers
whenever this does not affect the argument. The constants in the hierarchies used to state our
results have to be chosen from right to left. More precisely, if we claim that a result holds
whenever 1/n ≪ a ≪ b ≤ 1 (where n ∈ N is typically the order of a graph), then this means
that there are non-decreasing functions f ∗ : (0, 1] → (0, 1] and g∗ : (0, 1] → (0, 1] such that the
result holds for all 0 < a, b ≤ 1 and all n ∈ N with a ≤ f ∗ (b) and 1/n ≤ g ∗ (a). We will not
calculate these functions explicitly. Hierarchies with moreconstants are defined in a similar way.
For N ∈ N, we define [N ] := {1, . . . , N }. We define X
k := {A ⊆ X : |A| = k}.
We simply refer to “graphs” when we consider simple, undirected and finite graphs, and refer
to “multigraphs” as graphs with potentially parallel edges, but without loops.
Let G be a multigraph and let u, v ∈ V (G) and U, V ⊆ V (G) such that U ∩ V = ∅. We write
G[U, V ] to denote the bipartite (multi-)subgraph of G induced by the edges joining U and V and
let eG (U, V ) := e(G[U, V ]). We extend eG (U, V ) to sets U, V which are not necessarily disjoint
by defining
eG (U, V ) := eG (U \ V, V ) + eG (V \ U, U ∩ V ) + 2e(G[U ∩ V ]).
In addition, let denG (U, V ) := eG (U, V )/(|U ||V |).
We define dG,U (v) := |{e ∈ E(G) : e = uv, u ∈ U }|. If G is simple, we let dG,U (u, v) := |{w ∈
U : uw, vw ∈ E(G)}|. We denote by NG (v) the set of all neighbours of v and by NG (u, v) the
set of all common neighbours of u, v. We define NG [v] := NG (v) ∪ {v}.
Given E ⊆ E(G), we write V (E) for the set of all endvertices of edges in E. It will sometimes
be convenient to identify a set of edges E ⊆ E(G) with the subgraph H of G such that V (H) =
V (E) and E(H) = E. In particular, we write ∆(E) for ∆(H).
We say a set I ⊆ V (G) in a graph G is k-independent if for any two distinct u, v ∈ I, the
distance between u and v in G is at least k. Thus a 2-independent set is just an independent
set. We say an edge set M is a k-independent matching if any two edges in M have distance at
least k. Note that a 2-independent matching is an induced matching.
S Given a packing of H = {H1 , . . . , Hs } into G, we can naturally associate a function φ :
H∈H V (H) ∪ E(H) → V (G) ∪ E(G)
S with such a packing and we also say φ packs H into G.
For simplicity, we write φ(H) := H∈H φ(H). Given H ∈ H, we sometimes abuse notation a

6

FELIX JOOS, JAEHOON KIM, DANIELA KÜHN, AND DERYK OSTHUS

little and view φ(H) both as a subgraph of G and as a subset of V (G). We say H decomposes
G
P
or G has a decomposition into H if H packs into G and e(G) = e(H) where e(H) := H∈H e(H).
We say that a function f on domain dom(f ) is consistent with a function g if f (x) = g(x) for
any x ∈ dom(f ) ∩ dom(g). We say that a function f is consistent with a collection of functions
{g1 , . . . , gm } if f is consistent with gi for every i ∈ [m].
We say that a bipartite graph G with vertex partition (A, B) is ε-regular if for all sets A′ ⊆ A,
′
B ⊆ B with |A′ | ≥ ε|A|, |B ′ | ≥ ε|B|, we have
|denG (A′ , B ′ ) − denG (A, B)| < ε.
Moreover, G is (ε, d)-regular if for all sets A′ ⊆ A, B ′ ⊆ B with |A′ | ≥ ε|A|, |B ′ | ≥ ε|B|, we have
|denG (A′ , B ′ ) − d| < ε.
If G is (ε, d)-regular and dG (a) = (d ± ε)|B| for all a ∈ A and dG (b) = (d ± ε)|A| for all b ∈ B,
then we say that G is (ε, d)-super-regular.
We say a multigraph G is (β, α)-dense if any two (not necessarily disjoint) sets U, V ⊆ V (G)
with |U |, |V | ≥ β|G| satisfy
denG (U, V ) ≥ α.
A bipartite graph with vertex partition (A, B) is (ε, p)-quasirandom if for any two distinct
vertices u, v ∈ A, we have d(u) = (1 ± ε)p|B| and d(u, v) = (1 ± ε)p2 |B| and for any two distinct
vertices u, v ∈ B, we have d(u) = (1 ± ε)p|A| and d(u, v) = (1 ± ε)p2 |A|.
We say a partition (V1 , . . . , Vk ) of a set V is an equitable partition if ||Vi | − |Vj || ≤ 1 for all
i, j ∈ [k]. We refer to a graph G as having equitable partition (V1 , . . . , Vk ) if (V1 , . . . , Vk ) is an
equitable partition of V (G). Note that in this case we still allow G to have edges joining two
vertices in Vi for i ∈ [k].
For k, ℓ ∈ N with ℓ ≥ 3, we define an ℓ-cycle k-blow-up as the graph C(ℓ, k) with vertex set
consisting of the disjoint union of V1 , . . . , Vℓ such that |Vi | = k for all i ∈ [ℓ]. Moreover, the
edge set consists of all edges uv with u ∈ Vi , v ∈ Vi+1 for i ∈ [ℓ], where we consider the index
i modulo ℓ (and we will always do this in such a case). We refer to the sets Vi as the clusters
of C(ℓ, k), and refer to ℓ as the length of the cycle blow-up. Sometimes we omit the “ℓ” if we
speak about an ℓ-cycle k-blow-up for some ℓ.
A spanning subgraph G1 of C(ℓ, k) is internally k′ -regular for some k′ ∈ N if G1 [Vi , Vi+1 ] is
′
k -regular for all i ∈ [ℓ]. A spanning subgraph G2 of C(ℓ, k) is an (ε, d)-(super)-regular ℓ-cycle
k-blow-up if G2 [Vi , Vi+1 ] is (ε, d)-(super)-regular for all i ∈ [ℓ].
3.2. Probabilistic tools. We frequently use random processes to show that (sub-)graphs with
certain properties exist. To this end, we will use several concentration inequalities which we
introduce now. A sequence X0 , . . . , XN of random variables is a martingale if X0 is a fixed
real number and E[Xn | X0 , . . . , Xn−1 ] = Xn−1 for all n ∈ [N ]. We say that the martingale
X0 , . . . , XN is c-Lipschitz if |Xn − Xn−1 | ≤ c holds for all n ∈ [N ]. Our applications of Azuma’s
inequality will involve exposure martingales (also known as Doob martingales). These are martingales of the form Xi := E[X | Y1 , . . . , Yi ], where X and Y1 , . . . , Yi are some previously defined
random variables.
Theorem 3.1 (Azuma’s inequality [2, 17]). Suppose that λ, c > 0 and that X0 , . . . , XN is a
c-Lipschitz martingale. Then
−λ2

P[|XN − X0 | ≥ λ] ≤ 2e 2Nc2 .
For m, n, N ∈ N with m, n < N , the hypergeometric distribution with parameters N , n and
m is the distribution of the random variable X defined as follows. Let S be a uniformly chosen
random subset of [N ] of size n and let X := |S ∩ [m]|. The first part of the following lemma is
essentially same as Corollary A.1.7 in [1] and the second part is from [18].
Lemma 3.2 (see [1, 18]). Suppose X1 , . . . , Xn are independent random variables such that
P[Xi = 0] = pi and P[Xi = 1] = 1 − pi for all i ∈ [n]. Let X := X1 + · · · + Xn . Then for
2
all t > 0, P[|X − E[X]| ≥ t] ≤ 2e−t /(2n) . Suppose Y has a hypergeometric distribution with
2
parameters N, n, m, then P[|Y − E[Y ]| ≥ t] ≤ 2e−t /(3n) .

OPTIMAL PACKINGS OF BOUNDED DEGREE TREES

7

We say that (Xt )t≥0 is a symmetric random walk on [ℓ] if X0 ∈ [ℓ] and for all t ≥ 1, we
have P[Xt = Xt−1 + 1] = P[Xt = Xt−1 − 1] = 1/2, independently of X0 , . . . , Xt−1 , where Xt is
considered modulo ℓ.
Lemma 3.3 (see [20]). Let ℓ ≥ 3 be an odd integer. If (Xt )t≥0 is a symmetric random walk on
[ℓ], then there is a 0 < γ < 1 and an integer t0 > 0 such that for every i ∈ [ℓ] and every t ≥ t0 ,
1 ± γt
.
ℓ
3.3. Regularity and quasi-randomness tools. In this section we collect several basic statements involving graph regularity and quasi-randomness as well as some of their consequences.
The following three propositions follow easily from the definition of (ε, d)-regularity.
P[Xt = i] =

Proposition 3.4. Let 0 < ε ≤ δ ≤ d ≤ 1. Suppose G is an (ε, d)-regular bipartite graph
with vertex partition (A, B) and A′ ⊆ A, B ′ ⊆ B with |A′ |/|A|, |B ′ |/|B| ≥ δ. Then G[A′ , B ′ ] is
(ε/δ, d)-regular.
Proposition 3.5. Suppose n ∈ N with 1/n ≪ ε ≪ d ≤ 1. If G is an (ε, d)-regular bipartite
graph with vertex partition (A, B) and n = |A| ≤ |B|, then there is a matching of size at least
(1 − ε)n in G.
Proposition 3.6. Suppose G is an (ε, d)-regular bipartite graph with vertex partition (A, B)
and B ′ ⊆ B with |B ′ | ≥ ε|B|. Then all but at most 2ε|A| vertices in A have degree (d ± ε)|B ′ |
in B ′ .
The following result follows easily from Proposition 3.4 and 3.6.
Proposition 3.7. Suppose ℓ, n ∈ N and 1/n ≪ ε ≪ d ≤ 1. Then every (ε, d)-regular ℓ-cycle
n-blow-up contains a (6ε, d)-super-regular ℓ-cycle (1 − 4ε)n-blow-up.
We will also use the next result from [9]. (In [9] it is proved in the case when |A| = |B| with
16ε1/5 instead of ε1/6 . The version stated below can be easily derived from this.)
Theorem 3.8. Suppose n ∈ N with 1/n ≪ ε ≪ α, p ≤ 1. Suppose G is a bipartite graph with
vertex partition (A, B) such that |A| = n, αn ≤ |B| ≤ α−1 n and at least (1 − 5ε)n2 /2 pairs
u, v ∈ A satisfy d(u), d(v) ≥ (p − ε)|B| and d(u, v) ≤ (p + ε)2 |B|. Then G is ε1/6 -regular. In
particular, if G is (ε, p)-quasi-random, it is (ε1/6 , p)-super-regular.
The next three propositions involve basic properties of quasi-random and of (β, α)-dense
graphs which follow easily from the definitions.
Proposition 3.9. Suppose ε ≤ 1/10. Let G be a (ε, p)-quasi-random graph on n vertices. Let
U ⊆ V (G) be a set of vertices with |U | ≥ (1 − ε)n and let E1 , E2 be collections of edges on V (G)
such that ∆(E1 ) ≤ εn and ∆(E2 ) ≤ εn. Then (G ∪ E1 )[U ] − E2 is (10p−2 ε, p)-quasi-random.
Proposition 3.10. Suppose n ∈ N with 1/n ≪ β ≪ p ≤ 1. If G is a (β, p)-quasi-random graph
on n vertices, then it is (β 1/6 , p − β 1/6 )-dense.
Proof. Let V := V (G) = {v1 , . . . , vn } and V ′ = {v1′ , . . . , vn′ }. Consider the bipartite graph H
with bipartition V ∪ V ′ such that vi vj′ ∈ E(H) if and only if vi vj ∈ E(G). Observe that H is
(β, p)-quasi-random. Hence, by Theorem 3.8, H is (β 1/6 , p)-super-regular. Let U1 , U2 ⊆ V with
|U1 |, |U2 | ≥ β 1/6 n. Let U2′ = {vi′ : vi ∈ U2 }. We conclude that denG (U1 , U2 ) = denH (U1 , U2′ ) ≥
p − β 1/6 . Thus G is (β 1/6 , p − β 1/6 )-dense.

Proposition 3.11. Suppose 0 < α, β < 1 and C ≥ 1. If G is a (β, α)-dense graph on n vertices
and G′ is a spanning subgraph of G such that dG (v) − dG′ (v) ≤ Cβn for all v ∈ V (G), then G′
is (Cβ 1/2 , α − β 1/2 )-dense.
The next result is a slight extension of Szemerédi’s regularity lemma. We will apply it in
Section 5.

8

FELIX JOOS, JAEHOON KIM, DANIELA KÜHN, AND DERYK OSTHUS

Lemma 3.12. Suppose M, M ′ , n, s, t ∈ N, 1/n ≪ 1/M ≪ 1/M ′ ≪ ε ≪ 1/t ≪ β ≪ α, 1/s, d ≤
1. Suppose G is a graph on n vertices with equitable partition (U1 , . . . , Us ). Then there is a
k ∈ N such that G has a vertex partition (V0 , V1 , . . . , Vk ) satisfying the following, where we write
dij := denG (Vi , Vj ):
M′ ≤ k ≤ M,
|V0 | ≤ εn,
|V1 | = . . . = |Vk |,
for every i ∈ [k], the graph G[Vi , Vj ] is (ε, dij )-regular except for at most εk indices
j ∈ [k].
(V) for every i ∈ [k], there exists a unique j ∈ [s] such that Vi ⊆ Uj and L := |{i : Vi ⊆
Uj }| = |{i : Vi ⊆ Uj ′ }| is odd for all j, j ′ ∈ [s].

(I)
(II)
(III)
(IV)

Let Rt be the multigraph on [k] such that Rt contains an edge ij with multiplicity ⌊tdij ⌋ if and
only if G[Vi , Vj ] is (ε, dij )-regular and dij ≥ 1/t1/2 . Then the following hold:
(VI) For each j ∈ [s], let UjR := {i ∈ [k] : Vi ⊆ Uj }. If dG,Uj (v) = (d ± β)|Uj | for every
v ∈ V (G), then for every i ∈ [k] we have
dRt ,U R (i) = (d ± 3β)t|UjR |.
j

(VII) If G is (β, α)-dense, then Rt is (2β, tα/2)-dense.
Proof. As (I)–(V) are standard, we omit the proof. Let d′ij := dij if G[Vi , Vj ] is (ε, dij )-regular
and dij ≥ 1/t1/2 and let d′ij = 0 otherwise. We first show (VI). So assume that dG,Uj (v) =
(d ± β)|Uj | for all v ∈ V (G). Let eij be the number of edges between Vi and Uj in G and let
n := |V1 | = · · · = |Vk |. Note that n = (1 ± ε)n/k. Then
eij =

X

dG,Uj (v) ± eG (Vi ) = (d ± 3β/2)|Uj ||Vi |

v∈Vi

= (d ± 3β/2)(|UjR |n ± εn)n = (d ± 2β)|UjR |n2 .

(3.1)

By (IV), there are at most εkn2 edges between Vi and all those Vj ′ for which G[Vi , Vj ′ ] is not
(ε, dij ′ )-regular. Moreover, there are at most kn2 /t1/2 edges between Vi and all those Vj ′ for
which dij ′ ≤ 1/t1/2 . Furthermore, eG (Vi , Uj ∩ V0 ) ≤ εnn. Thus
eij =

X

d′ij ′ n2 ± (εkn2 + kn2 /t1/2 + εnn)

j ′ ∈UjR

=

2kn2
n2 X
n2 2kn2
⌊td′ij ′ ⌋ ± 1/2 = dRt ,U R (i) ± 1/2 .
j
t ′ R
t
t
t

(3.2)

j ∈Uj

By combining (3.1) and (3.2), we obtain
dRt ,U R (i) = (d ± 3β)t|UjR |,
j

which implies (VI).
S
S
To prove (VII), let W, W ′ ⊆ V (Rt ) with |W |, |W ′ | ≥ 2β|Rt | = 2βk. Thus | i∈W Vi |, | i∈W ′ Vi | ≥
βn. Since G is (β, α)-dense, this implies that
eG

[

i∈W

Vi ,

[

i∈W ′

Vi

!




 [  [ 



Vi  ≥ α|W ||W ′ |n2 .
Vi  
≥ α



′
i∈W

i∈W

(3.3)

OPTIMAL PACKINGS OF BOUNDED DEGREE TREES

On the other hand,
eG

[

i∈W

Vi ,

[

i∈W ′

Vi

!

(IV )

≤

X

d′ii′ n2 + εk|W |n2 +

i∈W,i′ ∈W ′

≤

X

(⌊td′ii′ ⌋ + 1)

i∈W,i′ ∈W ′

≤

eRt (W, W ′ )

9

k|W |n2
t1/2

n2 2k|W |n2
+
t
t1/2

n2 |W ||W ′ |n2
.
+
t
t1/3

(3.4)

By combining (3.3) and (3.4), we obtain
eRt (W, W ′ ) ≥ αt|W ||W ′ | − t2/3 |W ||W ′ | ≥ tα|W ||W ′ |/2.
Thus Rt is (2β, tα/2)-dense.



In Section 3.5 and Section 10 we will use the following version of the Blow-up lemma of
Komlós, Sárközy and Szemerédi (see Remark 8 in [22]).
Theorem 3.13. Suppose r, n, ∆ ∈ N and 1/n ≪ ε ≪ d, d0 , 1/∆, 1/r ≤ 1. Let H be an r-partite
graph with ∆(H) ≤ ∆ with vertex partition (X1 , . . . , Xr ) and let G be an r-partite graph with
vertex partition (V1 , . . . , Vr ) such that |Xi | = |Vi | ∈ {n, n + 1} for all i ∈ [r]. Suppose that
G[Vi , Vj ] is (ε, d)-super-regular for each i 6= j ∈ [r]. Let X ′ be a subset of V (H) with |X ′ | ≤ εn
and for each i ∈ [r] and x ∈ X ′ ∩ Xi , let Ax ⊆ Vi with |Ax | ≥ d0 n. Then there exists an
embedding φ : H → G such that φ(x) ∈ Ax for all x ∈ X ′ .
3.4. Graph packing and decomposition tools. In this subsection we will collect some results
about packings and decompositions of graphs that we will use later on. We start with three
simple results about splitting an (ε, d)-regular or a (β, α)-dense graph into suitable edge-disjoint
subgraphs.
Proposition 3.14. Let k, n ∈ N and 1/n ≪ ε ≪ d, d′ , 1/k ≤ 1. Let G be a bipartite graph
with vertex partition (A, B) such that |A| = |B| = n. If G is (ε, d)-regular and d′ k ≤ d, then
there exist edge-disjoint (2ε, d′ )-regular spanning subgraphs G1 , . . . , Gk of G such that dG′ (u) ≤
S
(1 − kd′ /d)n + n2/3 for all u ∈ A ∪ B, where G′ := G − ki=1 E(Gi ).

Proof. We colour each edge of G with colour i ∈ [k] with probability d′ /d and with colour
0 with probability 1 − kd′ /d at random independently from all other edges. Let Gi be the
graph consisting of the edges of colour i. Straightforward applications of Lemma 3.2 show that
G1 , . . . , Gk are (2ε, d′ )-regular and dG′ (u) ≤ (1 − kd′ /d)n + n2/3 for all u ∈ A ∪ B with positive
probability, in particular, such graphs exist.

Proposition 3.15. Suppose k, n ∈ N with 1/n ≪ 1/k, α, β, d ≤ 1, and β ≪ α, d. Let G be a
(β, kα)-dense multigraph on n vertices whose edge multiplicity is at most k. If dG (v) = k(d±β)n
for all v ∈ V (G), then G can be decomposed into k spanning edge-disjoint (simple) graphs
G1 , . . . , Gk such that for each i ∈ [k], the graph Gi is (β, α − β)-dense and dGi (v) = (d ± 2β)n
for all v ∈ V (G).
Proof. For every set E of ℓ parallel edges of G, we choose an ℓ-subset of [k] uniformly at random
and label every edge in E with a distinct member of this ℓ-subset. For each i ∈ [k], let Gi be the
spanning subgraph of G consisting of all edges with label i. Lemma 3.2 shows that the Gi have
the desired properties with probability at least 1/2, in particular, such a decomposition exists.

In Section 5, we will need to find an approximate decomposition of an almost regular graph
into long but not quite spanning cycles. As an intermediate step, the following lemma gives a
decomposition into “almost” spanning almost regular subgraphs.
Lemma 3.16. Suppose D, k, n ∈ N with 1/n ≪ d, 1/k, α, β, 1/D ≤ 1, and β ≪ α, d, 1/D, and
D ≥ 6. Let G be a (β, kα)-dense multigraph on n vertices whose edge multiplicity is at most k.

10

FELIX JOOS, JAEHOON KIM, DANIELA KÜHN, AND DERYK OSTHUS

Suppose that (U1 , . . . , UD ) is an equitable partition of V (G) such that dG,Ui (v) = (d ± β)k|Ui |
[D] 
for all v ∈ V (G) and i ∈ [D]. Then we can decompose G into {GS : S ∈ D−3
} such that for
[D] 
all S ∈ D−3
S
(I) GS is a (2β, kαD −3 )-dense multigraph with V (GS ) = i∈S Ui , and
−1
S
(II) dGS (v) = (d ± 2β)k D−1
n for all v ∈ i∈S Ui .
3
−1
In particular, e(GS ) = (1 ± β 2/3 ) D
e(G).
3

Proof. We show that a suitable random decomposition produces a decomposition
as desired with
[D] 
positive probability. We randomly label every edge of G with a set from D−3
according to the
following rules. For each i ∈ [D] and each edge in G[Ui ], choose a set uniformly at random from
[D] 
{S : i ∈ S ∈ D−3
}. For i, j ∈ [D] with i 6= j and each edge in G[Ui , Uj ], choose a set uniformly
[D] 
at random from {S : i, j ∈ S ∈ D−3
}.
S
[D] 
For each S ∈ D−3 , let GS be the random (multi-)subgraph of G with vertex set i∈S Ui
[D] 
whose edge set is the set of all edges with label S. Therefore, for all S ∈ D−3
and u ∈ Ui with
i ∈ S, we obtain




D − 2 −1 S
D − 1 −1
dG, j∈S\{i} Uj (u)
dG,Ui (u) +
E[dGS (u)] =
D−5
D−4
6(D − 4)(d ± β)kn
6(d ± β)kn
+
=
D(D − 1)(D − 2)(D − 3) D(D − 2)(D − 3)(D − 4)


D − 1 −1
(d ± β)kn.
=
3
S
S
[D] 
Let S ∈ D−3
and W, W ′ ⊆ i∈S Ui with |W |, |W ′ | ≥ 2β| i∈S Ui | ≥ βn. Observe that every
S
edge in G[ i∈S Ui ] is contained in GS with probability at least 2D −3 . Thus, as G is (β, kα)-dense,
E[eGS (W, W ′ )] ≥ 2D −3 kα|W ||W ′ |.

Straightforward applications of Lemma 3.2 lead to the desired result.



We call a path of length 2 a seagull and a graph consisting of the vertex-disjoint union of
k seagulls a flock of seagulls of size k or just a flock of seagulls or a flock. Moreover, let the
vertices of degree one of a seagull be its wings. The following simple proposition guarantees a
decomposition of a suitable bipartite graph into edge-disjoint flocks of seagulls.
Proposition 3.17. Let G be a bipartite graph with vertex partition (A, B). Suppose every vertex
in B has even degree. Then G can be decomposed into at most 3∆(G) edge-disjoint flocks of
seagulls with wings in A.
Proof. Since every vertex u ∈ B has even degree, we can decompose the edges incident to
u into dG (u)/2 edge-disjoint seagulls with wings in A. Let {S1 , . . . , St } be a corresponding
decomposition of G into seagulls. Let H be the graph with vertex set {S1 , . . . , St } and edge set
{Si Sj : V (Si ) ∩ V (Sj ) 6= ∅}. Thus we have ∆(H) ≤ 3∆(G) − 1. Hence we can properly colour H
by using 3∆(G) colours, and each colour class gives rise to a flock of seagulls. Thus there exists
a decomposition of G into 3∆(G) edge-disjoint flocks of seagulls.

The following observation will be used to find suitable partitions (e.g. of flocks of seagulls).
P
Proposition 3.18. Let X be a set of size n and let w : X → [0, M ]. Let w(X ′ ) := x∈X ′ w(x)
for all X ′ ⊆ X. For each m ≤ n, there is a partition of X into X1 , . . . , Xm such that |Xi | ≤
⌈2n/m⌉ and w(Xi ) ≤ 2w(X)/m + M for all i ∈ [m].
′ be disjoint subsets of X such that |X ′ | ≤ ⌈2n/m⌉ and w(X ′ ) ≤ 2w(X)/m+
Proof. Let X1′ , . . . , Xm
i S
i
′
M for all i ∈ [m] and subject to these conditions such that | m
i=1 Xi | is maximal. Observe that
such sets exist as the collection of m empty sets satisfy the first two conditions.

OPTIMAL PACKINGS OF BOUNDED DEGREE TREES

11

S
Sm
Pm
′
′
′
If m
i=1 Xi = X, there is nothing to show. Otherwise, let x ∈ X \ i=1 Xi . Since
i=1 |Xi | ≤
P
m
′
′
|X| − 1, there are more than m/2 indices i ∈ [m] such that |Xi | < ⌈2n/m⌉. Since i=1 w(Xi ) ≤
w(X), there are at least m/2 indices i ∈ [m] such that w(Xi′ ) ≤ 2w(X)/m. Thus there exists
i ∈ [m] such that |Xi′ ∪ {x}| ≤ ⌈2n/m⌉ and w(Xi′ ∪ {x}) ≤ 2w(X)/m + M . However, then
′ , X ′ ∪ {x}, X ′ , . . . , X ′ contradicts the choice of X ′ , . . . , X ′ .

X1′ , . . . , Xi−1
m
m
1
i
i+1
3.5. Extending a partial embedding. In this section we provide three results that allow
us to extend partial embeddings to proper embeddings. The first one is only for forests and
requires only very mild assumptions. The second one is based on the Blow-up lemma and
requires stronger assumptions but works for general graphs. The third one provides a tool for
embedding a collection of edges where one endpoint has already been embedded.
Lemma 3.19. Suppose n, k ∈ N. Let G be a graph on n vertices such that dG (u, v) ≥ k for
every pair of vertices u, v. Let F be a forest on k vertices. Let I ⊆ V (F ) be a 3-independent set
in F . Then for any injection φ′ : I → V (G), there exists a function φ consistent with φ′ which
embeds F into G.
Proof. Let v1 , . . . , vk be an ordering of V (F ) such that for every i, the vertex vi has at most one
neighbour in {v1 , . . . , vi−1 }, say va(i) , if this neighbour exists. Note that for all i ∈ [k], we have
dF,I (vi ) ≤ 1, since I is 3-independent. We define φ(v) := φ′ (v) for every v ∈ I. We sequentially
determine φ(vi ) for the remaining vertices according to the order v1 , . . . , vk . So assume that
vi ∈
/ I and we have already determined φ(v) for each v ∈ {v1 , . . . , vi−1 } ∪ I.
If dF,I (vi ) = 0, then we let φ(vi ) be some vertex in V (G) \ φ({v1 , . . . , vi−1 } ∪ I) if va(i) does
not exist and otherwise let φ(vi ) be some vertex in NG (φ(va(i) )) \ φ({v1 , . . . , vi−1 } ∪ I), which
exists as δ(G) ≥ k.
If NF (vi ) ∩ I = {u} for some vertex u, then we let φ(vi ) be some vertex in N := NG (φ(u)) \
φ({v1 , . . . , vi−1 } ∪ I) if va(i) does not exist and otherwise let φ(vi ) be some vertex in N ′ :=
NG (φ(va(i) ), φ(u))\φ({v1 , . . . , vi−1 }∪I). Such a choice is always possible, because min{|N |, |N ′ |} ≥
k − (k − 1) ≥ 1.

Lemma 3.20. Suppose n, ∆
graph on n vertices. Let H
3-independent set in H with
function φ consistent with φ′

∈ N and 1/n ≪ ε ≪ p, 1/∆ ≤ 1. Let G be an (ε, p)-quasi-random
be a graph on n vertices with ∆(H) ≤ ∆. Let I ⊆ V (H) be a
|I| ≤ εn. Then for any injection φ′ : I → V (G), there exists a
which embeds H into G.

Proof. Let U := φ′ (I). As I is a 3-independent set, dH,I (x) ≤ 1 for any x ∈ V (H) and
dH,I (x) = 1 for at most ∆|I| ≤ ∆εn vertices x. Apply the Hajnal-Szemerédi theorem to obtain
an equitable partition (X1 , . . . , X∆+1 ) of H − I such that Xi is an independent set of H for all
i ∈ [∆ + 1]. Consider a partition (V1 , . . . , V∆+1 ) of V (G) \ U such that |Xi | = |Vi | for i ∈ [∆ + 1]
chosen uniformly at random. Straightforward applications of Lemma 3.2 and Theorem 3.8 show
that the following hold with probability at least 1/2:
(GV1) G[Vi , Vj ] is (ε1/7 , p)-super-regular for all distinct i, j ∈ [∆ + 1], and
(GV2) dG,Vi (u) ≥ pn/(2(∆ + 1)) for all u ∈ U and i ∈ [∆ + 1].
In particular, there exists a partition (V1 , . . . , V∆+1 ) of V (G) \ U such that |Xi | = |Vi | and both
(GV1) and (GV2) hold.
For each x ∈ Xi for which x ∈ NH (y) for some y ∈ I, we let Ax := NG (φ′ (y)) ∩ Vi . Thus
|Ax | ≥ pn/(2(∆ + 1)). Apply the Blow-up lemma (Theorem 3.13) to find an embedding φ′′ of
H − I into G − U such that φ′′ (x) ∈ Ax ⊆ NG (φ′ (y)) whenever x ∈ NH (y) for some y ∈ I. Then
we obtain the desired embedding φ by defining φ := φ′ ∪ φ′′ .

The next result will be used to embed edges of trees where one endpoint has already been
embedded. The role of the graph H is to help us avoid collisions between edges belonging to
the same tree.
Proposition 3.21. Suppose ∆, m, s ∈ N. Let G be a graph, let A ⊆ V (G), and let u1 , . . . , um
be a sequence of (not necessarily distinct) vertices of G. Let W1 , . . . , Wm be sets of vertices and
let H be a graph on [m] satisfying the following:

12

FELIX JOOS, JAEHOON KIM, DANIELA KÜHN, AND DERYK OSTHUS

(i) dG,A (ui ) − |Wi | ≥ 3∆ + m/s + s for all i ∈ [m],
(ii) |{i ∈ [m] : v = ui }| ≤ ∆ for any v ∈ V (G), and
(iii) ∆(H) ≤ ∆.
Then we can choose distinct edges u1 v1 , . . . , um vm in G such that |{i ∈ [m] : v = vi }| ≤ s for all
v ∈ V (G) and vi ∈ A \ Wi for all i ∈ [m] and vi ∈
/ {uj , vj } whenever ij ∈ E(H).
Proof. We sequentially choose vi . Assume that we have chosen v1 , . . . vi−1 such that
(a)i−1 vj ∈ (NG (uj ) ∩ A) \ Wj and uj vj 6= uj ′ vj ′ for any j 6= j ′ ≤ i − 1,
(b)i−1 |{j ≤ i − 1 : v = vj }| ≤ s for any v ∈ V (G), and
(c)i−1 vj ∈
/ {uj ′ , vj ′ } whenever jj ′ ∈ E(H) and j 6= j ′ ≤ i − 1.
Consider the set (NG (ui ) ∩ A) \ Wi , which contains at least 3∆ + m/s + s vertices by (i). Among
those are
• at most ∆ − 1 vertices w such that w = vj , ui = uj for some j ≤ i − 1, by (ii),
• at most s vertices w such that w = uj , ui = vj for some j ≤ i − 1, by (b)i−1 ,
• at most m/s vertices w such that |{j ≤ i − 1 : w = vj }| = s, and
• at most 2∆ vertices w such that w ∈ {uj , vj } for j ∈ NH (i), by (iii).
Therefore, by (i), we can choose a vertex vi satisfying (a)i , (b)i and (c)i .

4. Approximate cycle decomposition
The aim of this section is to show that every (β, α)-dense almost regular graph on an odd
number of vertices has an approximate decomposition into Hamilton cycles and a few very long
odd cycles (see Lemma 4.5). In Section 5, we will apply this result to the reduced graph obtained
from Szemerédi’s regularity lemma.
The main idea for the proof is based on that of Theorem 4.1 in [14]. We will use results from
[23],[24] and [25] which imply that robustly expanding graphs enjoy very strong Hamiltonicity
properties. To state these, we first need to introduce the concept of robust expansion. For
0 < ν ≤ τ < 1, a graph G on n vertices and S ⊆ V (G), we define the ν-robust neighbourhood
RNν,G (S) of S as the set of all those vertices of G which have at least νn neighbours in S. We
call G a robust (ν, τ )-expander if
|RNν,G (S)| ≥ |S| + νn for all S ⊆ V (G) with τ n ≤ |S| ≤ (1 − τ )n.
We will use the following two results about Hamilton cycles in robust expanders.
Theorem 4.1 ([25]). Suppose n ∈ N and 1/n ≪ ν ≤ τ ≪ α ≤ 1. Then any robust (ν, τ )expander G on n vertices with δ(G) ≥ αn contains a Hamilton cycle.
The following result guarantees a Hamilton decomposition in an even-regular robust expander.
It is derived in [24] from a digraph version in [23].
Theorem 4.2 ([23, 24]). Suppose n ∈ N and 1/n ≪ ν ≤ τ ≪ α ≤ 1. If G is an αnregular robust (ν, τ )-expander on n vertices such that αn is even, then G can be decomposed into
Hamilton cycles.
The next observation shows that in a (β, α)-dense graph every not too small set of vertices
induces a robust expander.
Proposition 4.3. Suppose n ∈ N and 1/n ≪ β ≪ α, γ ≤ 1. Let G be a (β, α)-dense graph on
n vertices. If U ⊆ V (G) with |U | ≥ γn, then G[U ] is a robust (αβ, 2β/γ)-expander.
Proof. Consider a set S ⊆ U with 2βn ≤ (2β/γ)|U | ≤ |S| ≤ (1 − 2β/γ)|U | ≤ |U | − 2βn. Let
T := {v ∈ U : dG,S (v) < αβn}. This implies that
denG (S, T ) ≤

αβn
α
αβn|T |
≤
≤ .
|S||T |
2βn
2

As G is (β, α)-dense, we conclude that |T | < βn. Thus
|RNαβ,G[U ] (S)| = |U \ T | ≥ |U | − βn ≥ |S| + αβ|U |.
Therefore, G is a robust (αβ, 2β/γ)-expander.



OPTIMAL PACKINGS OF BOUNDED DEGREE TREES

13

Next, we show that every (β, α)-dense graph can be “approximated” by an Eulerian graph.
Proposition 4.4. Suppose n ∈ N and 1/n ≪ β ≪ α ≤ 1. Let G be a (β, α)-dense graph on n
vertices with δ(G) ≥ αn. Then G contains an Eulerian subgraph G′ such that ∆(G−E(G′ )) ≤ 3.
In particular, e(G − E(G′ )) ≤ 3n/2.
Proof. Let M be a maximal matching in the subgraph of G induced by the vertices of odd
degree. Let X be the set of all vertices of odd degree which are not covered by M . Thus
X is an independent set (of even size) and hence |X| < βn as G is (β, α)-dense. We write
X = {x1 , y1 , . . . , xk , yk }. Since δ(G) ≥ αn and G is (β, α)-dense, for every i ∈ [k], there are
at least α3 n2 /3 edges joining N (xi ) and N (yi ) which do not lie in M . Thus there are at least
α3 n/6 internally vertex-disjoint paths of length 3 between xi and yi which are edge-disjoint from
M . Since α3 n/6 ≥ βn ≥ 2k, we can choose vertex-disjoint paths P1 , . . . , Pk in G − M such that
S
Pi is a path of length 3 between xi and yi . Then G′ := G − (M ∪ ki=1 E(Pi )) is an Eulerian
subgraph of G with ∆(G − E(G′ )) ≤ 3.

Lemma 4.5. Suppose n, r ∈ N and 1/n ≪ β ≪ α, 1/r < 1 and n is odd. Let G be a (β, α)-dense
Eulerian graph on n vertices with δ(G) ≥ αn and ∆(G)−δ(G) ≤ βn. Then G can be decomposed
1
into Hamilton cycles and at most 2rβn odd cycles of length at least (1 − r−1
)n.
To prove Lemma 4.5, we will sequentially remove the edges of suitable odd cycles until the
remaining graph is regular. We can then obtain a Hamilton decomposition of the remaining
graph via Theorem 4.2. The argument builds on ideas from [14].
Proof. Given any V ′ ⊆ V (G) such that |V ′ | is even, we say (V1 , . . . , Vk ) is a fair k-partition of
V ′ with respect to G if the following hold:
(a) |Vi | is even for every i ∈ [k],
(b) ||Vi | − |Vj || ≤ 2, and
(c) dG,Vi (v) ≥ dG,V ′ (v)/k − n2/3 for all v ∈ V (G) and i ∈ [k].
First, note that any set V ′ ⊆ V (G) such that |V ′ | is even has a fair k-partition. (To see this,
choose a partition satisfying (a) and (b) uniformly at random and apply Lemma 3.2 to show
that (c) holds with probability at least 1/2.) Now we sequentially construct nested collections
C0 := ∅ ⊆ C1 ⊆ · · · ⊆ Cs of edge-disjoint odd cycles and spanning subgraphs G0 := G ⊇ G1 ⊇
· · · ⊇ Gs of G such that Gs is regular and for all 0 ≤ i < s the following hold:
S
(i)i E(Gi ) − E(Gi+1 ) = C∈Ci+1 \Ci E(C) and |Ci+1 \ Ci | ≤ 2r,
(ii)i dGi (v) − dGi+1 (v) ≤ 4r − 2 for every v ∈ V (G),
(iii)i (∆(Gi ) − δ(Gi )) − (∆(Gi+1 ) − δ(Gi+1 )) = 2, and
1
)n for every C ∈ Ci+1 .
(iv)i |C| ≥ (1 − r−1
Suppose that for some j ≥ 0 we have already defined collections C0 ⊆ C1 ⊆ · · · ⊆ Cj of edgedisjoint odd cycles and a sequence G0 ⊇ G1 ⊇ · · · ⊇ Gj of graphs satisfying (i)i –(iv)i for all
0 ≤ i < j. If Gj is regular, then we may set s := j, so assume that Gj is not regular. Since
∆(G) − δ(G) ≤ βn, (iii)i for i < j implies that j ≤ βn/2. This together with (ii)i for i < j
implies that
dG (v) − dGj (v) ≤ 2rβn.

(4.1)

By Proposition 3.11, the graph Gj is (2rβ 1/2 , α/2)-dense. Thus Proposition 4.3 implies that
for any set V ′ ⊆ V (G) with |V ′ | ≥ αn/5 and any graph G′ ⊆ Gj [V ′ ]
with ∆(Gj [V ′ ] − E(G′ )) ≤ 4r, the graph G′ [V ′ ] is a robust (αrβ 1/2 /2, β 1/3 )expander.

(4.2)

Let Mj be the set of all vertices of maximum degree in Gj and let Zj := V (G) \ Mj . Note
that dGj (u) − dGj (v) ≥ 2 for every pair of vertices u ∈ Mj , v ∈ Zj , since G (and thus Gj ) is
Eulerian. Pick x ∈ Mj and let

Zj
if |Mj | is odd,
′
Z :=
Zj ∪ {x} if |Mj | is even.

14

FELIX JOOS, JAEHOON KIM, DANIELA KÜHN, AND DERYK OSTHUS

Note that |Z ′ | is even, because n is odd. Let (V1 , . . . , Vr ) be a fair r-partition of Z ′ with
respect to G. Next we show how to define Gj+1 and Cj+1 . We will choose the cycles in Cj+1 \ Cj
one by one. Assume we have already defined edge-disjoint odd cycles C1 , . . . , Ct−1 in Gj for
some t ∈ [r]. Consider the graph
Gj,t := Gj [V (G) \ Vt ] −

t−1
[

E(Ci ).

i=1

By (4.1), part (c) in the definition of an r-fair partition, and δ(G) ≥ αn, we conclude that
dGj [V (G)\Vt ] (v) ≥ αn/3. Hence δ(Gj,t ) ≥ αn/3 − 2r. This together with (4.2) implies that we
can use Theorem 4.1 to obtain a Hamilton cycle Ct in Gj,t . We repeat this procedure until we
have defined C1 , . . . , Cr . Note that |Ct | ≥ (1 − 1/r)n − 2 ≥ (1 − 1/(r − 1))n
S for each t ∈ [r].
If |Mj | is odd, then we let Cj+1 := Cj ∪ {C1 , . . . , Cr }, and Gj+1 := Gj − ri=1 E(Ci ). Then we
have

2r − 2 if v ∈
/ Mj ,
dGj (v) − dGj+1 (v) =
2r
if v ∈ Mj ,
so each of (i)j –(iv)j holds.
If |Mj | is even, we will define additional cycles Cr+1 , . . . , C2r as follows. Let (U1 , . . . , Ur ) be
a fair r-partition of V (G) \ {x}. Assume for some r + 1S≤ t ≤ 2r we have already defined
additional edge-disjoint odd cycles Cr+1 , . . . , Ct−1 in Gj − ri=1 E(Ci ). Consider the graph
G′j,t := Gj [V (G) \ Ut−r ] −

t−1
[

E(Ci ).

i=1

By (c), we obtain δ(G′j,t ) ≥ αn/3−4r. As before we can use Theorem 4.1 to obtain a Hamilton cycle Ct in G′j,t . We repeat this process until we defined C1 , . . . , C2r . Let Cj+1 := Cj ∪{C1 , . . . , C2r },
S
and Gj+1 := Gj − 2r
i=1 E(Ci ). Thus

4r − 4 if v ∈
/ Mj ,
dGj (v) − dGj+1 (v) =
4r − 2 if v ∈ Mj ,

so each of (i)j –(iv)j holds.
Hence, by repeating this procedure, we can obtain a regular graph Gs and a collection Cs of
1
edge-disjoint odd cycles of length at least (1− r−1
)n. Also |Cs | ≤ 2rs ≤ 2rβn, since s ≤ βn/2+1.
Observe that Gs is Eulerian as G is Eulerian. By (4.2) and Theorem 4.2, Gs can be decomposed
into a collection C ′ of Hamilton cycles. Now C := Cs ∪ C ′ is the desired decomposition of G. 
5. Decomposing a graph into cycle blow-ups
The main result in the current section (Lemma 5.1) guarantees a near-optimal packing of
blow-ups of long cycles into a (β, α)-dense graph which is close to being regular. Results in
Section 6 will allow us to obtain a near-optimal packing of trees into blow-ups of long cycles. So
together these results guarantee a near-optimal packing of trees into a (β, α)-dense graph which
is close to being regular. The fact in (R1) that none of the cycle blow-ups is (close to) spanning
will be important when we apply Lemma 5.1 in the iteration lemma in Section 8.
Lemma 5.1. Suppose D, M, M ′ , n, t ∈ N with 1/n ≪ 1/M ≪ 1/M ′ ≪ ε ≪ 1/t ≪ β ≪ α ≤
[D] 
d, 1/D ≤ 1 and let D be even with D ≥ 6. Let I := D−3
. Suppose that G is a (β, α)-dense
graph on n vertices with equitable partition (U1 , . . . , UD ) such that dG,Ui (v) = (d ± β)D −1 n for
all v ∈ V (G) and all i ∈ [D]. Then there exist a set V0 ⊆ V (G) with |V0 | ≤ εn, an integer Γ
′
with M
S ≤ Γ ≤ M , and for each S ∈ I a set CS such that the following properties hold (writing
C := S∈I CS ):
(R1) for every S ∈ I, the set CS is a set of (2ε, 1/t)-super-regular cycle (1 − ε) Γn -blow-ups such
that C ⊆ G for each C ∈SCS , the length of each C ∈ CS is odd and at least (1 − 7/(2D))Γ
and such that V (C) ⊆ ( i∈S Ui ) \ V0 for each C ∈ CS ,
(R2) the cycle blow-ups in C are pairwise edge-disjoint,
−1
(R3) e(CS ) = (1 ± β 1/2 ) D3
e(G),

OPTIMAL PACKINGS OF BOUNDED DEGREE TREES

15

P
(R4) dG (v) − C∈C dC (v) ≤ 3n/t1/2 for every v ∈ V (G) \ V0 . In particular, e(C) ≥ e(G) −
2n2 /t1/2 .
To prove Lemma 5.1, we apply Szemerédi’s regularity lemma to obtain a reduced multigraph
We then apply Lemma 4.5 to obtain an approximate decomposition of Rm into long odd
cycles. This then translates into the existence of the desired super-regular cycle blow-ups in G.
The reliance on Szemerédi’s regularity lemma has the drawback that we have a small exceptional
set V0 which is not part of the cycle blow-ups. On the other hand the packing is very efficient:
by (R4) the leftover density can be chosen to be much smaller than the input parameters α, β
of G.

Rm .

Proof. In this proof, given a graph H, we set dH (v) := 0 whenever v ∈
/ V (H). We apply the
2
regularity lemma (Lemma 3.12) to the graph G with ε playing the role of ε to obtain a partition
(V0′ , V1′ , . . . , VΓ′ ) of V (G) such that, writing dij := denG (Vi′ , Vj′ ),
(i) M ′ ≤ Γ ≤ M ,
(ii) |V0′ | ≤ ε2 n,
(iii) |V1′ | = . . . = |VΓ′ | =: n′ ,
(iv) for each i ∈ [Γ], the graph G[Vi′ , Vj′ ] is (ε2 , dij )-regular except for at most ε2 Γ indices
j ∈ [Γ], and
(v) for each i ∈ [Γ], there exists a unique j ∈ [D] such that Vi′ ⊆ Uj and, writing UjR := {i :
Vi′ ⊆ Uj }, we have |U1R | = |UjR | for all j ∈ [D] and |U1R | is odd.
Moreover, let R be the graph with vertex set [Γ] where two vertices i, j are joined by an edge if
dij ≥ 1/t1/2 and G[Vi′ , Vj′ ] is (ε2 , dij )-regular. Construct a multigraph Rm from R by replacing
R ) is an equitable partition of V (Rm ).
each edge ij in R by ⌊dij t⌋ edges. Observe that (U1R , . . . , UD
Then
(vi) dRm ,U R (i) = (d ± 3β)t|UjR | for all i ∈ [Γ] and j ∈ [D] and
j
(vii) Rm is (2β, tα/2)-dense.
⌊d t⌋

1 , . . . , E ij
For every ij ∈ E(R), we use Proposition 3.14 to find ⌊dij t⌋ disjoint edge sets Eij
ij
k induces a (2ε2 , 1/t)-regular graph for every k ∈ [⌊d t⌋].
of G[Vi′ , Vj′ ] such that Eij
ij
S
′ := E(G[V ′ , V ′ ]) \ ⌊dij t⌋ E k for any ij ∈ E(R). Note that, also by Proposition 3.14,
Let Eij
ij
i
j
k=1
for every edge ij ∈ E(R)

3n′
.
(5.1)
2t1/2
k : ij ∈ E(R), k ∈ ⌊d t⌋} be a bijection such that for every e ∈ E(Rm )
Let φ : E(Rm ) → {Eij
ij
k for some k ∈ [⌊d t⌋].
which joins i and j, we have φ(e) = Eij
ij
The proof strategy is now as follows. We first use Lemma
to decompose Rm into a
S 3.16
m
m
R
collection {RS }S∈I of simple graphs such that V (RS ) = i∈S Ui for each S ∈ I. For each
S ∈ I, we then apply Lemma 4.5 to find a set DS of edge-disjoint long odd cycles which together
cover almost all edges of RSm . Via the map φ each cycle C ∈ DS corresponds to a (2ε2 , 1/t)regular cycle blow-up φ(C). The set CS is then obtained from {φ(C) : C ∈ DS } by modifying
each φ(C) slightly to obtain a cycle blow-up which is super-regular and in which all the clusters
have equal size. In this last step we have to be careful since we need to ensure that (R4) holds.
By Lemma 3.16 and (vi) as well as (vii), we can decompose the multigraph Rm into a collection
of graphs {RSm }S∈I , such that for each S ∈ I the following holds:
S
(a) RSm is (6β, D −3 tα/2)-dense with V (RSm ) = i∈S UiR ,
−1
−1
(b) dRm
(j) = (d ± 6β) D−1
tΓ = (d ± 6β) D−1
tD|RSm |/(D − 3) for every j ∈ V (RSm ),
3
3
S
and
−1
(c) e(RSm ) = (1 ± 3β 2/3 ) D3
e(Rm ).
We next use Proposition 3.15 to decompose RSm into t simple spanning graphs RS,1 , . . . , RS,t
such that for all S ∈ I and i ∈ [t] the following hold:
(a′ ) RS,i is (6β, D −3 α/4)-dense, and
dEij′ (v) ≤

16

FELIX JOOS, JAEHOON KIM, DANIELA KÜHN, AND DERYK OSTHUS

(b′ ) dRS,i (j) = (d ± β 2/3 )

D−1−1
D|RS,i |/(D
3

− 3) for every j ∈ V (RS,i ).

′ , . . . , R′
Using Proposition 4.4 for each S ∈ I, we obtain Eulerian graphs RS,1
S,t such that
⊆ RS,i for all i ∈ [t] and

′
RS,i

′
∆(RS,i − E(RS,i
)) ≤ 3.

(5.2)

′ | = (D − 3)Γ/D
Note that since D is even and |U1R | = Γ/D is odd (by (v)), it follows that |RS,i
′ ) ≥ D −3 α|R |/5 for every i ∈ [t] by (b′ ),
is odd for all S ∈ I and i ∈ [t]. Observe that δ(RS,i
S,i
′ is still (β 3/4 , D −3 α/5)-dense. Thus for every S ∈ I, we can apply Lemma 4.5 with
and that RS,i
′ , . . . , R′
2D + 1, β 3/5 and D −3 α/5 playing the roles of r, β and α to decompose RS,1
into a set
S,t S
R
DS of odd cycles of length at least (1−1/(2D))(D −3)|U1 | ≥ (1−7/(2D))Γ. Let D := S∈I DS .
Thus all the cycles in D are pairwise edge-disjoint.
k for some k ∈ [⌊d t⌋]. For
Recall that for every e ∈ Rm joining i and j, we have φ(e) = Eij
ij
S
every C ∈ D, let φ(C) := e∈E(C) φ(e) be the cycle blow-up in G induced by the edges in
S
2
′
e∈E(C) φ(e). Then φ(C) is a (2ε , 1/t)-regular cycle n -blow-up. Moreover, for all S ∈ I and
v ∈ V (G), we have
X
(5.2) X
dφ(e) (v) ± 3tn′ .
(5.3)
dφ(C) (v) =
C∈DS

e∈Rm
S

In the remainder of the proof we show how to modify the cycle blow-ups φ(C) (for C ∈ D)
so that they satisfy (R4). First observe that
|D| ≤ 2tΓ.

(5.4)

Indeed, every C ∈ D has length at least (1 − 7/(2D))Γ ≥ 5Γ/12 and thus φ(C) contains at least
n2 /(3tΓ) edges while e(G) ≤ n2 /2.
By Proposition 3.7, for each C ∈ D, the graph φ(C) contains a (12ε2 , 1/t)-super-regular cycle
(1 − 8ε2 )n′ -blow-up φs (C). For every i ∈ [Γ], let
Wi := {u ∈ Vi′ : |{C ∈ D : u ∈ V (φ(C)) \ V (φs (C))}| ≥ ε1/2 Γ}.
Thus the sets Wi contain all those vertices in Vi′ that get deleted too often when making the
cycle blow-ups super-regular. Then
(5.4)

|Wi |ε1/2 Γ ≤ 8ε2 n′ |D| ≤ 16ε2 tΓn′
and hence |Wi | ≤ εn/(2Γ). Let V0 := W1 ∪ . . . ∪ WΓ ∪ V0′ and let Vi := Vi′ \ V0 . Thus |V0 | ≤ εn,
and by construction for each v ∈ V (G) \ V0 , we obtain
|{C ∈ D : v ∈ φ(C)}| − |{C ∈ D : v ∈ V (φs (C)) \ V0 }| ≤ ε1/2 Γ.

(5.5)

Also for all C ∈ D and v ∈ V (φs (C)) \ V0 , we have
dφ(C) (v) = dφs (C)−V0 (v) ±

2εn
.
Γ

(5.6)

Write D = {C1 , . . . , Cm }. For each r ∈ [m], let Cr′ := φs (Cr ) − V0 . Note that for each j ∈ V (Cr ),
we obtain
n
εn
> (1 − ε) .
(5.7)
|V (Cr′ ) ∩ Vj | ≥ |V (φs (Cr )) ∩ Vj′ | − |Wj | ≥ (1 − 8ε2 )n′ −
2Γ
Γ
′′ such that for all r ∈ [m] the
We claim that we can find cycle (1 − ε) Γn -blow-ups C1′′ , . . . , Cm
following hold:

(α1)r Cr′′ is an induced subgraph of Cr′ ,
(α2)r Cr′′ is a (2ε, 1/t)-super-regular cycle blow-up, and
(α3)r |{r ′ ∈ [r] : u ∈ V (Cr′ ′ ) \ V (Cr′′′ )}| ≤ 10εtΓ for all u ∈ V (G) \ V0 .

OPTIMAL PACKINGS OF BOUNDED DEGREE TREES

17

′′
such that (α1)r′ –
Suppose that for some r ∈ [m] we have already constructed C1′′ , . . . , Cr−1
′
′′
(α3)r′ hold for all r < r. Next we construct Cr . For each i ∈ V (Cr ), consider the set Bir ⊆ Vi
defined by
Bir := {u ∈ Vi : |{r ′ < r : u ∈ V (Cr′ ′ ) \ V (Cr′′′ )}| ≥ 8εtΓ}.
Since
r−1
r−1
X
X
(5.4)
|Bir | · 8εtΓ ≤
|(V (Cr′ ′ ) \ V (Cr′′′ )) ∩ Vi |≤
εn/Γ ≤ 2tεn,
r ′ =1
r
we have |Bi | ≤ n/(4Γ). Thus we
(V (Cr′ ) ∩ Vi ) \ Bir and define

r ′ =1

can choose any set

Bi′

[

Cr′′ := Cr′ −

of size |V (Cr′ ) ∩ Vi | − (1 − ε)n/Γ in

Bi′ .

i∈V (Cr′ )

Cr′′

Then
satisfies (α1)r –(α3)r . (In order to check (α2)r , use that |Bi′ | ≤ εn/Γ and |Wi | ≤
′′ } satisfying (α1) –
εn/(2Γ).) By repeating this procedure, we obtain a collection {C1′′ , . . . , Cm
r
(α3)r for all r ∈ [m].
′′ } and let C := {C ′′ : C ∈ D }. We now verify that C and C with
Let C := {C1′′ , . . . , Cm
S
r
S
S
r
′′ are edge-disjoint subgraphs of G and that for
S ∈ I satisfy (R1)–(R4). Note that C1′′ , . . . , Cm
each r ∈ [m] and every v ∈ V (G), we trivially have dCr′′ (v) ≤ dCr′ (v) ≤ dφ(Cr ) (v) ≤ 3n/Γ. Thus,
for fixed S ∈ I and v ∈ V (G) \ V0 , we obtain
X
X 
3n
εn 
(α1)r ,(α3)r
± 10εtΓ ·
=
dCr′′ (v)
dCr′ (v) ±
Γ
Γ
Cr′′ ∈CS
Cr′′ ∈CS




X
3n
2εn
(5.4),(5.5),(5.6)
1/2
+ 2εtn + 30εtn
± ε Γ·
=
dφ(Cr ) (v) ±
Γ
Γ
Cr ∈DS
!
1/2 n
X
7ε
(5.3),(5.4)
dφ(e) (v) ± 3tn′ +
=
2
m
e∈RS
X
dφ(e) (v) ± 4ε1/2 n.
(5.8)
=
e∈Rm
S

Hence for each v ∈ V (G) \ V0 , we obtain
X

dCr′′ (v) =

Cr′′ ∈C

X X

(5.8)

dCr′′ (v) =

S∈I Cr′′ ∈CS

=

X

X

S∈I

dφ(e) (v) ± 4|I|ε1/2 n.




X

e∈Rm
S



dφ(e) (v) ± 4ε1/2 n

e∈Rm
′ . Then
Given v ∈ V (G) \ V0 , let i(v) ∈ Γ be such that v ∈ Vi(v)
X
X
dG (v) −
dCr′′ (v)
≤
dG (v) −
dφ(e) (v) + 4|I|ε1/2 n
e∈Rm

Cr′′ ∈C

≤

dG,V0′ ∪V ′ (v) +
i(v)

+

X

X

dG,Vj′ (v)

j∈[Γ]\NR [i(v)]

dEij′ (v) + 4|I|ε1/2 n

j∈NR (i(v))
(ii),(iv),(5.1)

≤

2ε2 n + Γn′ /t1/2 + ε2 Γ · n′ + Γ · 3n′ /(2t1/2 ) + 4|I|ε1/2 n

≤

3n/t1/2 .

(5.9)

This shows (R4).
Since |V0 | ≤ εn and by (5.8), for every S ∈ I we conclude that e(CS ) = (1 ± β)e(φ(RSm )).
−1
Furthermore, by (c), we obtain that e(φ(RSm )) = (1 ± 4β 2/3 ) D3
e(φ(Rm )). Since e(G) =

18

FELIX JOOS, JAEHOON KIM, DANIELA KÜHN, AND DERYK OSTHUS

e(φ(Rm )) ± 3n2 /t1/2 by (5.9), altogether this implies (R3). Note that (R1), (R2) follow directly
from our construction of the cycle blow-ups.

6. Packing trees into cycle blow-ups
The main result of this section is Lemma 6.9, which states that we can obtain a near-optimal
packing of a given collection of bounded degree forests into an ε-regular cycle blow-up. The key
ingredient for this is Theorem 6.8 which is (a special case of) the main result in [19]. Theorem 6.8
achieves a near-optimal packing of suitable regular bounded degree graphs. In order to be able
to apply this, we need to pack bounded degree trees into regular bounded degree subgraphs of
cycle blow-ups. This is achieved by Lemma 6.6 and 6.7.
At the beginning of this section, we also make some simple observations about trees that are
used in later sections. Let us start with some notation. We write (T, r) for a rooted tree T
with root r. For a vertex v in (T, r), let T (v) be the subtree of T containing all vertices below
v (including v), that is, all vertices u such that the path between u and r in T contains v.
Moreover, let T (v, t) be the subtree of T (v) induced by all vertices in distance at most t from v.
6.1. Simple results about trees. In this subsection we collect simple results concerning kindependent sets in trees and partitions of trees into certain subtrees.
Proposition 6.1. Suppose n, t, k, ∆ ∈ N \ {1}. Suppose that T is a tree on n vertices with at
most t leaves, ∆(T ) ≤ ∆, and X ⊆ V (T ) is a k-independent set in T . Then
(I) T contains at least n − 2t vertices of degree 2, and
(II) T contains a k-independent set Y ⊇ X of size at least (n − 2t)/∆k such that Y \ X
consists of vertices of degree 2.
Proof. To prove (I), note that if T has at most t leaves, it has at most t − 2 vertices of degree
at least 3. To prove (II), we greedily add vertices of degree 2 in T to X to obtain a maximal
k-independent set Y with this property. Clearly, |Y | ≥ max{(n − 2t − |X|∆k )/∆k , 0} + |X| ≥
(n − 2t)/∆k .

The next proposition follows easily from a greedy argument.
Proposition 6.2. Suppose n, k, ∆ ∈ N \ {1} and let G be a graph on n vertices with ∆(G) ≤ ∆
and δ(G) ≥ 1. Suppose X is a k-independent set of G and X ⊆ Z ⊆ V (G). Then the following
hold.
(I) There exists a k-independent set Y such that X ⊆ Y ⊆ Z and |Y | ≥ |Z|/∆k .
(II) G contains a k-independent matching M with |M | ≥ e(G)/(2∆k ) ≥ n/(4∆k ).
The next result guarantees a subtree T (y) of roughly prescribed order inside a rooted tree
(T, x) such that the distance between T (y) and x is not too small.
Proposition 6.3. Suppose n, ∆, k ∈ N and 1/n ≪ α < 1. Let (T, x) be a rooted tree on n
vertices with ∆(T ) ≤ ∆. If α ≤ ∆−k /2, then there exists a vertex y ∈ V (T ) such that the
subtree T (y) of T satisfies
(I) αn ≤ |T (y)| ≤ α∆n, and
(II) the distance between x and y is at least k.
Note that the definition of T (y) implies that T − V (T (y)) is always a tree.
Proposition 6.4. Suppose ∆, n ∈ N with 1/n ≪ β ≪ α ≤ 1/∆ and c ∈ [2]. Let F be a
collection of forests such that
(i) each F ∈ F consists of two components KF1 , KF2 ,
(ii) KFi has a root xiF for every i ∈ [2] and every F ∈ F,
(iii) |KF1 |, |KF2 | ≥ αn, and
(iv) |F | ≤ n and ∆(F ) ≤ ∆.
Then for every F ∈ F, there exists a subforest TF of F such that
(I) TF consists of c components TF1 , . . . , TFc ,

OPTIMAL PACKINGS OF BOUNDED DEGREE TREES

19

(II) for each i ∈ [c], we have TFi = KFi (yFi ) for some yFi ∈ V (KFi ), in particular, F − V (TF )
is a forest consisting of two components,
(III) TF has distance at least 5 from {x1F , x2F },
−1
i
(IV) ∆
P βn/2 ≤ |TF | ≤ ∆βn for all F ∈ F and i ∈ [c], and
(V)
F ∈F e(TF ) = βn|F| ± n.

Proof. For each F ∈ F and j ∈ [c], we apply Proposition 6.3 to KFj to obtain vertices yF′j , ŷFj ∈
V (KFj ) and subtrees TF′j = KFj (yF′j ) and T̂Fj = KFj (ŷFj ) such that

(1) c−1 ∆−1 βn ≤ |TF′j | ≤ c−1 βn and c−1 βn ≤ |T̂Fj | ≤ c−1 ∆βn, and
(2) both TF′j and T̂Fj have distance at least 5 from xjF .
S[c]
S[c]
Let TF′ := j=1 TF′j and T̂F := j=1 T̂Fj . We write F = {F1 , . . . , F|F | } and consider Si :=
Pi
P|F |
′
′
j=1 e(T̂Fj ) +
j=i+1 e(TFj ). Then 0 ≤ Si+1 − Si = e(T̂Fi+1 ) − e(TFi+1 ) ≤ n and S0 ≤ βn|F| ≤
S|F | by (1). Thus there exists 0 ≤ t ≤ |F| such that St = βn|F| ± n. Let

T̂Fi if i ≤ t,
TFi :=
TF′ i if i ≥ t + 1.
P
Then F ∈F e(TF ) = St = βn|F| ± n, so we obtain (V). Conditions (I)–(IV) follow from (1)
and (2).

6.2. Trees in a cycle blow-up. In this subsection, we find a near-optimal packing of a set F
of bounded degree forests into an ε-regular cycle blow-up. The first step is to find a suitable
embedding of a single tree (see Lemma 6.6). To analyze the corresponding embedding process,
we consider a suitable partition into subtrees, which is given by Proposition 6.5.
Proposition 6.5. Suppose n, ∆ ∈ N \ {1} and n ≥ t ≥ 1. Then for any rooted tree (T, r) on
n vertices with ∆(T ) ≤ ∆, there exists a collection S of pairwise vertex-disjoint rooted subtrees
such that
(I) S ⊆ T (s) for every (S, s) ∈ S,
(II) tS≤ |S| ≤ 2∆t for every (S, s) ∈ S, and
(III) (S,s)∈S V (S) = V (T ).

Proof. We use induction on n for fixed t. If t ≤ n ≤ 2∆t, then S := {(T, r)} is as desired. So let
m > 2∆t and assume the proposition holds for all n ≤ m − 1. Consider a rooted tree (T, r) on
m vertices. Choose y at maximal distance from r in T subject to |T (y)| ≥ t. This implies that
t ≤ |T (y)| ≤ ∆t. Consider T ′ := T − V (T (y)). Since t ≤ m − ∆t ≤ |T ′ | ≤ m − 1, by induction,
we obtain a collection S ′ of pairwise vertex-disjoint rooted subtrees satisfying (I)–(III) with T ′
playing the role of T . Then it is clear that S := S ′ ∪ {(T (y), y)} satisfies (I)–(III). Thus the
proposition holds for all n ≥ t.


Recall from Section 3 that we write C(m, ℓ) for an ℓ-cycle m-blow-up. The next result
describes how to embed a bounded-degree tree into a cycle blow-up in a uniform way, i.e. we
embed approximately the same number of edges into every “blown-up edge” of C(m, ℓ). We will
achieve this by considering a symmetric random walk on the cycle of length ℓ. Note that for
Lemma 6.6 it is crucial that ℓ is odd.
Lemma 6.6. Suppose n, ∆, ℓ ∈ N with 1/n ≪ 1/∆, 1/ℓ < 1, where ℓ is odd. Let m := nℓ + logn2 n .
Let T be a tree on n vertices with ∆(T ) ≤ ∆ and let G := C(ℓ, m). Then there is an embedding
φ of T into G such that φ(T ) contains at most m edges between any two clusters of G.
Proof. Choose an additional constant δ such that 1/n ≪ δ ≪ 1/ℓ. Pick u ∈ V (T ) and
apply Proposition 6.5 to (T, u) with n1−δ playing the role of t to obtain a collection S =
{(S1 , s1 ), . . . , (Sk , sk )} of vertex-disjoint rooted subtrees such that
• Si ⊆ T (si ) for every i ∈ [k],
• nδ /(2∆) ≤ k ≤ nδ ,
• |Si | ≤ 2∆n1−δ , and

20

FELIX JOOS, JAEHOON KIM, DANIELA KÜHN, AND DERYK OSTHUS

•

Sk

i=1 V

(Si ) = V (T ).

We may assume that the (Si , si ) are labelled in such a way that the distance of s1 , . . . , sk from
the root u of T is non-decreasing. We will assign the vertices of T one by one to some cluster
of G in such a way that the vertices of Si are assigned before the vertices of Si+1 , and such
that within Si we assign the vertices in breadth-first order, starting with si . To choose our
assignments, we consider the following random process. For every edge e of T we pick a label
Xe ∈ {−1, 1} independently and uniformly at random. We assign s1 to a cluster of G uniformly
at random. Assume that we have already assigned some vertices of T to clusters of G and next
wish to assign x to a cluster. Let Vi be the cluster assigned to the ancestor y of x. Assign x to
Vi−1 if Xxy = −1 and to Vi+1 otherwise. Note that this assignment of vertices of T to clusters
induces an assignment of the edges of T to the pairs (Vi , Vi+1 ) of clusters. We will show that
with positive probability for all i ∈ [ℓ] both the number of vertices of T assigned to Vi and the
number of edges of T assigned to the pair (Vi , Vi+1 ) is at most m. This then implies that the
assignment corresponds to the required embedding of T into G.
We first show that with probability at least 1 − n−1 the number of vertices assigned to Vr
is at most m for fixed r ∈ [ℓ]. (Then a union bound over all r ∈ [ℓ] completes the proof for
the statement about the vertices.) We denote by φ : V (T ) → {V1 , . . . , Vℓ } the assignment
of the vertices produced by the random process described above. For each i ∈ [k], let Si′ :=
Si − V (T (si , (log∆ n)/2)). Thus Si′ is a subforest of Si and |Si | − |Si′ | ≤ ∆(log∆ n)/2 = n1/2 and
k
X

|Si′ | = n ± kn1/2 = n ± n1/2+δ .

(6.1)

i=1

Let X be the total number of vertices assigned to Vr and for each i ∈ [k] define Xi to be the
number of vertices of Si′ assigned to Vr . Note that
X≤

k
X
i=1

|Si \ Si′ | +

k
X

Xi ≤ n1/2+δ +

k
X

Xi .

(6.2)

i=1

i=1

P
P
Consider the exposure martingale Yi := E[ kj=1 Xj | X1 , . . . , Xi ]. Thus Y0 = E[ kj=1 Xj ] =
Pk
′
j=1 |Sj |/ℓ. Given any assignment φ(s1 ), . . . , φ(si ) of s1 , . . . , si , by Lemma 3.3, there exists
S
0 < γ = γ(ℓ) < 1 such that for each v ∈ ki′ =i Si′′ ,
P[φ(v) = Vr | φ(s1 ), . . . , φ(si )] =

1 ± γ (log∆ n)/2
.
ℓ
log γ

Note that since δ ≪ 1/ℓ and γ = γ(ℓ), we have γ (log∆ n)/2 = n 2 log ∆ ≤ n−δ . Hence for any
i, j ∈ [k] with i < j,
(1 ± n−δ )|Sj′ |
.
E[Xj | X1 , . . . , Xi ] =
ℓ
Let i ∈ [k] and x1 , . . . , xi , x′i ∈ N ∪ {0} be such that xj ≤ |Sj′ | for each j ∈ [i] and x′i ≤ |Si′ |.
Let E ′ be the event that X1 = x1 , . . . , Xi = xi occurs, and let E ′′ be the event that X1 =
x1 , . . . , Xi−1 = xi−1 , Xi = x′i . Then
 





k
k
k
X
X
X




′′ 
′
′
E 
E[Xj | E ′ ] − E[Xj | E ′′ ]

X
|
E
X
|
E
−
E
≤
|x
−
x
|
+
j
j
i
i




j=1
j=1
j=i+1
≤ |Si′ | +

k

X
1 

· (1 ± n−δ )|Sj′ | − (1 ± n−δ )|Sj′ |
ℓ

j=i+1

≤ 2∆n1−δ + n−δ

k
X

j=i+1

(6.1)

|Sj′ | ≤ 4∆n1−δ .

OPTIMAL PACKINGS OF BOUNDED DEGREE TREES

21

Therefore, Yi is a 4∆n1−δ -Lipschitz martingale. Thus by Lemma 3.1 and (6.1), we conclude that
" k
#
2 n))2
X
n
n
1
− (n/(3 log1−δ
2k(4∆n
)2 ≤
Xi 6= ±
P
.
≤e
2
ℓ
n
2 log n
i=1

Together with (6.2), this implies that with probability at least 1 − n−1 , the assignment φ uses
at most m vertices in Vr .
In order to prove the corresponding statement involving the edges of T , observe that by
S
Lemma 3.3 for any edge xy ∈ ki′ =i E(Si′′ ) such that x is an ancestor of y, we have
P[φ(e) ∈ E(Vr , Vr+1 ) | φ(s1 ), . . . , φ(si )]

= P[φ(x) = Vr , Xxy = 1 | φ(s1 ), . . . , φ(si )] + P[φ(x) = Vr+1 , Xxy = −1 | φ(s1 ), . . . , φ(si )]
1 ± γ (log∆ n)/2
.
ℓ
Similar arguments as before lead to the desired statement.
=



The previous lemma shows that a tree can be embedded “uniformly” into a blow-up of an
odd cycle. The next lemma allows us to combine such “uniform” embeddings of several trees
and pack them together into a graph which is an internally regular blow-up of a cycle. The
lemma is a special case of Lemma 7.1 in [19]. Recall that a spanning subgraph H of C(ℓ, m) is
internally k-regular if H[Vi , Vi+1 ] is k-regular for all i ∈ [ℓ] (where V1 , . . . , Vℓ are the clusters of
C(ℓ, m)).
Lemma 6.7 ([19]). Suppose n, ∆, ℓ, k, s ∈ N with 1/n ≪ 1/s ≪ 1/∆ and 1/n ≪ 1/k, and ℓ
divides n. Suppose that 0 < ξ < 1 is such that s2/3 ≤ ξk. Let G = C(ℓ, n/ℓ) and let V1 , . . . , Vℓ
be the clusters of G. Suppose that for each j ∈ [s], the graph Lj is a subgraph of C(ℓ, n/ℓ) with
clusters X1j , . . . , Xℓj such that ∆(Lj ) ≤ ∆ and for each i ∈ [ℓ], we have
s
X
j=1

j
e(Lj [Xij , Xi+1
]) = (1 − 3ξ ± ξ)

kn
ℓ

(6.3)

j
where Xℓ+1
:= X1j . Then there exist an internally k-regular subgraph H of G and a function φ
which packs {L1 , . . . , Ls } into H such that φ(Xij ) ⊆ Vi . Moreover, writing Ji := H[Vi , Vi+1 ] −
φ(L1 ∪ · · · ∪ Ls ) for each i ∈ [ℓ], we have ∆(Ji ) ≤ 4ξk + 2s2/3 .

Theorem 6.8 is a special case of Theorem 6.1 in [19]. Theorem 6.8 guarantees a near-optimal
packing of the internally regular graphs given by Lemma 6.7 into a super-regular cycle blow-up.
An important feature is that Theorem 6.8 (iii) also allows for a small proportion of vertices to
be embedded into a given “target set”.
Theorem 6.8 ([19]). Suppose n, k, ℓ, s ∈ N with 1/n ≪ ε ≪ α, d, d0 , 1/k ≤ 1 and 1/n ≪ 1/ℓ,
d
(1 − α/2)n and the following hold.
and ℓ divides n. Suppose s ≤ kℓ
(i) G is a (ε, d)-super-regular ℓ-cycle nℓ -blow-up with clusters V1 , . . . , Vℓ .
(ii) H = {H1 , . . . , Hs }, where each Hi is an internally k-regular subgraph of C(ℓ, n/ℓ) with
clusters X1 , . . . , Xℓ .
(iii) For all j ∈ [s] and i ∈ [ℓ], there is a set Yij ⊆ Xi with |Yij | ≤ εn/ℓ and for each y ∈ Yij ,
there is a set Ajy ⊆ Vi with |Ajy | ≥ d0 n/ℓ.
Then there is a function φ packing H into G such that for all j ∈ [s] and i ∈ [ℓ] the vertices of
Hj in Xi are mapped to Vi and such that φ(y) ∈ Ajy for all y ∈ Y1j ∪ · · · ∪ Yℓj .
We deduce the next lemma from Lemma 6.6, Lemma 6.7 and Theorem 6.8. It guarantees a
near-optimal packing of a set of rooted forests into a cycle blow-up which is compatible with
given embeddings of the roots into a “root set” R.
Lemma 6.9. Suppose n, ℓ, ∆ ∈ N with 1/n ≪ 1/ℓ ≪ ε ≪ α, η, 1/∆, d, d0 ≤ 1, and ℓ is odd
and divides n. Suppose that G is a graph, F is a collection of forests, and R is a set with
V (G) ∩ R = ∅ satisfying the following:

22

FELIX JOOS, JAEHOON KIM, DANIELA KÜHN, AND DERYK OSTHUS

(a1) G is an (ε, d)-super-regular ℓ-cycle nℓ -blow-up with clusters V1 , . . . , Vℓ ,
(a2) G′ is a graph with R ⊆ V (G′ ) ⊆ V (G) ∪ R such that |NG′ (u) ∩ V (G)| ≥ d0 n for each
u ∈ R,
(a3) for every F ∈ F, we have ηn ≤ |F | ≤ (1− η)n, F has c(F ) components where c(F ) ≤ 2∆
and ∆(F ) ≤ ∆,
(a4) e(F) = (1 − 2α ± α)e(G),
c(F )
(a5) for every F ∈ F, there is a set r(F ) = {rF1 , . . . , rF } of vertices belonging to distinct
components of F ,
(a6) there is a set U ′ ⊆ V (G) with |U ′ | ≤ n1/2 and for every F ∈ F, there is a set XF′ ⊆ V (F )
with |XF′ | ≤ n1/2 , and
(a7) there is a function φ′ : {rFc : c ∈ [c(F )], F ∈ F} → R such that |φ′−1 (v)| ≤ ℓ1/2 for every
′
v ∈ R and φ′ (rFc ) 6= φ′ (rFc ) whenever c 6= c′ .
Then there exists a function φ which is consistent with φ′ and packs F into G ∪ G′ satisfying
the following:
(A1) ∆(G − E(φ(F))) ≤ 10αdn/ℓ,
(A2) φ(V (F ) \ r(F )) ∩ R = ∅ for every F ∈ F, and
(A3) φ(XF′ ) ∩ U ′ = ∅ for every F ∈ F.
To prove Lemma 6.9 we apply Lemma 6.6 separately to all the components of F − r(F ) for all
F ∈ F to obtain a “uniform” embedding into a blown-up cycle. We also split F into F1 , . . . , Ft
and use Lemma 6.7 for all i ∈ [t] to pack together these uniform embeddings of F ∈ Fi into
internally regular graphs Hi . The graphs Hi are then packed into G via Theorem 6.8.
Proof. For each F ∈ F, let F ∗ := F − r(F ). Then the forest F ∗ has at most 2∆2 components.
Choose an integer k and a constant ξ such that ε ≪ 1/k ≪ ξ ≪ α, η. Let
P
e(F ∗ )
t := F ∈F
.
(6.4)
(1 − 3ξ)kn
P
We partition F into F1 , . . . , Ft such that F ∈Fi e(F ∗ ) = (1 − 3ξ ± ξ/2)kn for all i ∈ [t]. Note
that ηn|Fi | ≤ e(Fi ) ≤ (1 − ξ)kn by (a3) and so
|Fi | ≤ kη −1 .

(6.5)

Note that by (a4), we have
t=

(1 − 2α ± 4α/3)e(G)
(1 − 2α/3)(1 + ε)dn2 /ℓ
d
≤
≤ (1 − α/2)n.
(1 − 3ξ)kn
(1 − 3ξ)kn
kℓ

(6.6)

We claim that for each rFc there is an index j(F, c) ∈ [ℓ] such that
(i) |NG′ (φ′ (rFc )) ∩ Vj(F,c)| ≥ d0 |Vj(F,c) |/2 and
(ii) j(F, c) 6= j(F ′ , c′ ) if one of the following holds:
(j1) F, F ′ ∈ Fi for some i ∈ [ℓ] and (F, c) 6= (F ′ , c′ ),
′
(j2) φ′ (rFc ) = φ′ (rFc ′ ) and (F, c) 6= (F ′ , c′ ).
Indeed, we can choose the j(F, c) greedily. When choosing j(F, c) for F ∈ Fi , the number
of choices excluded by (j1) is at most 2∆|Fi | and the number of choices excluded by (j2) is
at most ℓ1/2 by (a7). Hence the total number of excluded choices is at most 2∆|Fi | + ℓ1/2 ≤
2∆kη −1 + ℓ1/2 ≤ d0 ℓ/3 by (6.5). On the other hand, by (a2), for each rFc there are at least d0 ℓ/2
indices j ∈ [ℓ] such that |NG′ (φ′ (rFc )) ∩ Vj | ≥ d0 |Vj |/2. This proves the claim.
For each F ∈ Fi and each component J of F ∗ , we apply Lemma 6.6 to J in order to find a
partition (X1J , . . . , XℓJ ) of V (J) such that for each j ∈ [ℓ],
• |XjJ | ≤

|J|
ℓ

+

n
.
log n(

• e(J[XjJ , XjJ′ ]) =

e(J)
ℓ

0

±

n
log n

if |j − j ′ | = 1 (mod ℓ),
otherwise.

From this, by rotating the indices and taking disjoint unions of the components, we obtain a
partition (X1F , . . . , XℓF ) of V (F ∗ ) such that

OPTIMAL PACKINGS OF BOUNDED DEGREE TREES

(α1) |XjF | ≤ n/ℓ,
(α2)

e(F ∗ [XjF , XjF′ ])

=

F
(α3) NF (rFc ) ⊆ Xj(F,c)
.



(1 ± ε) e(Fℓ
0

∗)

23

if |j − j ′ | = 1 (mod ℓ),
otherwise,

Note that for each j ∈ [ℓ],
X
kn
e(F ∗ )
(α2) X
F
= (1 − 3ξ ± ξ) .
e(F ∗ [XjF , Xj+1
]) =
(1 ± ε)
ℓ
ℓ
F ∈Fi

F ∈Fi

|2/3

Moreover, |Fi
≤ ξk by (6.5). Thus we can apply Lemma 6.7 with |Fi | playing the role of
s, in order to obtain a function τi packing {F ∗ : F ∈ Fi } into Hi , where Hi is an internally
k-regular subgraph Hi of C(ℓ, n/ℓ), such that τi maps XjF into the jth cluster Xj of C(ℓ, n/ℓ)
for every F ∈ Fi and every j ∈ [ℓ]. Also for all x ∈ V (Hi ) we have
X
dHi (x) −
dτi (F ∗ ) (x) ≤ 8ξk + 4|Fi |2/3 ≤ 12ξk.
(6.7)
F ∈Fi
′

Note that τi (NF (rFc )) ∩ τi (NF ′ (rFc ′ )) = ∅ for all F 6= F ′ ∈ Fi and c ∈ [c(F )], c′ ∈ [c(F ′ )] by (j1).
For all F ∈ Fi , c ∈ [c(F )] and x ∈ NF (rFc ), let
AcF (x) := NG′ (φ′ (rFc )) ∩ Vj(F,c).
Thus |AcF (x)| ≥ d0 n/(2ℓ) by (i). For all i ∈ [t], let

[
τi (XF′ \ r(F )) ∪
Yi :=
F ∈Fi

[

c∈[c(F )]



τi (NF (rFc )) .

Then Yi ⊆ V (Hi ) and |Yi | ≤ |Fi |(n1/2 + 2∆2 ) ≤ εn/ℓ by (a6) and (6.5).
For all i ∈ [t], j ∈ [ℓ] and y ∈ Yi ∩ Xj , we let
 c −1
AF (τi (y)) \ U ′ if y ∈ τi (NF (rFc )) for F ∈ Fi , c ∈ [c(F )],
i
Ay =
Vj \ U ′
otherwise.

Note that (α3) implies τi (NF (rFc )) ⊆ Xj(F,c) . So the sets Aiy are well-defined since the pair
(F, c) is unique by (j1). Moreover, |Aiy | ≥ d0 n/(3ℓ) for each y ∈ Yi . Together with (a1) and
(6.6), this means that we can apply Theorem 6.8 to G and H := {H1 , . . . , Ht } with d0 /3 playing
the role of d0 in order to find a function φ′′ which packs H into G such that for all i ∈ [t] and
′′
i
j ∈ [ℓ]
S the vertices of Hi in Xj are mapped to Vj and such that φ (y) ∈ Ay for all y ∈ Yi . For
x ∈ F ∈F V (F ), we let
 ′′
φ (τi (x)) if x ∈ V (F ) \ r(F ) for some F ∈ Fi , i ∈ [t],
φ(x) =
φ′ (x)
if x ∈ r(F ) for some F ∈ Fi , i ∈ [t].

Then for all F ∈ Fi and x ∈ NF (rFc ),

φ(x) = φ′′ (τi (x)) ∈ Aiτi (x) ⊆ AcF (x) ⊆ NG′ (φ(rFc )).
′

Moreover, if F, F ′ ∈ F, c ∈ [c(F )], c′ ∈ [c(F ′ )], (F, c) 6= (F ′ , c′ ) and φ(rFc ) = φ(rFc ′ ), then (j2)
implies
′
φ(NF (rFc )) ∩ φ(NF ′ (rFc ′ )) = ∅.
Thus φ packs F into G ∪ G′ such that φ is consistent with φ′ and (A2) holds. Again, (A3) also
holds since Aiτi (x) ∩ U ′ = ∅ for all x ∈ XF′ . To show (A1), let G′′ := G − E(φ(F)). Then for each
vertex v ∈ V (G)
dG′′ (v)

=

dG (v) −

X

F ∈F

(6.4)

≤

(6.7)

dφ(F ) (v) ≤

t

2(d + ε)n X
(2k − 12ξk)
−
ℓ
i=1

2(d + ε)n (2 − 12ξ)e(F) (a4) 10αdn
−
.
≤
ℓ
(1 − 2ξ)n
ℓ

24

FELIX JOOS, JAEHOON KIM, DANIELA KÜHN, AND DERYK OSTHUS

Thus (A1) also holds.


7. Covering parts of graphs with trees

In this section we present four results which will be used in Section 8. In each of these lemmas
we use a collection of trees or forests to cover certain given sets of edges of a graph G. In the first
lemma, we are given a small “exceptional” set V0 ⊆ V (G) and a collection F of small forests,
each consisting of two components. The lemma guarantees a packing of F which covers almost
all edges of G incident to V0 , but not too many edges incident to any vertex in V (G) \ V0 .
Throughout the section, we write S(c) for a star with centre c.
Lemma 7.1. Suppose n, ∆ ∈ N and 1/n ≪ ε ≪ η ≪ δ2 ≪ 1/∆ ≤ 1/2. Let G be a graph on n
vertices and let V0 ⊆ V (G) with |V0 | ≤ εn. Let F be a collection of forests with |F| = (1/2 ± ε)n
and ∆(F ) ≤ ∆ for every F ∈ F. Let {WF }F ∈F be a collection of vertex sets with WF ⊆ V (G)
for every F ∈ F. Suppose
(c1.1) dG (u, v) ≥ δ22 n/2 for all u, v ∈ V (G) \ V0 ,
(c1.2) for every F ∈ F, the forest F consists of two components TF1 , TF2 such that ηn/∆ ≤
|TFi | < η 3/4 n for all i ∈ [2],
(c1.3) for every F ∈ F, there is a 5-independent set RF := {yF1 , yF2 , zF1 , zF2 } such that yFi , zFi ∈
V (TFi ) and there is an injective function τF′ : RF → V (G) \ (V0 ∪ WF ) such that |{F :
u ∈ τF′ (RF )}| ≤ εn for each u ∈ V (G),
(c1.4) |WF | ≤ ∆2 , and
(c1.5) |{F ∈ F : u ∈ WF }| ≤ εn for every u ∈ V (G).
Then there is a function τ packing F into G which is consistent with {τF′ }F ∈F such that
(C1.1) τ (F ) ∩ WF = ∅ for all F ∈ F,
(C1.2) dτ (F ) (v) ≤ η 1/3 n for all v ∈ V (G) \ V0 , and
(C1.3) dτ (F ) (v) ≥ dG (v) − ε1/2 n for all v ∈ V0 .
When we apply Lemma 7.1 in Section 8, F will be a part of a larger forest. The remaining
parts of this larger forest are attached to F at the “root set” RF .
Proof. We write F = {F1 , . . . , Ft }, τi′ := τF′ i , and pR (u, i) := |{i′ ∈ [i] : u ∈ τi′′ (RFi′ )}| for all
i ∈ [t] and u ∈ V (G). Thus (c1.3) implies that for all i ∈ [t] and u ∈ V (G),
pR (u, i) ≤ εn.

(7.1)

We use an algorithmic approach and iteratively find an embedding of Fi ∈ F into G.
To be precise, we will construct embeddings τ1 , . . . , τt and define sets Ai , Xi ⊆ V (G)\(V0 ∪WFi )
for all i ∈ [t] such that for all i ∈ [t] the following hold:
(A1)i |Ai | = η 2/3 n.
(A2)i For all u ∈ V (G) \ V0 , let
pA (u, i) := |{i′ ∈ [i] : u ∈ Ai′ \ (Xi′ ∪ τi′′ (RFi′ ))}| and pX (u, i) := |{i′ ∈ [i] : u ∈ Xi′ }|.
Then pA (u, i) ≤ η 1/2 n and pX (u, i) ≤ εn.
S
3/4 n for every u, v ∈ V (G) \ V .
(A3)i Let Gi := G − i−1
0
j=1 E(τj (Fj )). Then dGi ,Ai (u, v) ≥ 2η
(A4)i τi embeds Fi into Gi [(V0 \ WFi ) ∪ Ai ∪ Xi ].
(A5)i Let Wi′ := {v ∈ V0 \ WFi : dGi ,V (Gi )\(V0 ∪WF ) (v) ≥ ∆εn + 4}. Then Wi′ ⊆ τi (Fi ) and for
i
every w ∈ Wi′ , the vertex τi−1 (w) is a non-leaf of Fi .
(A6)i Xi = Nτi (Fi ) (Wi′ ).
S
We will then show that τ := tj=1 τi satisfies (C1.1)–(C1.3). In particular, (A5)1 –(A5)t will
ensure that (C1.3) holds.

OPTIMAL PACKINGS OF BOUNDED DEGREE TREES

25

Assume that for some i ∈ [t] and all j < i we have constructed τj , Aj , Xj satisfying (A1)j –
(A6)j . Note that for u, v ∈ V (G) \ V0 , we have
X
(A4)1 –(A4)i−1
dGi (u, v)
≥
dG (u, v) −
∆(pA (w, i − 1) + pX (w, i − 1) + pR (w, i − 1))
w∈{u,v}

(c1.1),(7.1),(A2)i−1

≥

δ22 n/2 − 2∆η 1/2 n − 4∆εn ≥ δ22 n/3.

(7.2)

Next we show how to choose an embedding τi and sets Ai , Xi ⊆ V (G)\(V0 ∪WFi ) satisfying (A1)i –
P
(A6)i . Let B := {w ∈ V (G) \ V0 : pA (w, i − 1) ≥ η 1/2 n/2}. Then |B| ≤ 2(η 1/2 n)−1 j<i |Ai | ≤
2η 1/6 n, because (A1)j holds for all j < i and since i ≤ t ≤ n. Consider a set A′ of η 2/3 n − 4
vertices in V (G) \ (V0 ∪ B ∪ WFi ∪ τi′ (RFi )) chosen uniformly at random. Note that for any two
distinct vertices u, v ∈ V (Gi ) \ V0 , we have
dGi −(V0 ∪B∪WF

i

∪τi′ (RFi )) (u, v)

≥
(7.2),(c1.4)

dGi (u, v) − 2η 1/6 n − |V0 ∪ WFi ∪ τi′ (RFi )|

≥

δ22 n/3 − 2η 1/6 n − εn − ∆2 − 4

≥

δ22 n/4.

A straightforward application of Lemma 3.2 shows that for any two distinct vertices u, v ∈
V (G) \ V0 ,
dGi ,A′ (u, v) ≥ η 2/3 δ22 n/8 > 2η 3/4 n
n−3 .

(7.3)

A′

with probability at least 1 −
Thus there is a choice of
that satisfies (7.3) for all u, v ∈
′
′
V (G) \ V0 . Let Ai := A ∪ τi (RFi ) for this choice. Then clearly (A1)i and (A3)i hold.
We write Wi′ = {w1 , . . . , wr }. Note that r ≤ |V0 | ≤ εn. Consider the set Vnl (Fi ) of all
non-leaf vertices of Fi . Then |Vnl (Fi )| ≥ |TF1i |/∆ ≥ ηn/∆2 ≥ ∆5 (r + 4) by (c1.2). Recall that
RFi is a 5-independent set in Fi . So by Proposition 6.2 (I), there exists a 5-independent set
I ∪ RFi ⊆ Vnl (Fi ) ∪ RFi of Fi with |I| = r and I ∩ RFi = ∅. Write I = {v1 , . . . , vr } and note that
no vertex in I is a leaf of Fi .
To ensure (A5)i , we will construct τi in such a way that τi (I) = Wi′ . To see that this can
be done, recall that the definition of Wi′ gives that dGi ,V (Gi )\(V0 ∪WFi ) (w) ≥ ∆εn + 4 for all
w ∈ Wi′ . Thus there is a collection of vertex-disjoint stars S(w1 ), . . . , S(wr ) in Gi , where S(wj )
has dFi (vj ) leaves which avoid V0 ∪ WFi ∪ τi′ (RFi ). Let Xi be the set of all these leaves of
S(w1 ), . . . , S(wr ). Let φ′′ be the bijection between I and Wi′ defined by φ′′ (vj ) := wj for every
j ∈ [r]. Let J := NFi (I) and let φ′ : J ∪ RFi → Xi ∪ τi′ (RFi ) be a bijective function consistent
with τi′ such that for every j ∈ [r],
φ′ (NFi (vj )) = V (S(wj )) \ {wj }.
Let Fi′ := Fi − I. Note that J ∪ RFi is a 3-independent set in Fi′ . Moreover, (A3)i and
(c1.2) imply that any two vertices u, v ∈ V (G) \ V0 satisfy dGi ,Ai ∪Xi (u, v) ≥ 2η 3/4 n > |Fi′ |. So
we can apply Lemma 3.19 with |Ai ∪ Xi |, |Fi′ | playing the roles of n, k, to obtain a function φi
embedding Fi′ into Gi [Ai ∪ Xi ] which is consistent with φ′ . Let τi := φi ∪ φ′′ . Thus τi embeds Fi
into Gi [(V0 \WFi )∪ Ai ∪ Xi ] and satisfies τi−1 (Wi′ ) = I and Xi = Nτi (Fi ) (Wi′ ). Hence (A4)i –(A6)i
hold.
Note that by definition of A′ , for any u ∈ V (G) \ V0 , we obtain that pA (u, i) ≤ η 1/2 n. Since
E(τj (Fj )) ∩ E(τj ′ (Fj ′ )) = ∅ whenever 1 ≤ j ≤ j ′ ≤ i, (A6)i implies pX (u, i) ≤ dG,V0 (u) ≤ |V0 | ≤
εn for each u ∈ V (G) \ V0 . Thus (A2)i holds. This shows that we can construct τi such that
(A1)i –(A6)i hold.
S
Let τ := ti=1 τi . Then τ packs F into G and is consistent with {τF′ }F ∈F . Clearly (C1.1) holds
by (A4)1 –(A4)t . Moreover, by (A2)t , (A4)1 –(A4)t and (7.1), we have dτ (F ) (v) ≤ ∆(pA (v, t) +
pX (v, t) + pR (v, t)) ≤ η 1/3 n for all v ∈ V (G) \ V0 and thus (C1.2) holds.
Note that (A5)i implies for every w ∈ Wi′ that
dGi (w) − dGi+1 (w) ≥ 2.

(7.4)

26

FELIX JOOS, JAEHOON KIM, DANIELA KÜHN, AND DERYK OSTHUS

To show (C1.3), assume for a contradiction that there is a vertex v ∈ V0 which does not satisfy
(C1.3), i.e. that dGt+1 (v) ≥ ε1/2 n. Then
(c1.5)

|{i ∈ [t] : v ∈ Wi′ }| ≥ t − |{i ∈ [t] : v ∈ WFi }| ≥ n/2 − 2εn.
Together with (7.4) this yields that dGt+1 (v) ≤ dG (v) − n + 4εn, which is a contradiction to the
assumption that dGt+1 (w) > ε1/2 n.

Given a collection of trees T , a graph G with vertex partition (A, B) such that G[B] is sparse,
every vertex in B has many neighbours in A, and G[A] is quasi-random, the following lemma
allows us to find a packing of T into G which covers all edges of G[B].
Lemma 7.2. Suppose n, ∆ ∈ N \ {1} and 1/n ≪ ε ≪ δ2 ≪ δ1 ≪ γ ≪ 1/∆, p ≤ 1. Let G
be a graph on n vertices and A be a set of at least δ1 n vertices of G. Let B := V (G) \ A,
H := G[A, B], and let T be a collection of trees with ∆(T ) ≤ ∆ for every T ∈ T . Suppose
(c2.1) G[A] is (γ 1/10 , p)-quasi-random,
(c2.2) ∆(G[B]) ≤ 2δ2 n,
(c2.3) dH (u) ≥ δ1 |A|/20 for every u ∈ B,
1/2
(c2.4) δ2 n ≤ |T | ≤ γ|A|,
(c2.5) every T ∈ T satisfies δ1 n ≤ |T | ≤ p2 |A|/2 and has a root yT ; moreover, there is a set
WT ⊆ V (G) with |WT | ≤ ∆2 and a function τT′ : {yT } → A \ WT , and
(c2.6) |{T ∈ T : u ∈ WT }| ≤ εn for every u ∈ V (G).
Then there is a function τ packing T into G which is consistent with {τT′ }T ∈T such that
(C2.1) E(G[B]) ⊆ E(τ (T )) and
(C2.2) WT ∩ τ (T ) = ∅ for each T ∈ T .
Proof. We write T = {T1 , . . . , Tt } and let τi′ := τT′ i for every i ∈ [t]. Our proof strategy is as
follows. We first decompose G[B] into t edge-disjoint small matchings M1 , . . . , Mt such that
WTi ∩ V (Mi ) = ∅ for all i ∈ [t]. We then choose a suitable matching N in Ti − {yTi } and embed
Ti into G in such a way that N is mapped to Mi and yTi is mapped to τi′ (yTi ).
∩ V (e) 6= ∅}|. Hence w(e) ≤ 2εn by (c2.6).
For every edge e ∈ E(G), let w(e) := |{i ∈ [t] : WTiP
For every set of edges E ⊆ E(G), we define w(E) := e∈E w(e). Observe that (c2.4) and (c2.5)
imply that w(E) ≤ ∆2 γn for any matching E.
By (c2.2), the graph G[B] has an edge colouring using at most 3δ2 n colours. This gives rise
′
. We apply Proposition 3.18
to a partition of the edge set of G[B] into matchings M1′ , . . . , M3δ
2n
−1/2

to Mi′ in order to split Mi′ into q := δ2
1/2

1/2

/3 possibly empty matchings M1i , . . . , Mqi such that
1/2

|Mji | ≤ 3δ2 n and w(Mji ) ≤ 3δ2 · 2∆2 γn + 2εn ≤ δ2 n/2 for all i ∈ [3δ2 n] and j ∈ [q].
Note that q·3δ2 n ≤ t by (c2.4). So by adding empty matchings to {Mji }i∈[3δ2 n],j∈[q] if necessary,
we obtain a collection M = {M1 , . . . , Mt } of matchings partitioning E(G[B]) such that for all
i ∈ [t], we have
1/2

1/2

|Mi | ≤ 3δ2 n and w(Mi ) ≤ δ2 n/2.

(7.5)

By (c2.2), observe that for every v ∈ V (G)
|{i ∈ [t] : v ∈ Mi }| ≤ 2δ2 n.

(7.6)

Also recall |M| = |T | = t. Consider an auxiliary bipartite graph H with vertex partition (T , M)
such that Ti Mj ∈ E(H) if WTi ∩ V (Mj ) = ∅. Then, for every tree T ∈ T , we conclude
(7.6)

dH (T ) ≥ |M| − |{i ∈ [t] : WT ∩ V (Mi ) 6= ∅}| ≥ t − 2δ2 n|WT |

(c2.5)
> t/2.

Furthermore, dH (Mi ) = |T | − w(Mi ) ≥ t/2 for every i ∈ [t] by (7.5). Thus H has a perfect
matching. By relabelling, we may assume that T1 M1 , . . . , Tt Mt is a perfect matching in H and
hence WTi ∩ V (Mi ) = ∅ for every i ∈ [t].
Next, we iteratively construct edge-disjoint embeddings τi so that for all i ∈ [t] the following
hold:

OPTIMAL PACKINGS OF BOUNDED DEGREE TREES

27

(P1)i τi embeds Ti into G[(A ∪ V (Mi )) \ WTi ] and
(P2)i E(τi (Ti )) ∩ E(G[B]) = Mi .
Assume for some i ∈ [t] we have defined τ1 , . . . , τi−1 so that τj satisfies (P1)j and (P2)j for
S
all j < i. Let Gi := G − i−1
j=1 E(τj (Tj )). Consider any v ∈ B. If v ∈ τj (Tj ), then (P1)j implies
that v ∈ Mj . Hence,
(c2.3)
(7.6)
dGi ,A (v) ≥ dH,A (v) − 2δ2 ∆n ≥ δ1 |A|/25.

(7.7)

We write mi := |Mi | and Mi = {u1 v1 , . . . , umi vmi }. By (7.5) and (7.7), there is a collection of
stars {S(uj ), S(vj )}j∈[mi ] in Gi so that all these stars are disjoint from each other and each star
1
∆
has ∆ leaves in A \ (WTi ∪ {τi′ (yTi )}). Let u1j , . . . , u∆
j be the leaves of S(uj ) and let vj , . . . , vj
be the leaves of S(vj ).
Let Fi be the forest obtained from Ti by first removing all vertices of distance at most 4 from
yTi and secondly removing all isolated vertices. Note that |Fi | ≥ δ1 n − 2∆5 ≥ 4∆5 mi by (c2.5)
and (7.5). Thus by Proposition 6.2, Fi has a 5-independent matching N = {x1 z1 , . . . , xmi zmi }.
We will construct τi in such a way that edges xj zj are mapped to uj vj for each j ∈ [mi ]. To
achieve this, let τi′′ be an injective function mapping NTi (xj ) \ {zj } to the leaves of S(uj ) and
NTi (zj ) \ {xj } to the leaves of S(vj ) for every j ∈ [mi ] and so that τi′′ (yTi ) := τi′ (yTi ). Let
J :=

mi
[

(NTi (xj ) \ {zj }) ∪

j=1

mi
[

(NTi (zj ) \ {xj }.

j=1

Note that J ∪ {yTi } forms a 3-independent set in Fi′ := Ti − V (N ) by the choice of N .
For each v ∈ A, by (c2.4), we obtain
dG (v) − dGi (v) ≤ i∆ ≤ t∆ ≤ ∆γ|A|.
This together with (c2.1) and Proposition 3.9 implies that Gi [A\WTi ] is (γ 1/11 , p)-quasi-random.
In particular, dGi ,A\WT (u, v) ≥ p2 |A|/2 ≥ |Fi′ | for any u, v ∈ A \ WTi (where the final inequality
i
follows from (c2.5)). Thus Lemma 3.19 implies that there exists a function φi embedding Fi′
into Gi [A \ WTi ] consistent with τi′′ . Let τi : V (Ti ) → Gi be

if z = xj for some j ∈ [mi ],
 uj
vj
if z = zj for some j ∈ [mi ],
τi (z) :=

φi (z) otherwise.
S
Then τi satisfies (P1)i and (P2)i . Let τ := ti=1 τi . By construction, (C2.1) and (C2.2) hold. 

Given a collection T of trees and a graph G with a vertex partition (A, B) such that B is
independent and G[A, B] has very few edges, the next lemma guarantees a packing of T into G
which covers all edges of G between A and B. The purpose of the lemma will be to adjust the
parity of the leftover degrees of the vertices in B prior to applying Lemma 7.4.

Lemma 7.3. Suppose n, ∆ ∈ N \ {1} and 1/n ≪ ε ≪ δ1 ≪ γ ≪ 1/∆, p ≤ 1. Let G be a graph
on n vertices and A be a set of at least γ 2 n vertices of G. Let B := V (G) \ A, H := G[A, B],
and let T be a collection of trees with ∆(T ) ≤ ∆ for every T ∈ T . Suppose
(c3.1) G[A] is (γ 1/10 , p)-quasi-random,
(c3.2) B is an independent set of G,
(c3.3) |E(H)| ≤ δ1 n and |E(H)| + 2εn ≤ |T | ≤ γ|A|,
(c3.4) every T ∈ T satisfies 2∆4 ≤ |T | ≤ p2 |A|/2 and has a root yT ; moreover, there is a set
WT ⊆ V (G) with |WT | ≤ ∆2 and a function τT′ : {yT } → A \ WT , and
(c3.5) |{T ∈ T : u ∈ WT ∪ {τT′ (yT )}}| ≤ εn for every u ∈ V (G).
Then there is a function τ packing T into G which is consistent with {τT′ }T ∈T such that E(H) ⊆
E(τ (T )) and WT ∩ τ (T ) = ∅ for every T ∈ T .
Proof. We write T = {T1 , . . . , Tt } and E(H) = {u1 v1 , . . . , uk vk } with ui ∈ A for all i ∈ [k]. Let
τi′ := τT′ i . For each i ∈ [k], we choose ji ∈ [t] such that vi ∈
/ WTji , ui ∈
/ WTji ∪ {τj′i (yTji )} and
j1 , . . . , jk are all distinct. This is possible using a greedy approach, since t ≥ k + εn + εn and

28

FELIX JOOS, JAEHOON KIM, DANIELA KÜHN, AND DERYK OSTHUS

by (c3.5). By relabeling, we may assume that vi ∈
/ WTi and ui ∈
/ WTi ∪ {τi′ (yTi )}. For k < i ≤ t,
′
let ui be an arbitrary vertex in A \ (WTi ∪ {τTi (yTi )}).
We sequentially construct τ1 , . . . , τt such that for all i ∈ [t]
S
(E1)i τi is consistent with τi′ and embeds Ti into Gi − WTi where Gi := G − i−1
j=1 E(τj (Tj )),
(E2)i if i ∈ [k], then E(τi (Ti ) ∩ H) = {ui vi },
(E3)i if i ∈ [k], then τi (Ti ) \ {vi } ⊆ A, and if i > k, then τi (Ti ) ⊆ A.
Assume that for some i ∈ [t] we have constructed τ1 , . . . , τi−1 such that (E1)j –(E3)j hold for
all j < i. By (c3.3), dG (v) − dGi (v) ≤ ∆t ≤ ∆γ|A| for all v ∈ V (G), and hence Gi [A \ WTi ] is
(γ 1/11 , p)-quasi-random by (c3.1) and Proposition 3.9. Let ℓi be a leaf of Ti which has distance
at least 4 from yTi , and let xi be the unique neighbour of ℓi in Ti . Such a leaf exists, since
|Ti | ≥ 2∆4 . Let

Ti − {ℓi } if i ∈ [k],
Ti′ :=
Ti
if i ∈ [t] \ [k].
′′
′
′′
Let τi (yTi ) := τi (yTi ) and τi (xi ) := ui .
Observe that {yTi , xi } forms a 3-independent set of Ti′ and for any u, v ∈ A \ WTi , we have
dGi ,A\WTi (u, v) ≥ p2 |A|/2 ≥ |Ti′ | by (c3.4). Apply Lemma 3.19 to Ti′ , Gi [A\WTi ] and τT′′i to obtain
a function φi embedding Ti′ into Gi [A \ WTi ] which is consistent with τi′′ . Let τi : V (Ti ) → Gi
be defined by

vi
if x = ℓi and i ∈ [k],
τi (x) :=
φi (x) otherwise.
S
Then (E1)i –(E3)i hold. Define τ := ti=1 τi , then τ is consistent with {τT′ }T ∈T and E(H) ⊆
E(τ (T )).

The following lemma is a variant of Lemma 7.3 in which G[A, B] is allowed to have more
edges than in Lemma 7.3. It guarantees a packing of T into G which covers all edges between
A and B apart from precisely one edge at every vertex of odd degree in B. In particular, once
we have adjusted the parity of the leftover degrees of the vertices in B via Lemma 7.3, we can
cover all remaining leftover edges via Lemma 7.4. The proof of Lemma 7.4 is more difficult than
that of Lemma 7.3 since the covering is more “efficient”: while in Lemma 7.3 we used one tree
for each leftover edge, here each tree covers a linear number of leftover edges.
Lemma 7.4. Suppose n, ∆ ∈ N \ {1} and 1/n ≪ ε ≪ δ1 ≪ γ ≪ 1/∆, p ≤ 1. Let G be a graph
on n vertices and A be a set of at least γ 2 n vertices of G. Let B := V (G) \ A, H := G[A, B],
and let T be a collection of trees with ∆(T ) ≤ ∆ for every T ∈ T . Suppose
(c4.1) G[A] is (γ 1/10 , p)-quasi-random,
(c4.2) B is an independent set of G,
(c4.3) ∆(H) ≤ 2δ1 n,
1/2
(c4.4) δ1 n ≤ |T | ≤ γ|A|,
1/4
(c4.5) every T ∈ T satisfies δ1 n ≤ |T | ≤ p2 |A|/4 and has a root yT ; moreover, there is a set
WT ⊆ V (G) with |WT | ≤ ∆2 and a function τT′ : {yT } → A \ WT , and
(c4.6) |{T ∈ T : u ∈ WT ∪ {τT′ (yT )}}| ≤ εn for every u ∈ V (G).
Then there is a function τ packing T into G which is consistent with {τT′ }T ∈T such that
(C4.1) writing H ∗ := H − E(τ (T )), we have dH ∗ (v) ≤ 1 for every v ∈ B,
(C4.2) WT ∩ τ (T ) = ∅ for every T ∈ T , and
(C4.3) dτ (T ) (v) is even for all v ∈ B.
Proof. We define B odd := {v ∈ B, dH (v) is odd} and t := |T |. For each v ∈ B odd , we select an
edge ev joining v and A, and let E odd := {ev : v ∈ B odd }. We define G′ := G − E odd . Our
packing τ of T will cover all edges in G′ [A, B] (but no edges from E odd ). This will ensure that
(C4.1) and (C4.3) are satisfied.
We let T 2 = {T̃1 , T1⋄ , T̃2 , T2⋄ , . . . , T̃t2 , Tt⋄2 } be a maximal collection of an even number of trees
1/3

in T which have at least δ1 n leaves. Let T 1 = {T1 , . . . , Tt1 } := T \ T 2 such that Ti has at

OPTIMAL PACKINGS OF BOUNDED DEGREE TREES

29

1/3

most δ1 n leaves for all i ≤ t1 − 1. Let f := t1 + t2 − min{1, t1 }. Next we define a collection
F = {F1 , . . . , Ff } of forests. For every i ∈ [t2 ], let
Fi := T̃i ∪ Ti⋄ , Wi′ := WT̃i ∪ WTi⋄ , Wi := Wi′ ∪ {τT̃′ (yT̃i ), τT′ ⋄ (yTi⋄ )}.
i

i

For every t2 < i ≤ f , let
Fi := Ti−t2 , Wi′ := Wi−t2 , Wi := Wi′ ∪ {τT′ i−t (yTi−t2 )}.
2

Thus if t1 ≥ 1, then Tt1 is the only tree which is not part of any forest in F. The proof
strategy now is as follows. We first decompose G′ [A, B] into a collection S of edge-disjoint flocks
of seagulls (recall that these were defined in Section 3.4). For every flock of seagulls in S, we
use one forest F ∈ F to cover it. Note that either F has many vertices of degree 2 or F is the
union of two trees both having many leaves. Accordingly we will cover the vertex of degree 2 of
every seagull by a vertex of degree 2 in F or by two leaves from two distinct components in F .
For every seagull Z in G, let w(Z) := |{i ∈ [f ] : Wi ∩P
V (Z) 6= ∅}|. By (c4.6), we conclude
w(Z) ≤ 3εn. For every flock S of seagulls, let w(S) := Z∈S w(Z). Recall that in G′ every
vertex in B has even degree. Thus by (c4.3) and Proposition 3.17, there is a partition of
E(G′ [A, B]) into 6δ1 n edge-disjoint flocks S 1 , . . . , S 6δ1 n of seagulls with wings in A. For each
i ∈ [6δ1 n], by (c4.5), we have w(S i ) ≤ (∆2 + 1)t. Thus for each i ∈ [6δ1 n], we can use
−1/2
Proposition 3.18 to partition S i into q := δ1 /60 (possibly empty) disjoint flocks S1i , . . . , Sqi
1/2

1/2

1/2

such that |Sji | ≤ 40δ1 n and w(Sji ) ≤ 120δ1 (∆2 + 1)t + 3εn ≤ δ1 n/100 for all j ∈ [q].
Note that q · 6δ1 n ≤ t/10 by (c4.4). By adding empty flocks to {Sji }i∈[6δ1 n],j∈[q] if necessary,
we obtain a collection of edge-disjoint flocks S := {S1 , . . . , St/10 } partitioning E(G′ [A, B]) with
1/2

1/2

|Sj | ≤ 40δ1 n, and w(Sj ) ≤ δ1 n/100

(7.8)

for all j ∈ [t/10].
Let H be an auxiliary bipartite graph with vertex partition (F, S) such that Fi Sj ∈ E(H) if
Wi ∩ V (Sj ) = ∅. Since (t − 1)/2 ≤ f ≤ t, we have
1/2

dH (Si ) ≥ |F| − w(Si ) ≥ (t − 1)/2 − δ1 n/100 ≥ t/10 = |S|.

Thus H contains a matching covering S. By relabelling we may assume that Fi Si ∈ E(H) for
all i ∈ [t/10]. Let Ŝ arise from S by adding empty flocks St/10+1 , . . . , Sf .
We will greedily construct embeddings τ1 , . . . , τf such that for each i ∈ [f ] the following hold:
Si−1
(P1)i τi packs the components of Fi into Gi − Wi′ where Gi := G′ − j=1
E(τj (Fj )),
(P2)i E(τi (Fi )) ∩ E(G′ [A, B]) = E(Si ), and
(P3)i if i ∈ [t2 ], then τi is consistent with τT̃′ ∪ τT′ ⋄ and if t2 < i ≤ f , then τi is consistent with
i
i
τT′ i .
Note that if i ∈ [t2 ], i.e. if Fi consists of two components T̃i , Ti⋄ , then τi (T̃i ) and τi (Ti⋄ ) are not
necessarily vertex-disjoint, thus τi may not be an embedding of Fi .
Suppose for some i ∈ [f ], we have constructed τ1 , . . . , τi−1 satisfying (P1)j –(P3)j for all j < i.
We will now construct τi . Since dG,A\Wi′ (v) − dGi ,A\Wi′ (v) ≤ ∆i ≤ ∆t ≤ ∆γ|A| for each v ∈ A
by (c4.4) and |Wi′ | ≤ 2∆2 by (c4.5), we can apply Proposition 3.9 to conclude from (c4.1) that
Gi [A \ Wi′ ] is (γ 1/11 , p)-quasi-random and so for any two vertices u, v ∈ A \ Wi′
dGi ,A\Wi′ (u, v) ≥ p2 |A|/2 ≥ |Fi |.

(7.9)

Let s := |Si | and write Si = {u1 v1 w1 , . . . , us vs ws }. Let us first consider the case when s = 0.
Let c ∈ [2] be the number of components in Fi and T 1 , . . . , T c be these components. By (7.9),
we can apply Lemma 3.19 to each component T j of Fi to find a function φT j which embeds T j
into Gi [A \ Wi′ ] which is consistent with τT′ j (yT j ) for each j ∈ [c] such that the sets E(φT j (T j ))
are pairwise edge-disjoint for different j ∈ [c]. (If c = 2, then in order to find φT 2 we apply
Lemma 3.19 to Gi [A\Wi′ ]− E(φT 1 (T 1 )).) Let τi := φT 1 ∪ · · ·∪ φT c . Then τi satisfies (P1)i –(P3)i .
1/3
Suppose next that s > 0 and Fi is a tree, i.e. t2 < i ≤ f . Thus Fi has at most δ1 n leaves. By
1/2
1/3
(7.8) and (c4.5), we have s ≤ 40δ1 n ≤ (|Fi | − 2δ1 n)/∆5 . Thus Proposition 6.1 implies that

30

FELIX JOOS, JAEHOON KIM, DANIELA KÜHN, AND DERYK OSTHUS

there exists a 5-independent set I := {yFi , y1 , . . . , ys } in Fi such that I \ {yFi } is a set of vertices
of degree 2 in Fi . For each j ∈ [s], let {xj , zj } := NFi (yj ). Then J := {x1 , z1 , . . . , xs , zs } ∪ {yFi }
is a 3-independent set in Fi − (I \ {yFi }). Let

if v = xj for some j ∈ [s],
 uj
wj
if v = zj for some j ∈ [s],
φ(v) :=
 τ ′ (y ) if v = y .
Fi
Fi Fi

By (7.9), we can apply Lemma 3.19 to find a function φ′ which is consistent with φ and embeds
Fi − (I \ {yFi }) into Gi [A \ Wi′ ]. For every v ∈ V (Fi ), let

vj
if v = yj for some j ∈ [s],
τi (v) :=
′
φ (v) if v ∈ V (Fi ) − (I \ {yFi }).
Then τi satisfies (P1)i –(P3)i .
Suppose next that s > 0 and Fi is a forest with two components T 1 , T 2 , i.e. i ∈ [t2 ] and
1/3
{T 1 , T 2 } = {T̃i , Ti⋄ }. Thus T 1 , T 2 both have at least δ1 n leaves. For each c ∈ [2], let
Zc := {z ∈ V (T c ) : z is a neighbour of a leaf} ∪ {yT c }.
1/3

Hence |Zc | ≥ δ1 n/∆ ≥ ∆3 (s + 1) by (7.8). Thus Proposition 6.2 implies that each Zc contains
a 3-independent set Ic := {yT c , y1c , . . . , ysc }. For each j ∈ [s], let xcj be a leaf of T c adjacent to yjc
and write X c := {xc1 , . . . , xcs }. Let

if v = yj1 for some j ∈ [s],
 uj
wj
if v = yj2 for some j ∈ [s],
φ(v) :=
 ′
τT c (yT c ) if v = yT c for some c ∈ [2].

If τT′ 1 (yT 1 ) = τT′ 2 (yT 2 ), then let Fi′ be the tree we obtain from Fi by identifying yT 1 and yT 2 .
Otherwise let Fi′ := Fi . By (7.9), we can apply Lemma 3.19 to find a function φ′ which is
consistent with φ and embeds Fi′ − (X 1 ∪ X 2 ) into Gi [A \ Wi′ ]. Let

vj
if v ∈ {x1j , x2j } for some j ∈ [s],
τi (v) :=
φ′ (v) if v ∈ V (Fi ) − (X 1 ∪ X 2 ).

Then τi satisfies (P1)i –(P3)i .
S
Suppose now that we have defined τ1 , . . . , τf . If t1 = 0, then τ := fi=1 τi satisfies (C4.1)–
(C4.3). If t1 ≥ 1, then there is a single tree T ∈ T which is not yet embedded. In this case
S
let Gf +1 := G′ − fj=1 E(τj (Fj )). We once again use Lemma 3.19 to find a function τf +1
S +1
which embeds T into Gf +1 [A \ WT ] and is consistent with τT′ (yT ). Then τ := fi=1
τi satisfies
(C4.1)–(C4.3).

8. Iteration Lemma
In this section we state and prove the key lemma of this paper. Given a suitable graph G∗
on a vertex set V , a small set A ⊆ V , and a suitable set of forests, we can cover all edges of G∗
incident to the vertices in V \ A with these forests without using many edges of G∗ inside A. In
Section 10 we will apply this lemma iteratively to obtain our main result. More precisely, the
above graph G∗ will be the union of graphs G, G′ , H1 and H2 , where G will be the “leftover”
from the previous iteration step, and H1 and H2 are graphs we set aside at the start to ensure
that each iteration can be carried out successfully. We will cover G ∪ H1 ∪ H2 entirely (see (Φ1)).
Roughly speaking the leftover of G′ from the current iteration step will play the role of G in the
next iteration step, which is why we aim to use it as little as possible in the current iteration
(see (Φ2)).
Lemma 8.1. Suppose D, ∆, n ∈ N with 1/n ≪ ε ≪ δ2 ≪ δ1 ≪ γ∗ ≪ γ ≪ β ≪ α, 1/D, 1/∆, p, d ≤
1 such that D ≥ 6 is even and ∆ ≥ 3. Suppose G, G′ , H1 , H2 are four edge-disjoint graphs on a
set V and A, R ⊆ V satisfying the following:
(g1) |V | = n, |A| = γn, |R| = εn, A ∩ R = ∅, and A is an independent set in G ∪ H1 ∪ H2 ,

OPTIMAL PACKINGS OF BOUNDED DEGREE TREES

31

(g2) G is (β, α)-quasi-random with V (G) = V and G′ is (γ 1/3 , p)-quasi-random with V (G′ ) =
A,
(g3) H1 is a (4ε, δ1 )-quasi-random bipartite graph with vertex partition (A, V \ A), and
(g4) H2 is a graph on V with ∆(H2 ) ≤ 3δ2 n/2 such that dH2 (u, v) ≥ 2δ22 n/3 for any two
distinct vertices u, v ∈ V .
Suppose F is a collection of rooted forests so that each F ∈ F consists of two components
(TF1 , rF1 ), (TF2 , rF2 ) and F satisfies the following:
(f1) |F| ≥ (1/2 + d)n,
(f2) |F | ≤ (1 − 4/D)n, ∆(F ) ≤ ∆, and |TF1 |, |TF2 | ≥ γn for all F ∈ F,
(f3) e(F) = e(G) + e(H1 ) + e(H2 ) + (3γ∗2 ± γ∗2 )n2 , and
(f4) there is a function φ′ : {rFc : F ∈ F, c ∈ [2]} → R such that |φ′−1 (v)| ≤ ε−2 for any
v ∈ R and φ′ (rF1 ) 6= φ′ (rF2 ) for any F ∈ F.
Then there exists a function φ which is consistent with φ′ and which packs F into G∪G′ ∪H1 ∪H2
such that
(Φ1) E(G) ∪ E(H1 ) ∪ E(H2 ) ⊆ E(φ(F)) and
1/2
(Φ2) for every v ∈ A, we have dG′ ∩φ(F ) (v) ≤ γ∗ |A|.
We structure the proof into several steps. In the “preparation step”, Step 1, we partition F
into several subsets. We also apply Lemma 5.1 to obtain an approximate decomposition of G
into suitable cycle blow-ups. Unfortunately, Lemma 5.1 also returns a small exceptional set V0
of vertices which is not part of the cycle blow-ups. Furthermore, we partition each forest F ∈ F
into a large subforest F̃ and a small subforest F − V (F̃ ).
In Step 2, we apply Lemma 6.9 to the cycle blow-ups obtained in Step 1 to approximately
cover the edges in E(G) with the set of large subforests. Crucially, the density of the leftover of
G (i.e. the uncovered part) is insignificant compared to the density of H2 . In this step we will
also use some edges of H1 in order to satisfy the restrictions on the packing given by (f4). In
the following steps we cover the remaining edges with the small subforests. In order to avoid an
overlap between the embeddings of the small and large subforests, we equip V with an equitable
partition (U1 , . . . , UD ) and make sure that for each F ∈ F the large subforest F̃ of F uses at
most D−3 parts Ui while the remaining three parts are reserved for the small subforest
F −V (F̃ )
D
of F . In order to maintain a symmetric setting, we actually partition F into 3 subsets and
carry out the above procedure for every choice of D − 3 sets in (U1 , . . . , UD ).
In Step 3, we prepare a link between the large and the small subforests by embedding the
roots of each small subforest F − V (F̃ ) (i.e. those vertices of F − V (F̃ ) which attach to F̃ ) into
some Ui which is not used by its corresponding large subforest F̃ .
In the remaining steps we make use of the small subforests in the following way. In Step 4,
we use Lemma 7.1 to cover almost all edges incident to the exceptional set V0 . In Step 5, we
cover all the edges induced by V \ A via Lemma 7.2. In Step 6, we make use of Lemma 7.3 to
ensure that the number of uncovered edges incident to each vertex in V \ A is even. In Step 7,
we use Lemma 7.4 to cover all remaining edges between A and V \ A. In each of these four steps
we make use of the fact that the leftover of G forms an insignificant part of the total current
leftover.
Proof of Lemma 8.1. We start with the preparation step.
Step 1. Preparation. In this step, we partition G, G′ , H1 , H2 , the underlying vertex sets,
and F into structures which are suitable for applications of the packing and embedding lemmas
M, M ′ ∈ N and a constant η such that
proved in Section 6 and 7. We additionally choose

[D]
1/n ≪ 1/M ≪ 1/M ′ ≪ ε ≪ η ≪ δ2 . Let D̂ := D
3 and let I := D−3 = {S1 , . . . , SD̂ }. Thus
|I| = D̂.
We select an equitable partition (U1 , . . . , UD ) of V \ R satisfying the following:
(U1) (U1 ∩ A, . . . , UD ∩ A) is an equitable partition of A, and
(U2) for every J ∈ {G, G′ , H1 , H2 }, every u, v ∈ V and i, j ∈ [D], we have
(i) |dJ,Ui (u) − dJ,Uj (u)| ≤ εn,

32

FELIX JOOS, JAEHOON KIM, DANIELA KÜHN, AND DERYK OSTHUS

(ii) |dJ,Ui ∩A (u) − dJ,Uj ∩A (u)| ≤ εn, and
(iii) |dJ,Ui (u, v) − dJ,Uj (u, v)| ≤ εn.
Such an equitable partition exists as an equitable partition of V \ R chosen uniformly at random
subject to (U1) satisfies (U2) with probability at least 1/2 by Lemma 3.2. For a set S ⊆ [D],
we define
[
US :=
Ui .
i∈S

For each I ∈ [D̂], let
AI := A ∩ U[D]\SI and BI := (U[D]\SI ∪ R) \ A.

(8.1)

We make the following observation (which follows from (g3), (U1), (U2) and the fact that
|R| = εn).
For all i ∈ [D] and I ∈ [D̂], the bipartite graphs H1 [Ui ], H1 [Ui ∪ R], H1 [AI ∪ BI ] and
H1 [AI ∪ (BI \ R)] = H1 [U[D]\SI ] are (ε1/2 , δ1 )-quasi-random.

(8.2)

Observe that G − R is (2β, α)-quasi-random by (g2), and thus (β 1/7 , α/2)-dense by Proposition 3.10. Thus we can apply Lemma 5.1 with the following graphs and parameters.
object/parameter G − R ε/(1 − ε) δ2−4 β 1/7 α/2 α D (U1 , . . . , UD ) M
playing the role of
G
ε
t
β
α d D (U1 , . . . , UD ) M

M′
M′

Therefore, there exist an exceptional set V0 ⊆ V \ R, with
|V0 | ≤ 2εn,

(8.3)

a positive integer Γ with M ′ ≤ Γ ≤ M , and collections of cycleSblow-ups CS (one for each S ∈ I)
such that the following properties hold, where we write C := S∈I CS :
(R′ 1) for every S ∈ I, the set CS is a set of (3ε, δ24 )-super-regular cycle (1 − 2ε) Γn -blow-ups such
that C ⊆ G for each C ∈ CS , the length of each C ∈ CS is odd and at least (1 − 7/(2D))Γ
and such that V (C) ⊆ US \ V0 for each C ∈ CS ,
(R′ 2) all cycle blow-ups in C are edge-disjoint from each other,
1/14 )D̂ −1 e(G) for all S ∈ I,
(R′ 3) e(CS ) = (1
P± β
′
(R 4) dG (v) − C∈C dC (v) ≤ 4δ22 n for v ∈ V \ (V0 ∪ R). In particular, e(C) ≥ e(G) − 2δ22 n2 .

Because we split G − R into D̂ collections CS of graphs, we also seek a corresponding partition
of F into F1 , . . . , FD̂ such that
(F1) |FI | ≥ (1/2 + d/2)D̂ −1 n for all I ∈ [D̂],
(F2) e(FI ) = e(CSI ) + (3γ∗2 ± 2γ∗2 )D̂ −1 n2 for all I ∈ [D̂].

It is not difficult so see that such a partition exists. Indeed, for all I ∈ [D̂], assign F ∈ F to FI
with probability e(CSI )/e(C), independently of all other F ′ ∈ F. Then straightforward applications of Theorem 3.1 show that this random partition satisfies (F1) and (F2) with probability
at least 1/2.
We will cover the edges of G, H1 , H2 in several steps, mainly via applications of Lemma 6.9 and
Lemma 7.1–7.4. For the applications of Lemma 7.1–7.4 we need to reserve an appropriate collection of forests. Accordingly, for every I ∈ [D̂], we partition FI into sets FIη , FIδ2 , FIδ1 , FIpar , FI0
such that


n
1/2
η
, |FIδ2 | = δ2 n, |FIδ1 | = |FIpar | = γ∗ n
(8.4)
|FI | = 3
6D̂
and let
FIγ∗

:=

FIδ2

∪ FIδ1

∪ FIpar ,

FI0

:=

FI \ (FIη

∪ FIγ∗ )

ξ

and F :=

D̂
[

I=1

FIξ for ξ ∈ {η, δ2 , δ1 , par, γ∗ , 0}.

OPTIMAL PACKINGS OF BOUNDED DEGREE TREES

Such a partition exists by (F1) and since
(2γ∗ +

1/2
δ2 )n

+3

Note that



n
6D̂



33

≤ (1/2 + d/2)D̂ −1 n.

2γ∗ n ≤ |FIγ∗ | ≤ 3γ∗ n.

(8.5)

Fη

We will use subforests of the forests in
to cover almost all the edges at the exceptional set
V0 ∪ R in Step 4, subforests of the forests in F δ2 to cover all remaining edges inside V \ A in
Step 5 (these edges will consist mainly of edges in H2 ). We will use subforests of the forests
in F η ∪ F par to resolve parity issues in Step 6, and subforests of the forests in F δ1 to cover all
remaining edges between A and V \ A in Step 7 (these edges will consist mainly of edges in H1 ).
The forests in F 0 are simply the forests which play no specific role in Step 4–7.
In Step 2, we will use Lemma 6.9 to embed the bulk of F into the cycle blow-ups in C.
Accordingly, for every F ∈ F we now define a “large” subforest F̃ of F which is embedded by
Lemma 6.9. (The remaining subforests are used to cover the remaining edges by applications of
Lemma 7.1–7.4, as described above.) For every F ∈ F, we will also define a set XF containing
all those vertices of F̃ which attach to F − V (F̃ ).
More precisely, for each I ∈ [D̂], we proceed as follows. For each F ∈ FI0 , we define F̃ := F
and XF := ∅.
We now construct F̃ and XF for all F ∈ FIγ∗ . Let
βI :=

e(FI ) − (1 − δ22 )e(CSI ) (F 2) (3γ∗2 ± 5γ∗2 /2)D̂ −1 n2
.
=
|FIγ∗ |n
|FIγ∗ |n

(8.6)

Then (8.5) implies 2∆γ∗2 ≤ βI ≤ γ∗ . Recall from (f2) that each F ∈ F consists of two components
(TF1 , rF1 ), (TF2 , rF2 ) of order at least γn. Thus for all F ∈ FIγ∗ we may apply Proposition 6.4 with
1, βI , γ playing the roles of c, β, α to choose a subtree TF1 (yF ) =: TFγ∗ of F such that TFγ∗ has
distance at least 3 from rF1 ,
γ∗2 n ≤ |TFγ∗ | ≤ ∆γ∗ n,

and

X

e(TFγ∗ ) = e(FI ) − (1 − δ22 )e(CSI ) ± n.

(8.7)
(8.8)

F ∈FIγ∗

For each F ∈ FIγ∗ , we let F̃ := F − V (TFγ∗ ), and let xF be the unique vertex in F̃ which is
adjacent to yF in F . We view yF as the root of TFγ∗ and let XF := {xF }.
Next we consider any forest F ∈ FIη . By Proposition 6.4 (applied with 2, η, γ playing the
roles of c, β, α), for every c ∈ [2] we can choose a subtree TFc (yFc ) of TFc with
ηn/(2∆) ≤ |TFc (yFc )| ≤ ∆ηn

(8.9)

such that the distance from rFc to yFc is at least 5. Again, we view yFc as the root of TFc (yFc ).
Let F̃ := F − V (TF1 (yF1 ) ∪ TF2 (yF2 )). For each c ∈ [2], let xcF be the unique vertex in F̃ which
is adjacent to yFc in F and define XF := {x1F , x2F }. In addition, for all c ∈ [2] and F ∈ FIη , we
choose one leaf ℓcF of TFc (yFc ) at distance at least 6 from yFc and let zFc be the neighbour of ℓcF .
Hence
{yF1 , zF1 , yF2 , zF2 } is a 5-independent set in F .
ℓcF

(8.10)

Embedding
appropriately in a separate step will help us to change the parity of its image
vertex in the leftover graph if required. For this it is essential that ℓcF is in fact also a leaf of
the original forests F ∈ F η . This is also the reason why we need to remove two subtrees in this
case (rather than one): In total we need to reserve 2|F η | leaves in order to be able to deal with
possible parity problems later on, but if F is a path, then we cannot find a single small subtree
which contains both leaves of F .
Note that in all cases we have |XF | ≤ 2 and that XF ∩ (NF [rF1 ] ∪ NF [rF2 ]) = ∅. Recall that
γ∗
FI = FIδ2 ∪ FIδ1 ∪ FIpar . For all ξ ∈ {δ2 , δ1 , par} and F ∈ FIξ , let TFξ := TFγ∗ . For easier

34

FELIX JOOS, JAEHOON KIM, DANIELA KÜHN, AND DERYK OSTHUS

referencing, given ξ ∈ {η, γ∗ , δ2 , δ1 , par} and F ′ ⊆ F ∈ FIξ , we sometimes write yF ′ for yF . For
example, if ξ ∈ {δ2 , δ1 , par} and F ′ = TFξ , then this allows us to directly refer to yF as yF ′ .
Analogous conventions apply to xF , x1F , x2F , yF1 , yF2 , zF1 , zF2 , ℓ1F , ℓ2F accordingly.
We introduce the following families of forests for every I ∈ [D̂]. Recall that the first three
families refer to the “large” subforests and the other families to the “small” subtrees and forests.
F̃Iξ := {F̃ : F ∈ FIξ } for ξ ∈ {η, γ∗ , δ2 , δ1 , par, 0},
F̃I := {F̃ : F ∈ FI },
S
F̃ := D̂
I=1 F̃I = {F̃ : F ∈ F},
ξ
TI := {TFξ : F ∈ FIξ } for ξ ∈ {γ∗ , δ2 , δ1 , par},
FIη := {(TF1 (yF1 ) − ℓ1F ) ∪ (TF2 (yF2 ) − ℓ2F ) : F ∈ FIη },
S
ξ
• T ξ := D̂
I=1 TI for ξ ∈ {γ∗ , δ2 , δ1 , par},
S
η
• F η := D̂
I=1 FI .
•
•
•
•
•

The set F̃ contains all forests which we will embed in Step 2 using Lemma 6.9. The forests in
F̃ inherit their roots from their corresponding supergraphs in F. As every component of F ∈ F
has at least γn vertices (by (f2)) and e(F) ≤ n2 (by (f3)), we also conclude
|F̃ | = |F| ≤ γ −1 n.
For later reference we note that
|FIη |

(8.4)
|FIη | =

=

3



n
6D̂



= (1 ± ε)

(8.11)
n
2D̂

.

(8.12)

Moreover, (f2), (8.7), and (8.9) imply that
γn ≤ |F̃ | ≤ (1 − 4/D)n
γ∗2 n ≤ |T | ≤ ∆γ∗ n

ηn/(3∆) ≤ |T | ≤ ∆ηn

for all F̃ ∈ F̃ ,
for all T ∈ T ξ and ξ ∈ {γ∗ , δ2 , δ1 , par},

(8.13)
η

for every component T of each forest in F .

By (8.12) and (8.13), for all I ∈ D̂, we have e(F̃Iη ) ≥ e(FIη ) − 2∆ηn|FIη | ≥ e(FIη ) − η 2/3 n2 .
By (g2) and (R′ 3), we conclude e(CSI ) ≥ (1 − β 1/14 )(1 − β)D̂ −1 αn2 /2 ≥ βn2 . Thus


X
(8.8)
e(F̃I ) = e(FIγ∗ ) −
(e(TFγ∗ ) + 1) + (e(FIη ) ± η 2/3 n2 ) + e(FI0 ) = (1 − δ22 ± η 1/2 )e(CSI ).
F ∈FIγ∗

(8.14)

Next we need to decide which forests will be embedded into which cycle blow-up in C. For
this, for each I ∈ [D̂] we proceed as follows. We write CSI =: {CI,1 , . . . , CI,c′I }. Note that by
(R′ 1) for every i ∈ [c′I ],
δ24 n2
2δ4 n2
≤ e(CI,i ) ≤ 2 .
3Γ
Γ
′
Together with (R 2), this implies that
|C| ≤ 2δ2−4 Γ.

(8.15)

(8.16)

Moreover, (8.14) and (8.15) imply that we can select a partition of F̃I into F̃I,1 , . . . , F̃I,c′I such
that for all i ∈ [c′I ]
e(F̃I,i ) = (1 − δ22 ± 2η 1/2 )e(CI,i ).

(8.17)

Finally, (8.13), (8.15), and (8.17) allow us to conclude that for all I ∈ [D̂] and i ∈ [c′I ]
|F̃I,i | ≤

n
2δ24 n2 1
·
≤ .
Γ
γn
Γ

(8.18)

OPTIMAL PACKINGS OF BOUNDED DEGREE TREES

35

Step 2. Approximate covering. In this step, we find an approximate covering of the edges
of G. To make the leftover sufficiently small, we will actually do this by finding an approximate
covering of the cycle blow-ups CI,i defined in Step 1 (which themselves cover almost all edges of
G). Recall that assumption (f4) prescribes an embedding φ′ of the roots of all F ∈ F and thus of
the roots of all F̃ ∈ F̃ . Ideally, we want to pack the forests F̃ ∈ F̃I,i without their roots into CI,i
in such a way that the edges incident to their roots are present in H1 . However, one difficulty
is that for a root r of F , the vertex φ′ (r) might not have neighbours in V (CI,i ). Therefore,
we introduce an intermediate step. We only pack the forests without their roots and without
the neighbours of the roots into CI,i and embed the neighbours of the roots onto appropriate
vertices to complete the packing. We arrange this so that all edges incident to a neighbour of a
root are mapped to edges in H1 .
More precisely, recall that we denote the roots of each F ∈ F by rF1 and rF2 . We will now
extend the domain of the function φ′ to
{p1 , . . . , pm } := {x ∈ NF (rFc ) : c ∈ [2], F ∈ F}.
We will achieve this via Proposition 3.21. Note that by (8.11),
m ≤ 2∆γ −1 n.

(8.19)

For each i′ ∈ [m], let Fi′ ∈ F be such that pi′ ∈ Fi′ . Then |{i′ ∈ [m] : Fi′ = F }| = dF (rF1 ) +
dF (rF2 ) for each F ∈ F. Let H index be the graph on [m] such that i′ j ′ ∈ H index if Fi′ = Fj ′ .
Thus ∆(H index ) ≤ 2∆. For each i′ ∈ [m], let
qi′ := {rF1 i′ , rF2 i′ } ∩ NFi′ (pi′ ) and ui′ := φ′ (qi′ ).
For each v ∈ R, we obtain |{i′ : v = ui′ }| ≤ ∆|{F ∈ F : v ∈ φ′ ({rF1 , rF2 })}| ≤ ∆ε−2 by (f4).
Next, for each i′ ∈ [m], we define sets of vertices Wi′′ and Wi′′′ which we want to exclude as
possible images of pi′ . Let I(i′ ), i(i′ ) be the numbers defined by F˜i′ ∈ F̃I(i′ ),i(i′ ) . We define
Wi′′ := NH1 (ui′ ) ∩ A ∩ USI(i′ ) ,
c ′′ := NH (ui′ ) ∩ A ∩ U[D]\S , and
W
1
i
I(i′ )

c ′′ : dH ,V (C
(w) < δ12 n}.
Wi′′′ := {w ∈ W
i
1
I(i′ ),i(i′ ) )\A

Note ui′ ∈ R ⊆ V \ A by (f4). Thus (U2) and (g3) imply that

c ′′ | ≥ (δ1 − 4ε)|A| · 3/D − εn ≥ δ2 n.
|W
1
i

(8.20)

Theorem 3.8 and (g3) imply that H1 [A, V \A] is (ε1/7 , δ1 )-super-regular. Observe that |V (CI(i′ ),i(i′ ) )\
A| ≥ (1 − 7/(2D))Γ · (1 − 2ε) Γn − γn ≥ n/3 by (R′ 1) and (g1). Together with Proposition 3.4
c ′′ , V (CI(i′ ),i(i′ ) ) \ A] is (ε1/8 , δ1 )-regular. Thus |W ′′′ | ≤ 2ε1/8 n,
this implies that the graph H1 [W
i
i
by Proposition 3.6, and therefore
c ′′ | − 2ε1/8 n
dH1 ,A (ui′ ) − |Wi′′ ∪ Wi′′′ | ≥ |W
i

(8.19),(8.20)

≥

3∆ε−2 + m/ε−1 + ε−1 .

Thus we can apply Proposition 3.21 with the following graphs and parameters.
object/parameter H1 H index ∆ε−2 A m ε−1 Wi′′ ∪ Wi′′′ ui′
playing the role of G
H
∆
A m s
W i′
ui ′
We obtain v1 , . . . , vm so that
(α1) vi′ ∈ (A ∩ U[D]\SI(i′ ) ) \ Wi′′′ ,
(α2) u1 v1 , . . . , um vm are distinct edges in H1 , and
/ {uj ′ , vj ′ } if Fi′ = Fj ′ .
(α3) |{i′ : v = vi′ }| ≤ ε−1 for all v ∈ A and vi′ ∈
′
′
′
′
Let E := {ui′ vi′ : i ∈ [m]} and H1 := H1 − E . Thus
∆(H1 − E(H1′ )) = ∆(E ′ ) ≤ ε−1 + ∆ε−2 ≤ 2∆ε−2 .

(8.21)

36

FELIX JOOS, JAEHOON KIM, DANIELA KÜHN, AND DERYK OSTHUS

Given a vertex x ∈ F , recall that NF [x] = NF (x) ∪ {x}. Moreover, we write NF2 [x] for the set of
all vertices having distance at most 2 from x in F . Now let φ′ (pi′ ) := vi′ for all i′ ∈ [m]. Note
(α3) implies that φ′ is injective on NF [rF1 ] ∪ NF [rF2 ] for any F ∈ F. Also the domain of φ′ is
{x ∈ NF [rFc ] : c ∈ [2], F ∈ F} and for any v ∈ V we obtain
(8.21)

|φ′−1 (v)| ≤ ∆(E ′ ) ≤ 2∆ε−2 .

(8.22)

For all I ∈ [D̂] and i ∈ [c′I ], let
RI,i := {φ′ (x) : x ∈ NF (rFc ) for some F̃ ∈ F̃I,i and c ∈ [2]}.
Note that for all v ∈ RI,i , there exists i′ ∈ [m] such that v = vi′ , I = I(i′ ), and i = i(i′ ). Then
RI,i ⊆ A ∩ U[D]\SI

(8.23)

by (α1). Thus RI,i ∩ V (CI,i ) = ∅ by (R′ 1). Also for all v ∈ RI,i , we have
(8.21)

(α1)

dH1′ ,V (CI,i )\A (v) ≥ dH1 ,V (CI,i )\A (v) − 2∆ε−2 ≥ δ12 n/2.

(8.24)

Recall that XF was defined together with F̃ in Step 1. For each F ∈ F, we let
XF′ := (NF2 [rF1 ] \ NF [rF1 ]) ∪ (NF2 [rF2 ] \ NF [rF2 ]) ∪ XF .
Thus |XF′ | ≤ 2∆2 . Now we sequentially pack the forests in F̃I,i into CI,i ∪ H1 according to the
lexicographic order1 on the set of tuples {(I, i) : I ∈ [D̂], i ∈ [c′I ]}.
More precisely, for each tuple (I, i) in turn we will construct functions τF̃ consistent with φ′
which embed each F̃ ∈ F̃I,i into CI,i ∪ H1 such that the following properties hold:
S
(P1)I,i ∆(CI,i − F̃ ∈F̃I,i E(τF̃ (F̃ ))) ≤ 20δ26 n/Γ,

(P2)I,i τF̃ (F̃ − (NF [rF1 ] ∪ NF [rF2 ])) ⊆ CI,i and thus V (τF̃ (F̃ − (NF [rF1 ] ∪ NF [rF2 ]))) ⊆ USI \ V0
for every F̃ ∈ F̃I,i ,
(P3)I,i for any vertex v ∈ V , we have



 2n
[

′
 F̃ ∈
,
F̃I ′ ,i′ : v ∈ τF̃ (XF )  ≤


Γ

′
′
(I ,i )≤(I,i)
S
S
1
2
′ , where E(F, I, i) :=
(P4)I,i τF̃ (F̃ − {rF , rF }) ⊆ CI,i ∪ HI,i
(I ′ ,i′ )<(I,i) F̃ ∈F̃ ′ ′ E(τF̃ (F̃ )) and
I ,i

′
HI,i
:= H1′ − E(F, I, i). Moreover, the graphs τF̃ (F̃ ) are pairwise edge-disjoint for
different F̃ ∈ F̃I,i .

Assume that for some (I, i) we have already constructed τF̃ consistent with φ′ for all F̃ ∈ F̃I ′ ,i′
with (I ′ , i′ ) < (I, i) such that (P1)I ′ ,i′ –(P4)I ′ ,i′ hold. Let U ′ ⊆ V (CI,i ) be the set of vertices
which lie in τF̃ (XF′ ) for at least n/Γ forests F̃ ∈ F̃I ′ ,i′ with (I ′ , i′ ) < (I, i). Since |XF′ | ≤ 2∆2
for any F ∈ F, (8.11) implies that
|U ′ | ≤

2∆2 γ −1 n
≤ Γ2 .
n/Γ

(8.25)

Let ℓ be the length of CI,i . Hence, by (R′ 1), ℓ is odd and ℓ ≥ (1 − 7/(2D))Γ. In particular,
together with (R′ 1) and (8.13), this implies (1 − γ 2 )|CI,i | ≥ |F̃ | for any F̃ ∈ F̃I,i .
Let F̂ := F̃ − {rF1 , rF2 } and let F̂I,i := {F̂ : F̃ ∈ F̃I,i }. We wish to apply Lemma 6.9 with the
following graphs and parameters.
′ [V (C ) \ A, R ]
object/parameter CI,i F̂I,i HI,i
ℓ δ22 /2 δ24 δ12 /3 γ 2
I,i
I,i
′
playing the role of G
F
G
ℓ
α
d
d0
η
′
1
2
′
′
object/parameter
φ
RI,i
NF (rF ) ∪ NF (rF )
U XF ∆ 3ε
′
playing the role of φ
R
r(F )
U ′ XF′
∆
ε
1We use ≤ to equip tuples of reals with a lexicographic ordering; that is, (I, i) ≤ (I ′ , i′ ) if I < I ′ or I = I ′ and
i ≤ i′ . For convenience, let (I, 0) := (I − 1, c′I−1 ) and (I, c′I + 1) := (I + 1, 1).

OPTIMAL PACKINGS OF BOUNDED DEGREE TREES

37

So we need to verify conditions (a1)–(a7) of Lemma 6.9. Condition (a1) holds by (R′ 1). For any
v ∈ RI,i , by (P2)I ′ ,i′ and (P3)I ′ ,i′ for (I ′ , i′ ) < (I, i), we obtain
′ ,V (C
dHI,i
(v) ≥ dH1′ ,V (CI,i )\A (v) − ∆|φ′−1 (v)| −
I,i )\A

2n
Γ

(8.22),(8.24)

≥

δ2 |CI,i |
δ12 n
≥ 1
,
3
3

which verifies (a2). Condition (a3) follows from (f2), (8.13) as well as the fact that each F̃ has
at most two components and F̂ = F̃ − {rF1 , rF2 }, (a4) follows from (8.17), (a5) is trivial from
the definition of F̂ and rFc , and (a6) follows from (8.25) and the definition of XF′ . Also (8.22)
implies that |φ′−1 (v)| ≤ 2∆ε−2 ≤ ℓ1/2 for each v ∈ RI,i , and as remarked before (8.22), φ′ is
injective on NF (rF1 ) ∪ NF (rF2 ) for any F ∈ F, which verifies (a7).
Thus Lemma 6.9 gives a function τF̂I,i which is consistent with φ′ and which packs F̂I,i into
′ [V (C ) \ A, R ] so that
CI,i ∪ HI,i
I,i
I,i
(A′ 1) ∆(CI,i − E(τF̂I,i (F̂I,i ))) ≤ 5δ26 n/ℓ,

(A′ 2) τF̂I,i (V (F̂ ) \ (NF (rF1 ) ∪ NF (rF2 ))) ∩ RI,i = ∅ for every F̂ ∈ F̂I,i , and

(A′ 3) τF̂I,i (XF′ ) ∩ U ′ = ∅ for every F̂ ∈ F̂I,i .

Define τF̂ := τF̂I,i |F̂ and τF̃ := τF̂ ∪ φ′ |{r1 ,r2 } .
F F
Next we verify (P1)I,i –(P4)I,i . Properties (A′ 1) and (A′ 2) directly imply (P1)I,i and (P2)I,i .
For any vertex v ∈ U ′ and F̃ ∈ F̃I,i , (A′ 3) implies that v ∈
/ τF̃ (XF′ ). If v ∈ V \ V (CI,i ), then by
′
(P2)I,i we also have that v ∈
/ τF̃ (XF ). Thus for each v ∈ U ′ ∪ (V \ V (CI,i )), by (P3)I ′ ,i′ with
(I ′ , i′ ) < (I, i), we have

 


 

 2n
[
[

 
′
′
 F̃ ∈


.
F̃I ′ ,i′ : v ∈ τF̃ (XF )  =  F̃ ∈
F̃I ′ ,i′ : v ∈ τF̃ (XF )  ≤




Γ

 
(I ′ ,i′ )≤(I,i)
(I ′ ,i′ )<(I,i)
On the other hand, for each vertex v ∈ V (CI,i ) \ U ′ , by definition of U ′ we have



 n
[
(8.18)

′
 F̃ ∈
 ≤ + |F̃I,i | ≤ 2n .
′ ,i′ : v ∈ τ (X )
F̃
I
F
F̃

 Γ
Γ

′ ′
(I ,i )≤(I,i)

So (P3)I,i holds. Observe that (P4)I,i holds by construction.
S
S
Let τ̃ := F̃ ∈F̃ τF̃ . Note the properties (P2)I,i and (P4)I,i imply that τ̃ packs F̃ into H1 ∪ C
and is consistent with φ′ . Let us define the leftover graphs.
G1 := G − E(τ̃ (F̃ )) and H11 := H1 − E(τ̃ (F̃)).

(8.26)

This with (P1)I,i and (R′ 4) imply that for every v ∈ V \ (R ∪ V0 ), we have
(8.16)
20δ26 n
· |C| + 4δ22 n ≤ 50δ22 n.
(8.27)
Γ
Hence τ̃ forms a (very efficient) approximate cover of the edges of G. Note (P2)I,i implies that
for any vertex v ∈ V and F ∈ F, we can only have dτ̃ (F̃ )∩H1 (v) > 0 if v ∈ τ̃ (NF2 [rFc ]) (for some
c ∈ [2]) which in turn only holds if v ∈ φ′ (NF [rFc ]) or v ∈ τ̃ (XF′ ). By (8.22) the former holds for
at most 2∆ε−2 forests F ∈ F and by (P3)I,i the latter holds for at most 2n/Γ forests F ∈ F.
Since ∆(F ) ≤ ∆, it follows that

dG1 (v) ≤

∆(H1 − E(H11 )) = ∆(E(τ̃ (F̃ )) ∩ H1 ) ≤ ∆(2∆ε−2 + 2n/Γ) ≤ εn.

(8.28)

Thus H11 inherits all the relevant properties of H1 . We proceed with a few observations. Recall
S
that for all F ∈ F 0 , we have F̃ = F . Thus τ̃ actually packs F into H1 ∪ C. On the other hand,
S
for all forests F ∈ F γ∗ ∪ F η , the function τ̃ only packs a proper subgraph of F into H1 ∪ C.
In the next few steps we will extend this by packing the forests in T γ∗ ∪ F η . As a preliminary
step towards this, we embed the roots of these forests via a function τ ′ in Step 3.

38

FELIX JOOS, JAEHOON KIM, DANIELA KÜHN, AND DERYK OSTHUS

Step 3. Embedding the roots of the forests in T γ∗ ∪ F η . In this step, we define the
function τ ′ which, for every I ∈ [D̂], embeds the roots {yFc : F ∈ FIη , c ∈ [2]} ∪ {yF : F ∈ TIγ∗ }
into A ∩ Ui for some i ∈
/ SI (recall that their neighbours xcF and xF have already been embedded
in the previous step as they belong to F̃ ). We stress here that one key point is the following.
Given I ∈ [D̂] and F ∈ FIγ∗ , in Step 2 the subforest F̃ of F was embedded into USI (apart from
its roots rF1 , rF2 which are mapped to R and the neighbours of those roots which are embedded
into A ∩ U[D]\SI by (8.23)), while the forest F − V (F̃ ) ∈ TIγ∗ will be embedded into U[D]\SI .
So after we have chosen a suitable image τ ′ (yF ) of the root yF of F − V (F̃ ) inside U[D]\SI ,
any embedding of F − V (F̃ ) into U[D]\SI which is consistent with τ ′ (yF ) and which avoids
τ̃ (N (rF1 ) ∪ N (rF2 )) yields an embedding of F . For F ∈ FIη the strategy is similar, but slightly
more complicated.
Consider F ∈ F. For any F ′ ⊆ F , we define
WF ′ := τ̃ (NF [rF1 ] ∪ NF [rF2 ]) = φ′ (NF [rF1 ] ∪ NF [rF2 ]).

(8.29)

γ∗ ,

F γ∗

then this allows us to
and T is the subtree of F belonging to T
(So for example, if F ∈
refer directly to WF as WT .) Note that by (f4), (P2)I,i and (8.23), for all F ∈ FI , we have
τ̃ (F̃ ) ∩ (U[D]\SI ∩ V0 ) = WF \ τ̃ ({rF1 , rF2 }) and τ̃ (F̃ ) ∩ R = τ̃ ({rF1 , rF2 }) ⊆ WF .

(8.30)

As discussed above, we need to avoid WF when defining τ ′ in the current step. Note
|WF | ≤ 2∆ + 2 ≤ ∆2 .

(8.31)

Furthermore, (8.22) states that for all v ∈ V ,
|{F ∈ F : v ∈ WF )}| ≤ 2∆ε−2 ≤ ε−3 .

(8.32)

Consider any I ∈ [D̂]. Recall from (8.12) that |FIη | = |FIη | = 3⌈n/(6D̂)⌉. Let {j, j ′ , j ′′ } be
such that {j, j ′ , j ′′ } = [D] \ SI . Split the forests in FIη into three sets FIη (1), FIη (2), FIη (3) of
size ⌈n/(6D̂)⌉ and define

if F ∈ FIη (1),
 j
j′
if F ∈ FIη (2),
j(F ) =
 ′′
j
if F ∈ FIη (3).

In a similar way we define j(T ) for the trees T in the families TIδ1 , TIδ2 , TIpar (again, assigning
each of the three possible values in [D] \ SI to a third of the trees in each of these families). For
each i ∈ [D], let
• F i,η := {F ∈ F η : j(F ) = i} and
• T i,ξ := {T ∈ T ξ : j(T ) = i} for all ξ ∈ {γ∗ , δ1 , δ2 , par}.
Thus (8.30) implies the following:
For all i ∈ [D] and F ∈ F η ∪F γ∗ , let F ′ be the unique subforest of F belonging
to F η ∪ T γ∗ . If F ′ ∈ F i,η ∪ T i,γ∗ , then τ̃ (F̃ ) ∩ (Ui ∪ V0 ∪ R) = WF .
Moreover, since |R|, |V0 | ≤ 2εn,



D−1
n
|Ui ∪ V0 ∪ R|
i,η
.
= (1 ± 5Dε)
|F | =
2
D−3
6D̂

(8.33)

(8.34)

For each i ∈ [D] in turn, we will now use Proposition 3.21 to define a function τ ′ packing
{xF yF : F ∈ T i,γ∗ } ∪ {x1F yF1 , x2F yF2 : F ∈ F i,η } into G′ ∪ H11 such that yF , yF1 , yF2 ∈ A ∩ Ui and
τ ′ is consistent with τ̃ . Hence assume that for some i ∈ [D] we have already determined τ ′ for
Si−1
(F j,η ∪ T j,γ∗ ) such that
all F ∈ j=1
∆(E1j ) ≤ ε2 n

for all j < i, where
E1j :=

[

F ∈F j,η

{τ ′ (xcF )τ ′ (yFc ) : c ∈ [2]} ∪

(8.35)

[

F ∈T j,γ∗

{τ ′ (xF )τ ′ (yF )}.

OPTIMAL PACKINGS OF BOUNDED DEGREE TREES

Let G1i := (G′ ∪ H11 ) −

Si−1

j
j=1 E1 .

39

By (g2), (g3), (U2), (8.28) and (8.35), for every v ∈ V , we have

dG1i ,Ui ∩A (v) ≥ δ1 γn/(2D) − εn − Dε2 n ≥ δ12 n.

(8.36)

η
2
i,η and {T γ∗ , . . . , T γ∗ } := T i,γ∗ . Let u := τ̃ (x1 ), u
Write {F1η , . . . , Fm
m2
m1 +j = τ̃ (xF η )
j
1 } := F
1
Fη
j

j

for each j ∈ [m1 ] and u2m1 +j = τ̃ (xTjγ∗ ) for each j ∈ [m2 ]. We define Wj := Wm1 +j := WFjη if
j ∈ [m1 ] and W2m1 +j := WTjγ∗ if j ∈ [m2 ]. By (P3)I,i and the definition of XF , we conclude
that for any v ∈ V , we have
|{j ∈ [2m1 + m2 ] : v = uj }| = |{F ∈ F γ∗ : v = τ̃ (xF )}| + |{F ∈ F η : v ∈ τ̃ ({x1F , x2F })| ≤ 2n/Γ.
(8.37)
Let Hiindex be the graph on [2m1 + m2 ] such that jj ′ ∈ H index if j ′ = j + m1 and j ≤ m1 . Note
that for all j ∈ [2m1 + m2 ], we have
dG1 ,Ui ∩A (uj ) − |Wj | − |V0 |

(8.3),(8.31),(8.36)

≥

i

(8.12)

δ12 n − ∆2 − 2εn ≥ 6Γ−1 n + (2m1 + m2 )/ε−1 + ε−1 .

Thus we can apply Proposition 3.21 with the following parameters and graphs.
object/parameter G1i Hiindex 2n/Γ A ∩ Ui 2m1 + m2 ε−1 Wj ∪ V0 uj
playing the role of G
H
∆
A
m
s
Wj
uj
We obtain a sequence of vertices v1 , . . . , v2m1 +m2 such that the following hold:
(β1) u1 v1 , . . . , u2m1 +m2 v2m1 +m2 are distinct edges in G1i ,
(β2) vj ∈
/ {uj ′ , vj ′ } whenever |j − j ′ | = m1 and j, j ′ ∈ [2m1 ],
(β3) vj , vm1 +j ∈ (Ui ∩ A) \ (WFjη ∪ V0 ) for all j ∈ [m1 ] and v2m1 +j ∈ (Ui ∩ A) \ (WTjγ∗ ∪ V0 )
for all j ∈ [m2 ], and
(β4) every vertex v ∈ V satisfies |{j ∈ [2m1 + m2 ] : v = vj }| ≤ ε−1 .
We define τ ′ (yF1 η ) := vj , τ ′ (yF2 η ) := vm1 +j for all j ∈ [m1 ] and τ ′ (yTjγ∗ ) := v2m1 +j for j ∈ [m2 ].
Let

j

j

E1i := {uj vj : j ∈ [2m1 + m2 ]}.
Then (8.37) and (β4) imply that ∆(E1i ) ≤ 2n/Γ + ε−1 ≤ ε2 n as required in (8.35). By repeating
this procedure for every i ∈ [D], we define τ ′ as desired. We claim that τ ′ satisfies the following
properties:
/ τ̃ (F̃ ); moreover,
(γ1) for every F ∈ F η ∪ F γ∗ and every y ∈ {yF , yF1 , yF2 }, we have τ ′ (y) ∈
′
1
′
2
η
τ (yF ) 6= τ (yF ) for each F ∈ F ,
(γ2) for any v ∈ V , there are at most ε−1 forests F ∈ F η ∪ T γ∗ such that v = τ ′ (y) for some
y ∈ {yF , yF1 , yF2 },
(γ3) for all j ∈ [D] and F ∈ F j,η ∪ T j,γ∗ , every root y of a component of F satisfies
τ ′ (y) ∈ (Uj ∩ A) \ (WF ∪ V0 ), and
(γ4) if I ∈ [D̂] and F ∈ FIη ∪ TIγ∗ , then every root y of a component of F satisfies τ ′ (y) ∈
AI \ WF = (A ∩ U[D]\SI ) \ WF .
(γ5) for all T ∈ T γ∗ , we have that τ̃ (xT )τ ′ (yT ) is an edge of G′ ∪ H11 and for all F ∈ F η and
c ∈ [2], we have that τ̃ (xcF )τ ′ (yFc ) is an edge of G′ ∪ H11 .
Indeed, (γ1) follows from (β2), (β3) and (8.33), (γ2) follows from (β4), while (γ3) and (γ4) both
follow from (β3) and (γ5) follows from (β1).
S
i
Let E1 := D
i=1 E1 . We conclude from (8.35) that
∆(E1 ) ≤ Dε2 n ≤ εn.

(8.38)

Let
G′2 := G′ − E1 ,

G2 := G1

and

H12 := H11 − E1 .

(8.39)

40

FELIX JOOS, JAEHOON KIM, DANIELA KÜHN, AND DERYK OSTHUS

Following on from (8.26), these updates track the edges of G′ , G and H1 which are still available
after this step. We use (8.2), (8.28), (8.38) and Proposition 3.9 to conclude the following.
For all j ∈ [D] and I ∈ [D̂], the bipartite graphs H12 [Uj ] = H12 [Uj ∩ A, Uj \ A], H12 [Uj ∪
(8.40)
R] = H12 [Uj ∩ A, (Uj ∪ R) \ A] and H12 [AI ∪ BI ] are (ε1/3 , δ1 )-quasi-random.
Step 4. Covering almost all the edges incident to the exceptional set. Property
(8.27) shows that in Step 2, we have covered almost all edges of G incident to vertices in
V \ (V0 ∪ R). In the following step, we use the forests in F η to cover almost all edges incident
to V0 ∪ R. We will achieve this through several applications of Lemma 7.1.
For each i ∈ [D], we consider the graph
G(i) := (G2 ∪ H2 )[Ui ∪ R ∪ V0 ] − E((G2 ∪ H2 )[R ∪ V0 ]).
Observe that G(1), . . . , G(D) are pairwise edge-disjoint. Note that by (U2) and (g4), any two
vertices u, v ∈ Ui satisfy
dG(i) (u, v) ≥ 3δ22 n/(5D).

(8.41)

Recall that in Step 3 we partitioned F η into F 1,η , . . . , F D,η . For each F ∈ F i,η , we choose two
distinct vertices qF1 , qF2 in (Ui ∩ A) \ (WF ∪ V0 ∪ τ ′ ({yF1 , yF2 })) uniformly at random. Note that
by (U1) and (8.31),
(8.3)

|(Ui ∩ A) \ (WF ∪ V0 ∪ τ ′ ({yF1 , yF2 }))| ≥ D −1 γn − 2εn − 2∆2 ≥ γ 2 n
and recall that |F i,η | is given by (8.34). Thus by straightforward applications of Lemma 3.2,
with probability at least 1/2, for each v ∈ Ui ∩ A, we have
|{F ∈ F i,η : v ∈ {qF1 , qF2 }}| ≤ n2/3 .

(8.42)

Thus there exists a choice such that (8.42) holds for all vertices v ∈ A. Recall from Step 1 that
for all F ∈ F i,η and c ∈ [2], the vertex zFc is the unique neighbour of the leaf ℓcF . We define
τ ′ (zFc ) := qFc for all F ∈ F i,η and c ∈ [2]. For all i ∈ [D], we now wish to apply Lemma 7.1 with
the following graphs and parameters.
V0 ∪ R
5Dε
η
object/parameter G(i) F i,η |Ui ∪ R ∪ V0 |
playing the role of G
F
n
V0
ε
η
′
1
2
1
object/parameter
δ2
∆
WF
τ |{y1 ,y2 ,z 1 ,z 2 } {yF , yF } {zF , zF2 }
F F F F
playing the role of δ2
∆
WF
τF′
{yF1 , yF2 } {zF1 , zF2 }
Assumptions (c1.1)–(c1.5) of Lemma 7.1 hold in the above set-up, as (8.41) implies (c1.1), (8.13)
implies (c1.2), (8.10), (γ2), (γ3), and (8.42) imply (c1.3), (8.31) implies (c1.4), and (8.32) implies
(c1.5). Also (8.34) ensures that F i,η contains the appropriate number of forests.
From Lemma 7.1 we obtain a function τiη packing F i,η into G(i) which is consistent with τ ′
such that the following properties hold:
(Q1.1)i V (τiη (F )) ⊆ Ui ∪ R ∪ V0 and τiη (F ) ∩ WF = ∅ for every F ∈ F i,η ,
(Q1.2)i dτiη (F i,η ) (v) ≤ η 1/3 |Ui ∪ R ∪ V0 | for all v ∈ Ui \ (V0 ∪ R), and
(Q1.3)i dτiη (F i,η ) (v) ≥ dG(i) (v) − ε1/3 |Ui ∪ R ∪ V0 | for every v ∈ V0 ∪ R.
For every F ′ ∈ F i,η and F ∈ F η such that F ′ is the unique subforest of F belonging to F η , (8.33)
and (Q1.1)i imply that τ̃ (F̃ ) ∩ τiη (F ′ ) = ∅. Together with (γ5) this means that τ̃ (F̃ ) ∪ τiη (F ′ )
yields an embedding of F − {ℓ1F , ℓ2F }.
S
η
η
η
2
We apply Lemma 7.1 for every i ∈ [D] and let τ η := D
i=1 τi . Thus τ packs F into G ∪ H2 .
η
1
2
η
′
Moreover, the function τ̃ ∪ τ packs {F − {ℓF , ℓF } : F ∈ F } into G ∪ G ∪ H1 ∪ H2 . Let
G3 := G2 − E(τ η (F η )), G′3 := G′2 , H13 := H12 and H23 := H2 − E(τ η (F η )).

(8.43)

OPTIMAL PACKINGS OF BOUNDED DEGREE TREES

41

Following on from (8.39), these updates track the edges which are still available after this step.
Let
G∗3 := G′3 ∪ G3 ∪ H13 ∪ H23 .

(8.44)

Thus G∗3 is the graph consisting of all the leftover edges. By (Q1.2)i for each i ∈ [D], every
v ∈ V \ (V0 ∪ R) satisfies
dτ η (F η ) (v) ≤

D
X

η 1/3 |Ui ∪ R ∪ V0 | ≤ 2η 1/3 n.

(8.45)

i=1

By (Q1.3)i for each i ∈ [D], every v ∈ R ∪ V0 satisfies
dG3 ∪H23 (v) ≤

D
X

(8.3)

ε1/3 |Ui ∪ R ∪ V0 | + |R ∪ V0 | ≤ 2ε1/3 n.

(8.46)

i=1

Inequality (8.42) implies that for every vertex v ∈ V , we have
|{F ∈ F η : v ∈ τ η ({zF1 , zF2 })}| ≤ n2/3 .

(8.47)

Step 5. Covering the remaining edges in V \ A. Recall that E(G∗3 ) is precisely the total
set of uncovered edges at this point. Next we pack the trees in T δ2 into G∗3 so that they cover
all edges in G∗3 [V \ A] and so that the packing is consistent with τ ′ ; that is, τ ′ prescribes the
image of the root yT of every tree T ∈ T δ2 . Lemma 7.2 is the main tool for this step.
More precisely, we will sequentially construct functions τ1δ2 , . . . , τ δ2 which are consistent with
τ ′ and such that τIδ2 packs TIδ2 into G∗3 . For I ∈ [D̂], let
G∗3,I := G∗3 [AI ∪ BI ] −

I−1
[

D̂

E(τIδ′2 (TIδ′ 2 )).

I ′ =1

(Recall from (8.1) that AI = A ∩ U[D]\SI and BI = (U[D]\SI ∪ R) \ A.) We will construct the
functions τIδ2 such that they satisfy the following properties:
(Q2.1)I τIδ2 (T δ2 ) ⊆ G∗3,I ,
(Q2.2)I E(G∗3,I [BI ]) ⊆ E(τIδ2 (TIδ2 )), and
(Q2.3)I WT ∩ τIδ2 (T ) = ∅ for all T ∈ TIδ2 .
δ2
Assume that for some I ∈ [D̂] we have already defined τ1δ2 , . . . , τI−1
which are consistent with
δ2
′
′
τ and so that τI ′ satisfies (Q2.1)I ′ –(Q2.3)I ′ for each I < I. Recall from (8.43) that H13 = H12 .
By (8.4) and (8.40), we obtain for every vertex v ∈ BI that
X
1/2
dG∗3,I [AI ,BI ] (v) ≥ dH13 [AI ,BI ] (v) −
∆|FIδ′2 | ≥ δ1 |AI |/2 − D̂∆δ2 n ≥ δ1 |AI |/3. (8.48)
I ′ <I

Note that G′ [AI ]−E(G∗3,I ) consists of those edges of G′ [AI ] which have been used by the packing
so far. More precisely, (8.39), (8.43) and the fact that G∗3 [AI ] = G′3 [AI ] (see (g1)) together imply
S
δ2
δ2
that E(G′ [AI ] − E(G∗3,I )) is the union of the edges in G∗3 [AI ] − E(G∗3,I [AI ]) ⊆ I−1
I ′ =1 τI ′ (TI ′ )
and of E(G′ [AI ] − E(G′3 [AI ])) ⊆ E1 . Thus (8.4) and (8.38) imply that
1/2

∆(G′ [AI ] − E(G∗3,I )) ≤ ∆D̂δ2 n + εn ≤ γ 2 |AI |.
In a similar way, it follows that for each j ∈ [D], we have ∆(G′ [A ∩ Uj ] − E(G∗3 [A ∩ Uj ])) ≤ εn
and that ∆(G′ [AI ] − E(G∗3 [AI ])) ≤ εn. Using (g2), (U2) and Proposition 3.9, we conclude for
each j ∈ [D] that
G∗3 [AI ], G∗3,I [AI ] and G∗3 [A ∩ Uj ] are (γ 1/4 , p)-quasi-random.

(8.49)

42

FELIX JOOS, JAEHOON KIM, DANIELA KÜHN, AND DERYK OSTHUS

Note that for each v ∈ BI \ (V0 ∪ R), we have
≤

dG∗3,I ,BI (v)

dG∗3 ,BI (v)

(8.27),(g4),(U2)

≤

≤

(g2),(g3)

≤

dG3 ∪H23 ,BI (v) ≤ dG1 ∪H2 ,BI (v)

5
50δ22 n + δ2 |U[D]\SI | + |R|
3
2δ2 |AI ∪ BI |.

Moreover, for each v ∈ BI ∩ (V0 ∪ R), we have
(8.46)

dG∗3,I ,BI (v) ≤ dG∗3 ,BI (v) ≤ dG3 ∪H23 (v) ≤ 2ε1/3 n ≤ 2δ2 |AI ∪ BI |.
Thus
∆(G∗3,I [BI ]) ≤ 2δ2 |AI ∪ BI |.

(8.50)

We now wish to apply Lemma 7.2 with the following graphs and parameters.
object/parameter G∗3,I
playing the role of G

TIδ2
T

AI
A

|AI ∪ BI | Dε δ2 δ1 γ ∆ p yT
n
ε δ2 δ1 γ ∆ p yT

τ ′ |{yT } WT
τT′
WT

Observe that condition (c2.1) of Lemma 7.2 follows from (8.49), (c2.2) from (8.50), (c2.3) from
(8.48), (c2.4) from (8.4), (c2.5) from (8.13), (8.31) and (γ4), and (c2.6) from (8.32). Thus
Lemma 7.2 gives us a function τIδ2 which is consistent with τ ′ , packs TIδ2 into G∗3,I , and satisfies
(Q2.1)I –(Q2.3)I .
S
δ2
Assume now that for all I ∈ [D̂] we have defined such a function τIδ2 . Let τ δ2 := D̂
I=1 τI .
Note that for every edge uv ∈ E(G∗3 [V \A]), there exists (a smallest) I ′ ∈ [D̂] such that u, v ∈ BI ′ .
Thus (Q2.2)I ′ implies that uv ∈ τ δ2 (T δ2 ) and so
E(G∗3 [V \ A]) ⊆ τ δ2 (T δ2 ).

(8.51)

Property (Q2.3)I for all I ∈ [D̂], (8.30) and the fact that τ δ2 (TIδ2 ) ⊆ U[D]\SI ∪ R together ensure
that for each F ∈ F δ2 , we have τ δ2 (F − V (F̃ )) ∩ τ̃ (F̃ ) = ∅. Together with (γ5) this means that
τ̃ ∪ τ δ2 packs the forests in F δ2 into G ∪ G′ ∪ H1 ∪ H2 . We define
G4 := G3 − E(τ δ2 (T δ2 )),

G′4 := G′3 − E(τ δ2 (T δ2 )),

H14 := H13 − E(τ δ2 (T δ2 )) = H12 − E(τ δ2 (T δ2 ))

and H24 := H23 − E(τ δ2 (T δ2 )).

(8.52)

This follows on from the previous update in (8.43) and again tracks the current set(s) of leftover
edges. To track the total set of leftover edges, let
G∗4 := G4 ∪ G′4 ∪ H14 ∪ H24 = G∗3 − E(τ δ2 (T δ2 )).

(8.53)

(8.4)
1/2
∆(τ δ2 (T δ2 )) ≤ ∆|T δ2 | ≤ D̂∆δ2 n.

(8.54)

Note that

Thus by (8.49), (8.54), and Proposition 3.9 for every I ∈ [D̂] and j ∈ [D], we obtain
G∗4 [AI ] and G∗4 [A ∩ Uj ] are (γ 1/5 , p)-quasi-random.

(8.55)

By (g2), (g4), (8.27), (8.46), we have
4

1/2

∆((G4 ∪ G′ ∪ H24 )[Uj ∩ A, (Uj ∪ R) \ A]) ≤ δ2 n.
Thus together with (8.40), (8.54), and Proposition 3.9, we obtain that
1/3

G∗4 [Uj ∩ A, Uj \ A] and G∗4 [Uj ∩ A, (Uj ∪ R) \ A] are (δ2 , δ1 )-quasi-random.

(8.56)

Step 6. Resolving the parity. Note that by (8.51) and (8.53), in the current leftover graph
G∗4 every edge is incident to a vertex in A. We would like to cover the edges of G∗4 [A, V \ A]
via Lemma 7.4. For this, we first need to ensure for each v ∈ V \ A that the number of edges
incident to v which have not been covered yet is even. To achieve this, in this step we extend the

OPTIMAL PACKINGS OF BOUNDED DEGREE TREES

43

current packing by defining τ η (ℓcF ) for all c ∈ [2] and F ∈ F η . (Recall that by the end of Step 4
we have already defined the packing of {F − {ℓ1F , ℓ2F } : F ∈ F η }.) This will already resolve most
of the parity problems. Note that by (8.12), the total number of leaves of the form ℓcF is close
to n, so we do have sufficiently many of them for this purpose. We then define τ par which packs
T par into G ∪ G′ ∪ H1 ∪ H2 . This then takes care of the remaining (comparatively small) set of
parity problems. Recall that for each F ∈ F η , the vertex zFc denotes the neighbour of ℓcF in F .
For all i ∈ [D], let
Viodd := {v ∈ Ui \ A : dG∗4 (v) is odd}.
For any v ∈ Viodd , our aim is to find a tree F ∈ F η so that v can play the role of ℓcF in F . This
will ensure that the degree of v in the resulting remaining subgraph of G∗4 is even. Recall that
for all i ∈ [D], c ∈ [2] and F ∈ F i,η , as described in Step 4, τ η (zFc ) ∈ Ui ∩ A is the image of zFc
in our current packing.
Consider the set
Uiz := {(u, F, c) : u ∈ Ui ∩ A, u = τ η (zFc ), c ∈ [2], F ∈ F i,η }.
Thus (1 + γ 1/2 )|Ui \ A| ≥ 2|F i,η | = |Uiz | ≥ (1 − ε1/2 )|Ui \ A| by (8.34). We define a bipartite
graph H i with vertex partition (Uiz , Ui \ A) and edge set
E(H i ) := {(u, F, c)v : uv ∈ E(G∗4 ), c ∈ [2], v ∈
/ τ η (F ) ∪ WF , F ∈ F i,η }.
By (8.13) and (8.31), |F | + |WF | ≤ η 1/2 n for each F ∈ F i,η . This together with (8.56) implies
that for all (u, F, c), (u′ , F ′ , c′ ) ∈ Uiz with u 6= u′ , we have
1/3

1/3

dH i ((u, F, c)) = (1 ± δ2 )δ1 |Ui \ A| ± η 1/2 n = (1 ± 2δ2 )δ1 |Ui \ A|,
1/3

1/3

dH i ((u, F, c), (u′ , F ′ , c′ )) = (1 ± δ2 )δ12 |Ui \ A| ± 2η 1/2 n = (1 ± 2δ2 )δ12 |Ui \ A|.

(8.57)
(8.58)

1/3

By (8.47), the number of pairs (u, F, c), (u′ , F ′ , c′ ) with u = u′ is at most 2δ2 |Uiz |2 . Thus
1/3
(8.58) holds for all but at most 2δ2 |Uiz |2 pairs (u, F, c), (u′ , F ′ , c′ ) and hence Theorem 3.8
1/20
implies that H i is (δ2 , δ1 )-regular. Now Proposition 3.5 in turn implies that H i [Uiz , Viodd ]
1/20
contains a matching Mi of size at least |Viodd | − 2δ2 n.
Next we define τ η (ℓcF ) for all F ∈ F i,η . For each edge (u, F, c)v in Mi , let τ η (ℓcF ) := v. We
will now embed the remaining “unused” leaves ℓcF inside A using Proposition 3.21. In this way,
they do not affect the parity of the vertices outside A. Let E4′ := {uv : (u, F, c)v ∈ Mi , i ∈ [D]}.
Then
∆(E4′ ) ≤ n2/3

(8.59)

by (8.47) and the fact that dE4′ (v) ≤ 1 for any vertex v ∈ U[D] \ A. Note that
G∗4 [A ∩ Ui ] = (G∗4 − E4′ )[A ∩ Ui ].
For each i ∈ [D], let
Fimatch :={(F, c) : (u, F, c) ∈ Mi for some u ∈ A ∩ Ui },
Fiunmatch :={(F, c) : (F, c) ∈
/ Fimatch , F ∈ F i,η , c ∈ [2]}.
i , c ′ )} :=
Thus we have already defined τ η (ℓcF ) for all (F, c) ∈ Fimatch and i ∈ [D]. Let {(F1i , c1 ), . . . , (Fm
′
mi
i

c

Fiunmatch and let ui,j := τ η (zFji ) for all j ∈ [m′i ]. Then
j

(8.4)
m′i = |Fiunmatch | ≤ 2|F η | ≤ 2n.

(8.60)

Let Hi′index be the graph on [m′i ] such that jj ′ ∈ E(Hi′index ) if Fji = Fji′ . Then ∆(Hi′index ) ≤ 1.
Let
Wji := τ η (Fji ) ∪ WF i .
j

(8.61)

44

FELIX JOOS, JAEHOON KIM, DANIELA KÜHN, AND DERYK OSTHUS

Note that by (8.13) and (8.31), |Wji | ≤ 2∆ηn + ∆2 ≤ η 1/2 n. Since G∗4 [A ∩ Ui ] is (γ 1/5 , p)-quasirandom, by (8.55), and since ui,j ∈ A ∩ Ui , this implies that
(8.60)

dG∗4 ,A∩Ui (ui,j ) − |Wji | ≥ γ 2 n − η 1/2 n ≥ 3n2/3 + m′i /n2/3 + n2/3 .
We now apply Proposition 3.21 with the following parameters and graphs for each i ∈ [D].
object/parameter G∗4 [A ∩ Ui ] Hi′index n2/3 A ∩ Ui m′i n2/3 Wji ui,j
playing the role of
G
H
∆
A
m
s
Wj uj
(Condition (ii) of Proposition 3.21 follows from (8.47).) We obtain distinct edges ui,1 vi,1 , . . . , ui,m′i vi,m′i
/ Wji , and for each v ∈ A,
in G∗4 [A ∩ Ui ] such that for each j ∈ [m′i ], vi,j ∈
|{(i, j) : v = vi,j }| ≤ n2/3

(8.62)

and such that vi,j 6= vi,j ′ if Fji = Fji′ . Since A ∩ Ui are disjoint for different i ∈ [D], each
application of Proposition 3.21 gives us distinct edges.
c
c
For each i ∈ [D] and j ∈ [m′i ], let τ η (ℓFji ) := vi,j . Then τ η (ℓFji ) ∈
/ τ η (Fji ) by (8.61). In
c

j

3−c

j

addition, τ η (ℓFji ) 6= τ η (ℓF i j ). Altogether, this defines τ η (ℓcF ) for all F ∈ F η . Using (8.33) and
j

j

(Q1.1)i , it is easy to see that τ η ∪ τ̃ now packs F η into G ∪ G′ ∪ H1 ∪ H2 .
Let E4′′ := {ui,j vi,j : i ∈ [D], j ∈ m′i }. Let E4 := E4′ ∪ E4′′ , so (8.47), (8.59) and (8.62) imply
that
∆(E4 ) ≤ 3n2/3 .

(8.63)

In what follows, we use Lemma 7.3 and the trees in T par to adjust the parity of those vertices
in V \ A which were not involved in the above matching approach (in particular, we now also
adjust the parity of the vertices in R). Let
G∗5 := G∗4 − E4

(8.64)

and for each i ∈ [D], let
Vipar

:=



{u ∈ (Ui ∪ R) \ A : dG∗5 (u) is odd}
{u ∈ Ui \ A : dG∗5 (u) is odd}
1/20

if i = 1,
if i =
6 1.
1/20

As |R| = εn and |Viodd | − |Mi | ≤ 2δ2 n, this implies that |Vipar | ≤ 3δ2 n. Let G51 :=
G∗5 [A ∩ U1 , (U1 ∪ R) \ A] and G5i := G∗5 [A ∩ Ui , Ui \ A] for i ≥ 2. For each i ∈ [D], we let
{u′i,1 , . . . , u′i,m′′ } := Vipar .
i

Observe that (8.56) and (8.63) imply dG5 ,A∩Ui (u′i,j )≥δ12 n ≥ 3 + m′′i /n2/3 + n2/3 . Let H consist
i
of m′′i isolated vertices. We can apply Proposition 3.21 with the following parameters and graphs.
object/parameter G5i H 1 A ∩ Ui m′′i n2/3 ∅ u′i,j
playing the role of G H ∆
A
m
s
Wi uj
′ : j ∈ [m′′ ]} in G5 such that ∆(E i ) ≤ n2/3 and
We obtain a set of distinct edges E5i := {u′i,j vi,j
5
i
i
dE i (u) = 1 for all u ∈ Vipar . Furthermore,
5

1/20

|E5i | = |Vipar | ≤ 3δ2

n ≤ δ12 n.

(8.65)

Now we wish to extend each e ∈ E5i into a tree from T i,par such that all other edges of this
tree lie in A (note that it is not possible to proceed in this way for Viodd directly as |Viodd | may
be much larger than |T i,par |). To achieve this, for each i ∈ [D], we apply Lemma 7.3 with the
following graphs and parameters. Let U1′ := U1 ∪ R and Ui′ := Ui for i ≥ 2. (Recall that τ ′ (yT )
was defined in Step 3 and the domain of τ ′ on T ∈ T i,par is exactly {yT }.)

OPTIMAL PACKINGS OF BOUNDED DEGREE TREES

45

object/parameter G∗5 [A ∩ Ui ] ∪ E5i T i,par γ
Ui′
ε
δ1
playing the role of
G
T
γ V (G)
ε
δ1
′
object/parameter
A ∩ Ui
p
∆
yT
τ |{yT } WT
playing the role of
A
p
∆
yT
τT′
WT
Note that (8.55) and (8.63) together with Proposition 3.9 imply condition (c3.1) of Lemma 7.3,
and (8.51) implies (c3.2), (8.65) and (8.4) imply (c3.3), and (8.13), (8.31) and (γ3) imply (c3.4).
Condition (c3.5) holds because of (8.32) and (γ2). Thus Lemma 7.3 gives a function τipar packing
T i,par into G∗5 [A ∩ Ui ] ∪ E5i which is consistent with τ ′ and satisfies E5i ⊆ E(τipar (T i,par )) and
S
par
τipar (T ) ∩ WT = ∅ for every T ∈ T i,par . We let τ par := D
i=1 τi . Note that
(8.4)
∆(τ par (T par )) ≤ ∆|T par | ≤ D̂∆γ∗ n.

(8.66)

Moreover, using (8.33) and (γ5) it is easy to see that τ̃ ∪ τ par packs F par into G ∪ G′ ∪ H1 ∪ H2 .
Let
G∗6 := G∗5 − E(τ par (T par )) = G∗4 − E4 − E(τ par (T par )).

(8.67)

After the updates in (8.53) and (8.64), G∗6 consists of the current set of leftover edges in G ∪
G′ ∪ H1 ∪ H2 . Note that by (8.55), (8.63), (8.66), and Proposition 3.9 for each I ∈ [D̂],
G∗6 [AI ] is (γ 1/6 , p)-quasi-random.

(8.68)

By construction every vertex in V \ A has even degree in G∗6 .
Step 7. Covering the edges between A and V \ A. We finally complete the proof by
covering the edges in G∗6 [A, V \ A] (i.e. all remaining edges between A and V \ A) by the trees
in T δ1 . Again, we embed the trees sequentially according to the order T1δ1 , . . . , T δ1 . Assume
D̂

δ1
that for some I ∈ [D̂] we have already defined functions τ1δ1 , . . . , τI−1
such that for all I ′ < I,
the function τIδ′1 packs TIδ′ 1 into G6I ′ , where

G6I ′

:=

G∗6

−

′ −1
I[

E(τIδ′′1 (TIδ′′1 )).

I ′′ =1

Recall from (8.1) that BI = (U[D]\SI ∪ R) \ A. Note that (g2) implies G6I [AI , BI ] ⊆ G1 ∪ H1 ∪ H2 .
Thus (8.27), (8.46), (g3), (g4) and (U2) imply that
∆(G6I [AI , BI ]) ≤ 2δ1 |AI ∪ BI |.

(8.69)

In addition, G6I [AI ] is (γ 1/7 , p)-quasi-random by (8.68), Proposition 3.9 and the fact that
∆(

I−1
[

I ′ =1

(8.4)

τIδ′1 (TIδ′ 1 )) ≤ ∆|F δ1 | ≤ ∆D̂γ∗ n ≤ γn.

Now for each I ∈ [D̂], we apply Lemma 7.4 with the following graphs and parameters.
object/parameter G6I [AI ∪ BI ] TIδ1
playing the role of
G
T

AI
A

δ1 γ ∆ p yT
δ1 γ ∆ p yT

τ ′ |{yT } WT
τT′
WT

ε
ε

Observe that condition (c4.1) of Lemma 7.4 holds since G6I [AI ] is (γ 1/7 , p)-quasi-random, (8.51)
implies (c4.2), (8.69) implies (c4.3), (8.4) implies (c4.4), (8.13), (8.31), and (γ4) imply (c4.5), and
(8.32) and (γ2) give us (c4.6). Lemma 7.4 provides a function τIδ1 packing TIδ1 into G6I [AI ∪ BI ]
which is consistent with τ ′ and satisfies
(Q4.1)I dG6 ,AI (v) ≤ 1 for every v ∈ BI ,
I+1

(Q4.2)I WT ∩ τIδ1 (T ) = ∅ for every T ∈ TIδ1 , and
(Q4.3)I dG6 ,A (v) − dG6 ,A (v) is even for all v ∈ V \ A.
I

I+1

46

FELIX JOOS, JAEHOON KIM, DANIELA KÜHN, AND DERYK OSTHUS

Indeed, to check (Q4.3)I note that for all v ∈ BI we have dG6 ,A\AI (v) = dG6 ,A\AI (v), that
I+1
I
dG6 ,AI (v) − dG6 ,AI (v) is even by (C4.3) of Lemma 7.4, and that for all v ∈ (V \ A) \ BI we
I
I+1
have dG6 ,AI (v) = dG6 ,AI (v).
I+1
I
SD̂
δ
1
Let τ := I=1 τIδ1 , then τ δ1 packs T δ1 into G∗6 and is consistent with τ ′ . Moreover, recall
that AI ∪ BI = U[D]\SI ∪ R. This together with (γ5), (8.30), and (Q4.2)I implies that τ̃ ∪ τ δ1
packs F δ1 into G ∪ G′ ∪ H1 ∪ H2 .
Let
G∗7 := G∗6 − E(τ δ1 (T δ1 )) = G6D̂+1 .

(8.70)

After the previous update in (8.67), this is the (final) set of edges left over by the packing we
defined so far. We claim that for all v ∈ V \ A, we have dG∗7 (v) = 0. Assume for a contradiction
that there is a vertex v ∈ V \ A, with dG∗7 (v) > 0. Thus dG∗7 ,A (v) > 0 by (8.51). Moreover,
dG∗7 ,A (v) ≥ 2, since v has even degree in G∗6 = G61 and (Q4.3)I holds for all I ∈ [D̂]. Let
i, i′ , i∗ ∈ [D] be such that v ∈ Ui ∪ R, and v has a neighbour in Ui′ ∩ A and another neighbour in
Ui∗ ∩A in G∗7 . Consider I ∈ [D̂] such that SI ⊆ [D]\{i, i′ , i∗ }. Then dG6 ,AI (v) ≥ dG∗7 ,AI (v) ≥ 2,
I+1
which is a contradiction to (Q4.1)I and proves the claim. (This is the point where we use that
|SI | = D − 3.)
We define φ := τ̃ ∪ τ η ∪ τ δ1 ∪ τ δ2 ∪ τ par . Thus φ packs F into G ∪ G′ ∪ H1 ∪ H2 . The
above claim and (g1) imply (Φ1). Since the sequence of all updates of the leftover edges is
given by (8.26), (8.39), (8.43), (8.52), (8.53), (8.64), (8.67), and (8.70), we have E(G′ ∩ φ(F)) ⊆
E1 ∪ E4 ∪ (τ δ1 ∪ τ δ2 ∪ τ par )(T γ∗ ). As |T γ∗ | ≤ 3D̂γ∗ n by (8.5), we conclude by (8.38) and (8.63)
that each v ∈ A satisfies
1/2

dG′ ∩φ(F ) (v) ≤ dE1 (v) + dE4 (v) + ∆|T γ∗ | ≤ εn + 3n2/3 + 3D̂∆γ∗ n ≤ γ∗ |A|.
This implies (Φ2). Note that here we make crucial use of the fact that when we packed the
collection of forests which contain many trees (i.e. F̃ and F η ) we did not use any edges of
G′ .

Recall that the aim of Step 2 was to find a near-optimal packing of trees which cover most of
the edges of G. Since G is quasi-random one could directly apply the results of [19] to achieve
this. In other words, it would seem much more straightforward to apply Theorem 10.2 from [19]
directly to obtain such a packing, rather than proving and applying the results in Section 6–
8, which are based on more technical results from [19] and on Szemerédi’s regularity lemma.
However, the seemingly more straighforward approach would lead to the leftover density after
Step 2 being too large (compared to that of H1 and H2 ) for the remaining steps to be feasible.
9. Orientations with regular outdegree
The following lemma states that every quasi-random graph has an “out-regular” orientation
if the average degree is an even integer. We will need Lemma 9.1 at the very end of the proof of
our main theorem where we need to embed only a single leaf for each tree in a given collection of
trees. It will turn out that such an “out-regular” orientation of the remaining uncovered graph
¯
G will give rise to a valid embedding. We use d(G)
to denote the average degree of a graph G.
Lemma 9.1. Suppose n, d¯ ∈ N and 1/n ≪ β ≪ p ≤ 1. If G is a (β, p)-quasi-random graph on
¯
¯ then G has an orientation such that every vertex has exactly d¯
n vertices such that d(G)
= 2d,
outneighbours.
Proof. We start by introducing for any graph H a function Z(H) which measures the distance
¯
of the degree sequence of H to a d(H)-regular
degree sequence. We define
X
¯
Z(H) :=
|d(v) − d(H)|.
v∈V (H)

OPTIMAL PACKINGS OF BOUNDED DEGREE TREES

47

Since G is (β, p)-quasi-random, we have ∆(G) − δ(G) ≤ 2pβn and thus Z(G) ≤ 2pβn2 . We
iteratively construct a sequence of graphs G = G0 ⊇ G1 ⊇ . . . ⊇ Gs (for some s ∈ N ∪ {0}) such
that Gs is regular and for all j ∈ [s] the following hold:
¯ j ) = 2(d¯ − j),
(D1)j d(G
(D2)j ∆(Gj ) − δ(Gj ) ≤ ∆(Gj−1 ) − δ(Gj−1 ) and Z(Gj ) ≤ Z(Gj−1 ),
(D3)j ∆(Gj ) − δ(Gj ) ≤ ∆(Gj−1 ) − δ(Gj−1 ) − 1 or Z(Gj ) = Z(Gj−1 ) − p2 n/2,
(D4)j Gj−1 − E(Gj ) has an orientation such that every vertex has outdegree 1, and
(D5)j ∆(Gj−1 − E(Gj )) ≤ 3.
Having defined such a sequence G = G0 ⊇ G1 ⊇ . . . ⊇ Gs , by (D1)s the graph Gs is Eulerian and
so has an Eulerian circuit W . By orienting W consistently and orienting edges in Gj−1 − E(Gj )
as in (D4)j for each j ∈ [s], this leads to the desired orientation of G.
Note that (D1)0 trivially holds and we view (D2)0 –(D5)0 as being vacuously true. Suppose
that for some i ≥ 0 we have already defined graphs G0 , . . . , Gi such that (D1)j –(D5)j hold for
all j ≤ i. By (D2)j and (D3)j for every j ≤ i, we conclude that
i ≤ (p2 n/2)−1 Z(G) + (∆(G) − δ(G)) ≤ 4βp−1 n + 2pβn ≤ 6βp−1 n.

(9.1)

If Gi is regular, then set s := i. Suppose next that Gi is not regular. We show how to define
Gi+1 .
The fact that (D5)j holds for all j ≤ i, together with (9.1) implies that dGi (v) ≥ dG (v) − 3i ≥
dG (v) − 18βp−1 n. Thus Gi is (β 1/2 , p)-quasi-random by Proposition 3.9, and hence (β 1/12 , p/2)dense, by Proposition 3.10.
Let U be the set of vertices of maximum degree in Gi and let V be the set of vertices of
minimum degree in Gi . Let t := min{|U |, |V |, p2 n/4}. Let U ′ := {u1 , . . . , ut } ⊆ U and V ′ :=
{v1 , . . . , vt } ⊆ V . Because Gi is (β 1/2 , p)-quasi-random and thus dGi (u, v) ≥ (1 − β 1/2 )p2 n ≥ 3t
for all u, v ∈ V (Gi ), there is a set W ′ := {w1 , . . . , wt } ⊆ V (G) \ (U ′ ∪ V ′ ) such that Pj := uj wj vj
is a path in Gi for all j ∈ [t].
As Gi is (β 1/12 , p/2)-dense, by Proposition 4.3, the graph G′ := Gi − (V ′ ∪ W ′ ) is a robust
(pβ 1/12 /2, 4β 1/12 )-expander and δ(G′ ) ≥ (1 − β 1/2 )pn − 2t ≥ pn/3. Thus, by Theorem 4.1, G′
S
has a Hamilton cycle C. Let Gi+1 := Gi − E(C) − tj=1 E(Pj ). It is easy to see that Gi+1
satisfies (D1)i+1 , (D4)i+1 and (D5)i+1 .
¯ i ) ≤ ∆(Gi ) − 1.
As, by (D1)i , the average degree of Gi is an integer, we have δ(Gi ) + 1 ≤ d(G
Moreover, (D1)i+1 implies d(Gi+1 ) = d(Gi ) − 2. It is easy to check that together with our
¯ i )| ≥ |dG (v) − d(G
¯ i+1 )| for all v ∈ V (G),
construction of Gi+1 this implies that |dGi (v) − d(G
i+1
and hence (D2)i+1 follows.
If t = min{|U |, |V |}, then ∆(Gi+1 ) − δ(Gi+1 ) ≤ ∆(Gi ) − δ(Gi ) − 1 holds and if t = p2 n/4,
then Z(Gi+1 ) = Z(Gi ) − p2 n/2. Thus we have (D3)i+1 . This completes the construction of Gi+1
satisfying (D1)i+1 –(D5)i+1 .

10. Proof of Theorem 1.7
In this section we prove Theorem 1.7. In Section 10.1 we first state and prove Theorem 10.1
(which is weaker than Theorem 1.7). We extend Theorem 10.1 to Theorem 1.7 in Section 10.2
by combining it with a result from [19].
10.1. Optimal tree packing.
Theorem 10.1. For all ∆ ∈ N and δ > 0, there exist N ∈ N and ε > 0 such that for all n ≥ N
the following holds. Suppose G is an (ε, p)-quasi-random graph on n vertices and T a set of
trees satisfying
(i) ∆(T ) ≤ ∆ and δn ≤ |T | ≤ (1 − δ)n for all T ∈ T ,
(ii) |T | ≥ (1/2 + δ)n, and
(iii) e(T ) = e(G).
Then T packs into G.

48

FELIX JOOS, JAEHOON KIM, DANIELA KÜHN, AND DERYK OSTHUS

Note that the conditions of the theorem imply that p ≥ δ.
We will use an iterative approach for the proof of Theorem 10.1. As explained earlier, in
each iteration step, we will apply Lemma 8.1 to cover most of the current leftover graph with
forests. To this end, we introduce a vortex of a quasi-random graph (a similar notion was already
introduced in [13] to underpin the iterative absorption process carried out there). Suppose G
is an (ε, p)-quasi-random graph on n vertices and 1/n ≪ ε ≪ γ ≪ p. A γ-vortex of G is a
collection of vertex sets A0 , . . . , AΛ , R0 , . . . , RΛ−1 such that
(V1) AΛ ⊆ . . . ⊆ A0 = V (G),
(V2) |Ai | = ⌊γ i n⌋ =: ni ,
(V3) nΛ ≤ n1/3 and Λ is minimal with respect to this,
(V4) Ri ⊆ Ai \ Ai+1 and |Ri | = ⌊εni ⌋ for every i ∈ {0, . . . , Λ − 1},
(V5) dG,Ai (u) = (1 ± 3ε/2)p|Ai | and dG,Ai (u, v) = (1 ± 3ε/2)p2 |Ai | for all i ∈ {0, . . . , Λ} and
all distinct u, v ∈ V (G), and
(V6) dG,Ri (u) = (1 ± 2ε)p|Ri | and dG,Ri (u, v) = (1 ± 2ε)p2 |Ri | for every i ∈ {0, . . . , Λ − 1} and
all distinct u, v ∈ V (G).
Is is not difficult to see that G has a γ-vortex, as the following random process produces
a γ-vortex with probability, say, at least 1/2. Let Λ and ni be defined as in (V2) and (V3).
Consider a random partition (U0 , . . . , UΛ ) such that |UΛ | = nΛ and |Ui | = ni − ni+1 for every
S
i ∈ {0, . . . , Λ − 1}. Let Ai := Λ
j=i Uj . Then (V1)–(V3) hold. Lemma 3.2 shows that (V5) holds
with probability at least 1/2. Now it is easy to construct a γ-vortex of G, as we only need to
find suitable sets Ri . Indeed, random sets R0 , . . . , RΛ−1 where Ri ⊆ Ui and |Ri | = ⌊εni ⌋ have
the desired properties with probability at least 1/2, by Lemma 3.2. In particular, such sets exist
and (V6) holds.
We make the following observations, which follow directly from the definition of a vortex:
• for each i ∈ [Λ], the bipartite graph G[Ai−1 \ Ai , Ai ] is (2ε, p)-quasi-random, and
• G[Ai−1 ] − E(G[Ai ]) is (γ 3/4 , p)-quasi-random by Proposition 3.9.
When applying Lemma 8.1 in the proof of Theorem 10.1, Ai+1 will play the role of A and Ri
the role of R.
Proof of Theorem 10.1. First, we choose the following constants:
0 < 1/N ≪ ε ≪ δ2 ≪ δ1 ≪ γ∗ ≪ γ ≪ β ≪ δ, 1/∆.
In view of the statement of Theorem 10.1, we may assume 1/∆ ≤ δ/2 by increasing the value of
∆ if necessary. Let G be a graph satisfying the conditions of Theorem 10.1. As observed above,
p ≥ δ and G contains a γ-vortex A0 , . . . , AΛ , R0 , . . . , RΛ−1 .
Note that for all distinct i, j ∈ {0, . . . , Λ − 1}, the graphs G[Ai ] − E(G[Ai+1 ]) and G[Aj ] −
E(G[Aj+1 ]) are edge-disjoint. For every i ∈ {0, . . . , Λ − 1}, we decompose G[Ai ] − E(G[Ai+1 ])
into three spanning subgraphs Gi , H1i , H2i such that
(H1)i H1i is a (4ε, δ1 )-quasi-random bipartite graph with vertex partition (Ai \ Ai+1 , Ai+1 ),
(H2)i dH i (u) ≤ 3δ2 ni /2 and dH i (u, v) ≥ 2δ22 ni /3 for any two vertices u, v ∈ Ai ,
2

2

(H3)i Gi is (γ 1/2 , p)-quasi-random and if i ≤ Λ − 2, then dGi ,Ri+1 (v) ≥ p|Ri+1 |/2 for any vertex
v ∈ Ai \ Ai+1 , and in addition, if i = 0, then dG0 ,R0 (v) ≥ pεn/2 for all v ∈ V (G), and
(H4)i Ai+1 is an independent set in H1i ∪ H2i ∪ Gi .
It is not difficult to see that such a decomposition exists. Indeed, if we assign any edge in
G[Ai \ Ai+1 , Ai+1 ] to H1i with probability δ1 /p, to H2i with probability δ2 /p, and to Gi with
probability 1 − (δ1 + δ2 )/p and any edge in G[Ai \ Ai+1 ] to H2i with probability δ2 /p, and to Gi
with probability 1 − δ2 /p, then we obtain graphs satisfying these conditions, with probability at
least 1/2.
Let GΛ := G[AΛ ]. Before we proceed with an inductive argument, we carry out the following
preparation step.
Preparation step. We will first remove a leaf from those trees which will play a role in the
final absorbing step and embed the remainder of these trees into G0 in a suitable way. For this,

OPTIMAL PACKINGS OF BOUNDED DEGREE TREES

49

let tΛ be an integer such that
tΛ nΛ = e(G[AΛ ]) − 3γ∗2 n2Λ−1 ± nΛ−1 ,

(10.1)

T ∗ := {T1∗ , . . . , Tt∗Λ nΛ } ⊆ T .

(10.2)

and consider an arbitrary collection of trees

Let ℓ∗i be a leaf of Ti∗ and zi∗ be the unique neighbour of ℓ∗i in Ti∗ . For each i ∈ [tΛ nΛ ], let T∗,i :=
− ℓ∗i and T∗ := {T∗,1 , . . . , T∗,tΛ nΛ }. Let v1∗ , . . . , vt∗Λ nΛ be a sequence of not necessarily distinct
vertices such that every vertex in AΛ appears in the sequence exactly tΛ times. We sequentially
construct functions φT∗,i which pack T∗,i into G0 [(A0 \ A1 ) ∪ {vi∗ }] such that φT∗,i (zi∗ ) = vi∗ . (The
embedding of ℓ∗1 , . . . , ℓ∗tΛ nΛ will be deferred until the final step.) Assume that for some i ∈ [tΛ nΛ ]
we already have constructed φT∗,1 , . . . , φT∗,i−1 , and let
Ti∗

G(i) := G0 [(A0 \ A1 ) ∪ {vi∗ }] −

i−1
[

j=1

E(φT∗,j (T∗,j )).

Note that |T∗,i | ≤ (1 − δ)n ≤ (1 − γ)n + 1 = |(A0 \ A1 ) ∪ {vi∗ }|. For any v ∈ V (G(i)), we have
dG0 (v) − dG(i) (v) ≤ |A1 | + ∆tΛ nΛ ≤ 2γn and hence G(i) is (γ 2/5 , p)-quasi-random by (H3)0 and
Proposition 3.9. Thus we can apply Lemma 3.20 to obtain φT∗,i such that
φT∗,i (zi∗ ) = vi∗ and φT∗,i (T∗,i ) ⊆ (A0 \ A1 ) ∪ {vi∗ }.

(10.3)

Repeating this process for every i ∈ [tΛ nΛ ] gives rise to functions {φT∗,i }i∈[tΛ nΛ ] . We define
φ−1 := φT∗,1 ∪ . . . ∪ φT∗,tΛ nΛ and
G∗,0 := G0 − E(φ−1 (T∗ )).

(10.4)

Then G∗,0 is (γ 1/3 , p)-quasi-random as

dG0 (v) − dG∗,0 (v) ≤ ∆tΛ nΛ ≤ n3/4

(10.5)

for all v ∈ V (G∗,0 ). Similarly, G∗,0 [A0 \ A1 ] is also (γ 1/3 , p)-quasi-random.
For each tree T ∈ T \ T ∗ , we select an edge eT = rT1 rT2 such that T − eT consists of two
components of size at least δn/(2∆) ≥ n/∆2 (it is easy to see that such an edge exists). We also
select |T \T ∗ | arbitrary edges {e′T : T ∈ T \T ∗ } in G∗,0 [R0 ] such that ∆({e′1 , . . . , e′|T \T ∗ | }) ≤ ε−2 .
By (10.5) and (H3)0 we can greedily select these edges. Next we define φ′−1 by φ′−1 (eT ) := e′T
for all T ∈ T \ T ∗ . We also extend φ−1 be setting φ−1 (eT ) := φ′−1 (eT ). Let FT0 := T − eT . We
view the endvertices of eT as the roots of FT0 . Define
F 0 := {FT0 : T ∈ T \ T ∗ },

G′0 := G∗,0 − {e′T : T ∈ T \ T ∗ } and G′′0 := G0 − E(G′0 ). (10.6)

We point out that G′0 is (β 2 , p)-quasi-random.
We say a function ψ packs a family H of graphs perfectly into a graph H if ψ packs H and
every edge of H is covered. Thus
φ−1 packs T∗ ∪ {eT : T ∈ T \ T ∗ } perfectly into G′′0 .

G′′0

(10.7)
G′0

denotes the
consists of the edges of G0 that have been covered in this step and
Thus
(uncovered) leftover of G0 . Moreover, assumption (iii) of Theorem 10.1 implies that
e(F 0 )

=

e(T ) − e(T ∗ ) − |T \ T ∗ |

=

(e(G0 ) + e(H10 ) + e(H20 ) + e(G[A1 ])) − (e(T∗ ) + tΛ nΛ ) − |T \ T ∗ |

(10.6),(10.7)

=

e(G′0 ) + e(H10 ) + e(H20 ) + e(G[A1 ]) − tΛ nΛ .

This completes the Preparation step.
We proceed with an inductive approach. We will define a packing of F 0 step by step. In the
tth step we will be given a collection F t consisting of those subforests of the forests F 0 which
(apart from their roots) are not embedded yet. For each F ∈ F t we will embed either a part of
F or the entire forest F in such a way that all the edges of G − E(G′′0 ) incident to a vertex in
At \ At+1 are covered. The key tool for this is Lemma 8.1. In the (t + 1)th step we will then

50

FELIX JOOS, JAEHOON KIM, DANIELA KÜHN, AND DERYK OSTHUS

continue with the collection F t+1 consisting of all those subforests which are still not embedded
yet. We will denote by φt the packing of the subforests defined by the end of Step t. The roots
of each F ∈ F t+1 will already be embedded into Rt+1 ⊆ At+1 \ At+2 by φt (but as described
above, no other vertex of F will be embedded yet).
More precisely, for each 0 ≤ t ≤ Λ, we will define a packing φt−1 and a collection F t of rooted
forests so that the following hold:
(E1)t There is a (β 2 , p)-quasi-random spanning subgraph G′t of Gt and if t ≤ Λ − 2, then G′t
satisfies dG′t ,Rt+1 (v) ≥ p|Rt+1 |/5 for any vertex v ∈ At \ At+1 .
(E2)t If t = Λ, then F t = ∅, and if t ≤ Λ−1, then F t consists of rooted subforests of the forests
in F 0 and |F t | ≥ (1/2 + 1/∆)nt . Moreover, each F ∈ F t satisfies |F | ≤ (1 − 1/∆)nt and
consists of two components (KF1 , rF1 ), (KF2 , rF2 ) with |KF1 |, |KF2 | ≥ p∆−3 nt /5.
(E3)t For each F ∈ F t , no vertex of F −{rF1 , rF2 } is embedded by φt−1 and φt−1 (rF1 ), φt−1 (rF2 ) ∈
Rt . Let φ′t−1 : {rFc : c ∈ [2], F ∈ F t } → Rt be defined by φ′t−1 (rFc ) := φt−1 (rFc ). Then
−2 for every v ∈ R .
|φ′−1
t
t−1 (v)| ≤ ε
(E4)t For each F ∈ F t , let F orig be the unique forest in F 0 with F ⊆ F orig . Let F 0,t be the
collection of all those F ′ ∈ F 0 for which F t does not contain a subforest of F ′ . If t ≥ 1,
then φt−1 is consistent with φt−2 and packs F 0,t ∪ {F orig − (V (F ) \ {rF1 , rF2 }) : F ∈ F t }
perfectly into
(Gt −

E(G′t ))

∪

t−1
[
i=1

Gi ∪

t−1
[

(H1i ∪ H2i ) ∪ G′0 = (Gt − E(G′t )) ∪ (G − E(G[At ] ∪ G′′0 )).

i=0

Moreover, for each F ∈ F t we have At ∩ φt−1 (F orig − V (F )) = ∅.
(E5)t If t ≤ Λ − 1, then e(F t ) = e(G′t ) + e(H1t ) + e(H2t ) + e(G[At+1 ]) − tΛ nΛ .
Note that (E1)0 –(E5)0 hold. (To check (E2)0 , note that |T ∗ | = tΛ nΛ ≤ n3/4 and recall that
1/∆ ≤ δ/2.) Hence suppose that 0 ≤ t ≤ Λ − 1 and that we have defined φt−1 and F t
satisfying (E1)t –(E5)t . Our aim of Step t is to show that there is a function φt consistent with
φt−1 and for all F ∈ F t there is a subforest F ∗ ⊆ F so that (E1)t+1 –(E5)t+1 hold, where
F t+1 := {F − V (F ∗ ) : F ∈ F t }. In particular, for each F ∈ F t , the function φt will embed F ∗
as well as the two roots of F − V (F ∗ ) into G′t ∪ H1t ∪ H2t ∪ Gt+1 , but will embed no other vertices
of F − V (F ∗ ). For some of the F ∈ F t we will have F = F ∗ . Those forests F will be embedded
in Step t.2, while the part F ∗ of all those F with F 6= F ∗ will be embedded in Step t.1.
Note that F 0,t consists of those forests in F 0 which have been completely embedded prior to
Step t.1. Also we remark that G′t is the subgraph of Gt which has not been covered prior to
Step t.1. The graphs G′t , H1t , and H2t will be covered entirely in Step t.
Step t.1. If t = Λ − 1, let F := F t , F Λ := ∅ and GΛ−1 := G′Λ−1 . Then (10.1) and (E5)Λ−1
imply
e(F) = e(F Λ−1 ) = e(GΛ−1 ) + e(H1Λ−1 ) + e(H2Λ−1 ) + 3γ∗2 n2Λ−1 ± nΛ−1 .

(10.8)

|F| ≥ (1/2 + 1/∆)nt − ∆2 γnt ≥ (1/2 + 1/(2∆))nt .

(10.9)

We proceed to Step t.2.
From now on we assume that t < Λ − 1. In what follows we prepare the set F t+1 for the
next iteration step. For this, we choose an arbitrary sub-collection F ′ ⊆ F t of ∆2 γnt = ∆2 nt+1
forests and let F := F t \ F ′ . Then
F t+1

will consist of
The forests in F will be embedded in Step t.2. via Lemma 8.1, and
′
∗
subforests of the forests in F . The set F of remaining subforests of the forests in F ′ will be
embedded greedily in the current Step t.1. In particular, we will have F 0,t+1 = F 0,t ∪ F, where
F 0,t is as defined in (E4)t . Since t < Λ − 1, (V5) and (10.1) give us
e(G[At+1 ]) − tΛ nΛ = (1 ± γ 1/2 )pn2t+1 /2 − tΛ nΛ = (1 ± γ 1/3 )pn2t+1 /2.
Thus
β ′ :=

pnt+1
γp
e(G[At+1 ]) − tΛ nΛ − 3γ∗2 n2t
= (1 ± γ 1/4 ) 2 = (1 ± γ 1/4 ) 2 .
′
nt |F |
2∆ nt
2∆

OPTIMAL PACKINGS OF BOUNDED DEGREE TREES

51

By Proposition 6.4 with and β ′ , p∆−3 /5, nt playing the roles of β, α, n, we can find a subforest
F̃ of each F ∈ F ′ such that
(P1) both F̃ and F ∗ := F − V (F̃ ) consist of two components,
(P2) each component of F̃ has size between ∆−3 pnt+1 /5 and ∆−1 pnt+1 , and
(P3) F̃ does not contain rF1 or rF2 .
P
(P4) Moreover, let F t+1 := {F̃ : F ∈ F ′ }. Then e(F t+1 ) =
F ∈F ′ e(F̃ ) = e(G[At+1 ]) −
tΛ nΛ − 3γ∗ n2t ± nt .
Note that (E2)t implies that for all F ∈ F ′ , we have
|F ∗ | ≤ |F | ≤ (1 − 1/∆)nt .

(10.10)

For each F ∈ F ′ and c ∈ [2], let rF̃c be the unique vertex of F̃ in the component of F containing
rFc which is adjacent to a vertex in V (F ∗ ) in F . Note that (P2) implies that F t+1 satisfies
(E2)t+1 with rF̃c playing the role of rFc . For every c ∈ [2], let xcF be the unique neighbour of rF̃c
in V (F ∗ ) in F .
∗ }. Note that
Let {F1 , . . . , Fm } := F ′ and F ∗ := {F ∗ : F ∈ F ′ } = {F1∗ , . . . , Fm
e(F ′ ) = e(F ∗ ) + e(F t+1 ) + 2m.

(10.11)

Recall from (E2)t that rF1 i and rF2 i are the roots of Fi and thus, by (P3), the roots of Fi∗ . In
what follows, for all i ∈ [m], we construct embeddings φFi∗ satisfying the following:
(Q1)i φF1∗ ∪ · · · ∪ φFi∗ packs {F1∗ , . . . , Fi∗ } into G′t [At \ At+1 ] such that φFj∗ is consistent with
φ′t−1 for all j ∈ [i], and
(Q2)i p(v, i) ≤ ε−2 for any v ∈ At \ At+1 , where p(v, i) := |{j ∈ [i] : v ∈ φFj∗ ({x1F ∗ , x2F ∗ })}|.
j

(Q3)i φFi∗ (Fi∗ ) ∩ Rt = {φ′t−1 ({rF1 i , rF2 i })}.

j

Assume for all j < i we have constructed φj satisfying (Q1)j –(Q3)j . Now we construct φFi .
Recall that
m = |F ′ | = ∆2 γnt = ∆2 nt+1 .

(10.12)

Let
B := {v ∈ At \ (At+1 ∪ Rt ) : p(v, i − 1) > ε−2 − 1}.
Hence |B| ≤ |F ′ |/ε−1 = ε∆2 γnt ≤ εnt . Define
G′t (i) := G′t [At \ (At+1 ∪ B ∪ (Rt \ {φ′t−1 ({rF1 i , rF2 i })}))] −

i−1
[

E(φFj∗ (Fj∗ )).

j=1

Note that
∆(

i−1
[

E(φFj∗ (Fj∗ ))) ≤ ∆m = ∆3 γnt .

(10.13)

j=1

Thus G′t (i) is (β 3/2 , p)-quasi-random by (E1)t and Proposition 3.9. In addition, (V2), (V4) and
(10.10) imply |G′t (i)| ≥ (1 − γ − 2ε)nt ≥ |Fi∗ |. So we can apply Lemma 3.20 (with {rF1 i , rF2 i }
playing the role of I) to obtain a function φFi∗ packing Fi∗ into G′t (i) which is consistent with
φ′t−1 . Thus (Q1)i and (Q3)i hold, and (Q2)i follows from the definition of B and (E3)t .
By repeating this procedure for every i ∈ [m], we obtain a collection of functions {φFi∗ }i∈[m]
satisfying (Q1)i –(Q3)i for every i ∈ [m]. We let φ∗t := φF1∗ ∪ · · ·∪ φFm∗ . Let Gt∗ := G′t − E(φ∗t (F ∗ ))
and observe that Gt∗ is (β 3/2 , p)-quasi-random by (10.13), (E1)t and Proposition 3.9.
Now for each F ∈ F ′ , we will embed the roots rF̃1 and rF̃2 of F̃ so that their embedding satisfies
(E3)t+1 . Let uj := φ∗t (x1Fj ) and um+j := φ∗t (x2Fj ) for each j ∈ [m]. Note that by (Q2)m no vertex
occurs more than ε−2 times in the list u1 , . . . , u2m . Since φFj∗ (Fj∗ ) ∩ Rt+1 ⊆ φFj∗ (Fj∗ ) ∩ At+1 = ∅
for all j ∈ [m], (E1)t implies that for each vertex uj we have dGt∗ ,Rt+1 (uj ) = dG′t ,Rt+1 (uj ) ≥
pεnt+1 /5 ≥ 3ε−2 + 2m/ε−2 + ε−2 .

52

FELIX JOOS, JAEHOON KIM, DANIELA KÜHN, AND DERYK OSTHUS

Let H ind be the graph on [2m] such that ij ∈ E(H ind ) if i = j + m. Hence we can apply
Proposition 3.21 with the following parameters and graphs.
object/parameter Gt∗ H ind ε−2 Rt+1 2m ε−2 ∅ uj
playing the role of G
H
∆
A
m
s W j uj
From Proposition 3.21, we obtain v1 , . . . , v2m ∈ Rt+1 such that E := {ui vi : i ∈ [2m]} is a
collection of distinct edges in Gt∗ , and we have vi 6= vi+m for every i ∈ [m]. Moreover, for any
v ∈ Rt+1 , we have |{i ∈ [2m] : v = vi }| ≤ ε−2 . Thus ∆(E) ≤ ε−2 . We extend φ∗t and define a
new function φ′t by setting for all i ∈ [m]
φ∗t (rF̃1 ) = φ′t (rF̃1 ) := vi and φ∗t (rF̃2 ) = φ′t (rF̃2 ) := vm+i .
i

i

i

i

(10.14)

−2 for every v ∈ R
Thus |φ′−1
t+1 . As for each i ∈ [m] we will not embed any vertex of
t (v)| ≤ ε
2
1
F̃i − {rF̃ , rF˜ } in Step t, this will imply that (E3)t+1 holds. Moreover, note that for every i ∈ [m]
i

i

(P1)

(Q1)i

At+1 ∩ φ∗t (Fi − V (F̃i )) = At+1 ∩ φ∗t (Fi∗ ) = ∅.

(10.15)

Let
Gt := Gt∗ − E.

Since Gt∗ is (β 3/2 , p)-quasi-random and ∆(E) ≤ ε−2 ,

Gt is (β, p)-quasi-random.

(10.16)

Note that Gt is the current leftover of the graph G′t given in (E1)t and e(G′t ) = e(Gt )+e(F ∗ )+2m.
Hence
e(F)

=
(E5)t

=
=

(10.11),(P4)

=

e(F t ) − e(F ′ )
e(G′t ) + e(H1t ) + e(H2t ) + e(G[At+1 ]) − tΛ nΛ − e(F ′ )
e(Gt ) + e(F ∗ ) + 2m + e(H1t ) + e(H2t ) + e(G[At+1 ]) − tΛ nΛ − e(F ′ )
e(Gt ) + e(H1t ) + e(H2t ) + 3γ∗ n2t ± nt .

(10.17)

We proceed to Step t.2., where we pack F into Gt so that the packing is consistent with φ′t−1 .
Step t.2. Let Ĝt+1 be a (γ 1/3 , p/2)-quasi-random subgraph of the graph Gt+1 (described in
(H3)t+1 ) such that, if t ≤ Λ − 3, then for any vertex v ∈ At+1 \ At+2 , we have
dGt+1 −E(Ĝt+1 ),Rt+2 (v) ≥ p|Rt+2 |/5.

(10.18)

Such a subgraph of Gt+1 exists as a random subgraph chosen by including every edge of Gt+1
independently with probability 1/2 has these properties with probability at least 1/2, by (H3)t+1 .
Now we apply Lemma 8.1 with the following parameters and graphs.
ε
δ1
object/parameter Gt Ĝt+1 H1t H2t At+1 Rt F nt
playing the role of G
G′ H1 H2
A
R F n
ε
δ1
object/parameter δ2
γ∗
γ
β
p
10∆ ∆ p/2 1/(2∆) φ′t−1
playing the role of δ2
γ∗
γ
β
α
D ∆ p
d
φ′
Observe that (g1) holds by (V2), (V4) and (H4)t , (g2) holds by (10.16) and our choice of Ĝt+1 ,
(g3) holds by (H1)t , and (g4) holds by (H2)t . Furthermore, (f1) holds by (10.9) if t < Λ − 1, or
(E2)Λ−1 if t = Λ − 1, (f2) holds by (E2)t , (f3) holds by (10.17) or (10.8), and (f4) holds by (E3)t .
We obtain a function φ̂t packing F into Gt ∪ Ĝt+1 ∪ H1t ∪ H2t consistent with φ′t−1 such that
(Φ1)t E(Gt ) ∪ E(H1t ) ∪ E(H2t ) ⊆ E(φ̂t (F)), and
1/2
(Φ2)t for all v ∈ At+1 , we have dĜt+1 ∩φ̂t (F ) (v) ≤ γ∗ |At+1 |.

OPTIMAL PACKINGS OF BOUNDED DEGREE TREES

53

(Φ2)t , we conclude that G′t+1 := Gt+1 − E(φ̂t (F)) is
by (10.18). We have already observed that (E2)t+1
and (E3)t+1 hold. Property (E4)t+1 follows from (10.15), (Φ1)t and (E4)t . In particular, note
that in Step t we have now covered the (previous) leftover G′t of Gt which was not covered prior
to Step t. The graphs H1t and H2t are covered entirely in Step t and G′t+1 is the (new) leftover
of Gt+1 , which will be covered in Step t + 1. To check (E5)t+1 , note that (E4)t+1 implies that
Let φt := φ∗t ∪ φ̂t ∪ φt−1 . By (H3)t+1 and
2
(β , p)-quasi-random. Thus (E1)t+1 holds,

e(F t ) − e(F t+1 ) = e(G′t ) + e(H1t ) + e(H2t ) + e(Gt+1 ) − e(G′t+1 ).

(10.19)

Thus if t < Λ − 1, then
e(F t+1 )

e(F t ) − (e(F t ) − e(F t+1 ))

=
(E5)t ,(10.19)

=

e(G[At+1 ]) − e(Gt+1 ) + e(G′t+1 ) − tΛ nΛ

=

e(G′t+1 ) + e(H1t+1 ) + e(H2t+1 ) + e(G[At+2 ]) − tΛ nΛ .

This verifies (E5)t+1 .
If t = Λ − 1, then we proceed to the Final step. Otherwise we proceed to Step (t + 1).1.
Final step. Recall that GΛ = G[AΛ ]. Since F Λ = ∅, properties (E4)1 –(E4)Λ imply that φΛ−1
is consistent with φ−1 and packs F 0,Λ = F 0 perfectly into
(GΛ −

E(G′Λ )) ∪

Λ−1
[
i=1

Gi ∪

Λ−1
[

(H1i ∪ H2i ) ∪ G′0 = G − (E(G′Λ ) ∪ E(G′′0 )).

i=0

Together with (10.7), this implies that φΛ−1 ∪ φ−1 packs T∗ ∪ (T \ T ∗ ) perfectly into G − E(G′Λ ).
In particular, the current set of leftover edges is given by G′Λ . Recall that the trees in T∗ were
obtained from those in T ∗ = {T1∗ , . . . , Tt∗Λ nΛ } by deleting the edges zi∗ ℓ∗i for all i ∈ [tΛ nΛ ]. In
particular,
e(G′Λ ) = e(G) − e(T∗ ∪ (T \ T ∗ )) = e(T ) − (e(T ∗ ) − tΛ nΛ ) − e(T \ T ∗ ) = tΛ nΛ .

(10.20)

We will now extend our current packing to a packing of T into G by embedding all these edges
zi∗ ℓ∗i .
Since |G′Λ | = |AΛ | = nΛ , by (V2), (10.20) implies that d(G′Λ ) = 2tΛ . Recall that G′Λ is
2
(β , p)-quasi-random, by (E1)Λ . Thus by Lemma 9.1, G′Λ has an orientation D such that every
vertex in V (G′Λ ) = AΛ has exactly tΛ out-neighbours. For a vertex v ∈ V (G′Λ ), we denote by
+
(v) the set of out-neighbours of v. By (10.3) and our choice of the vertices vi∗ , for each
ND
+
(v)|. Thus there is a bijection
v ∈ AΛ , we have |{i ∈ [tΛ nΛ ] : φ−1 (zi∗ ) = v}| = tΛ = |ND
+
∗
∗
τv : {ℓi : φ−1 (zi ) = v} → ND (v). Let
φ−1 (ℓ∗i ) := τφ−1 (zi∗ ) (ℓ∗i ).
Then E(G′Λ ) = {φ−1 (zi∗ )φ−1 (ℓ∗i ) : i ∈ [tΛ nΛ ]} and this completes the partial embedding of T ∗ to a
complete one for every T ∗ ∈ T ∗ (indeed, recall that T∗,i = Ti∗ −ℓ∗i and φ−1 (T∗,i )∩AΛ = {φ−1 (zi∗ )}
/ φ−1 (T∗,i )).
by (10.3), thus τφ−1 (zi∗ ) (ℓ∗i ) ∈
Now, by construction, φΛ−1 ∪ φ−1 packs T into G.

10.2. Proof of Theorem 1.7 and its consequences. To prove Theorem 1.7 we need Theorem 1.2 from [19]. It allows us to pack a suitable collection of bounded degree graphs into a
quasi-random graph G, and guarantees a near-optimal packing, i.e. almost all edges of G are
used by the packing.
Theorem 10.2. Suppose n, ∆ ∈ N with 1/n ≪ ε ≪ p, α, 1/∆ ≤ 1. Suppose
H is a collection


of graphs on n vertices with ∆(H) ≤ ∆ for all H ∈ H and (1 − 2α) n2 p ≤ e(H) ≤ (1 − α) n2 p.
Suppose that G is an (ε, p)-quasi-random graph on n vertices. Then there exists a function φ
which packs H into G such that ∆(G − E(φ(H))) ≤ 4αpn.

54

FELIX JOOS, JAEHOON KIM, DANIELA KÜHN, AND DERYK OSTHUS

Proof of Theorem 1.7. We choose ε, ε′ and N such that
1/N ≪ ε ≪ ε′ ≪ δ, 1/∆.

Let p′ be a real number such that e(H) = p′ n2 . Note that by assumptions (ii)–(iv) of Theorem 1.7, we have p′ ≤ p − δ. Let G′ be a subgraph of G such that
(Z1) G − E(G′ ) is (ε1/2 , p − p′ − ε′2 )-quasi-random, and
(Z2) G′ is (ε1/2 , p′ + ε′2 ) quasi-random.
Note that G′ exists, as a random subgraph of G obtained by independently including each edge
with probability (p′ + ε′2 )/p has these properties with probability at least 1/2, by Lemma 3.2.
Since ε ≪ ε′ , 1/∆, we can use Theorem 10.2 to find a function φH packing H into G′ such
that
ε′2
∆(G′ − E(φH (H))) ≤ 4 · ′
· (p′ + ε′2 )n = 4ε′2 n.
(10.21)
p + ε′2
Define G1 := G − E(φH (H)). Then G1 is (ε′ , p − p′ )-quasi-random by Proposition 3.9, (Z1), and
(10.21). Note that e(G1 ) = e(T ). Now we apply Theorem 10.1 to G1 and T to complete the
proof.

Next we deduce Corollary 1.8 from Theorem 1.7.
Proof of Corollary 1.8. We may assume ∆ ≥ 2 and α < 1/3. Let N ∈ N and ε > 0 be the
constants given by Theorem 1.7 for the parameters ∆ and δ := p0 α/2. We may assume that
ε ≪ α, p0 . We add arbitrary trees on at most (1 − α)pn vertices with maximum degree at most
∆ to T to obtain a set of trees T ′ so that e(T ′ ) = e(G). For two trees T, T ′ ∈ T ′ of order at
most δn, we choose leaves ℓ of T and ℓ′ of T ′ , delete both T and T ′ from T ′ and add the tree
obtained from T and T ′ by identifying ℓ and ℓ′ . Then every tree in T ′ still has maximum degree
at most ∆ and its order is at most max{2δn, (1 − α)pn} ≤ (1 − α)pn, since α < 1/3 and p0 ≤ p.
By repeating this process, we may assume that every tree in T ′ but at most one has at least
δn vertices and at most (1 − α)pn ≤ (1 − δ)n vertices. Let T ′′ ⊆ T ′ consist of all trees having
at least δn vertices. Let H := T ′ \ T ′′ . Then |H| ≤ 1. Note that T ′′ and H satisfy conditions
(i)–(iv) of Theorem 1.7. Thus T ′′ ∪ H packs into G, and a packing of T ′ = T ′′ ∪ H into G
naturally gives a packing of T into G.

Finally we deduce Theorem 1.2 from Theorem 1.7.
Proof of Theorem 1.2. Let N and ε be such that the statement of Theorem 1.7 holds with ∆,
1/10, 5ε playing the roles of ∆, δ, ε. We may assume that ε ≤ 1/100. Next we iteratively pack
the trees T1 , . . . , Tεn into G0 := Kn in such a way that we cover less than 2εn edges incident to
each vertex.
Let t ∈ {0, . . . , εn − 1}. Suppose we have already
S packed T1 , . . . , Tt into G via a function τt
such that δ(Gt ) ≥ (1 − 2ε)n, where Gt := G − ti=1 E(τt (Ti )). Let Xt P
⊆ V (G) be the set of
all vertices with degree less than (1 − ε)n in Gt . Observe that |Xt | ≤ 2 εn
i=1 e(Ti )/(εn) ≤ εn.
Thus we can choose an arbitrary embedding of Tt+1 into Gt − Xt (as δ(Gt − Xt ) ≥ |Tt+1 |, such
an embedding exists). Then δ(Gt+1 ) ≥ (1 − 2ε)n. This shows that we can pack T1 , . . . , Tεn such
that δ(Gεn ) ≥ (1 − 2ε)n.
In particular, Gεn is (5ε, 1)-quasi-random. Hence we can apply Theorem 1.7 with T :=
{Tn/10 , . . . , T9n/10 }, H := {Tεn+1 , . . . , Tn/10−1 , T9n/10+1 , . . . , Tn }, δ = 1/10, and obtain a packing
of H ∪ T into Gεn , which completes the proof.

References
1. N. Alon and J. H. Spencer, The probabilistic method, third ed., Wiley-Interscience Series in Discrete Mathematics and Optimization, John Wiley & Sons, Inc., Hoboken, NJ, 2008.
2. K. Azuma, Weighted sums of certain dependent random variables, Tôhoku Math. J. 19 (1967), 357–367.
3. D. Bal, A. Frieze, M. Krivelevich, and P. Loh, Packing tree factors in random and pseudo-random graphs,
Electron. J. Combin. 21 (2014), Paper 2.8, 11 pp. (electronic).
4. J. Balogh and C. Palmer, On the tree packing conjecture, SIAM J. Discrete Math. 27 (2013), 1995–2006.
5. B. Bollobás, Some remarks on packing trees, Discrete Math. 46 (1983), 203–204.

OPTIMAL PACKINGS OF BOUNDED DEGREE TREES

55

6. J. Böttcher, J. Hladký, D. Piguet, and A. Taraz, An approximate version of the tree packing conjecture, Israel
J. Math. 211 (2016), 391–446.
7. E. Dobson, Packing trees into the complete graph, Combin. Probab. Comput. 11 (2002), 263–272.
8. M. Drmota and A. Lladó, Almost every tree with m edges decomposes K2m,2m , Combin. Probab. Comput. 23
(2014), 50–65.
9. R. A. Duke, H. Lefmann, and V. Rödl, A fast approximation algorithm for computing the frequencies of
subgraphs in a given graph, SIAM J. Comput. 24 (1995), 598–620.
10. A. Ferber, C. Lee, and F. Mousset, Packing spanning graphs from separable families, to appear in Israel J.
Math.
11. P. C. Fishburn, Balanced integer arrays: a matrix packing theorem, J. Combin. Theory Ser. A 34 (1983),
98–101.
12. J. A. Gallian, A dynamic survey of graph labeling, Electron. J. Combin. 5 (1998), Dynamic Survey 6, 43 pp.
(electronic).
13. S. Glock, D. Kühn, A. Lo, R. Montgomery, and D. Osthus, On the decomposition threshold of a given graph,
arXiv:1603.04724 (2016).
14. S. Glock, D. Kühn, and D. Osthus, Optimal path and cycle decompositions of dense quasirandom graphs, J.
Combin. Theory Ser. B 118 (2016), 88–108.
15. A. Gyárfás and J. Lehel, Packing trees of different order into Kn , Combinatorics (Proc. Fifth Hungarian
Colloq., Keszthely, 1976), Vol. I, Colloq. Math. Soc. János Bolyai, vol. 18, North-Holland, Amsterdam-New
York, 1978, pp. 463–469.
16. A M. Hobbs, B. A. Bourgeois, and J. Kasiraj, Packing trees in complete graphs, Discrete Math. 67 (1987),
27–42.
17. W. Hoeffding, Probability inequalities for sums of bounded random variables, J. Amer. Statist. Assoc. 58
(1963), 13–30.
18. D. Hush and C. Scovel, Concentration of the hypergeometric distribution, Statist. Probab. Lett. 75 (2005),
127–132.
19. J. Kim, D. Kühn, D. Osthus, and M. Tyomkyn, A blow-up lemma for approximate decompositions,
arXiv:1604.07282 (2016).
20. A. Klenke, Probability theory, second ed., Springer, London, 2014.
21. F. Knox, D. Kühn, and D. Osthus, Edge-disjoint Hamilton cycles in random graphs, Random Structures
Algorithms 46 (2015), 397–445.
22. J. Komlós, G. N. Sárközy, and E. Szemerédi, Blow-up lemma, Combinatorica 17 (1997), 109–123.
23. D. Kühn and D. Osthus, Hamilton decompositions of regular expanders: a proof of Kelly’s conjecture for large
tournaments, Adv. Math. 237 (2013), 62–146.
24.
, Hamilton decompositions of regular expanders: applications, J. Combin. Theory Ser. B 104 (2014),
1–27.
25. D. Kühn, D. Osthus, and A. Treglown, Hamiltonian degree sequences in digraphs, J. Combin. Theory Ser. B
100 (2010), 367–380.
26. A. Lladó, Decomposing almost complete graphs by random trees, arXiv:1512.00427 (2015).
27. S. Messuti, V. Rödl, and M. Schacht, Packing minor-closed families of graphs into complete graphs, J. Combin.
Theory Ser. B 119 (2016), 245–265.
28. G. Ringel, Problem 25, Theory of Graphs and its Applications, (Proc. Int. Symp. Smolenice 1963) Czech.
Acad. Sci., Prague, 1963.
29. Y. Roditty, Packing and covering of the complete graph. III. On the tree packing conjecture, Sci. Ser. A Math.
Sci. (N.S.) 1 (1988), 81–85.
30. H. S. Snevily, New families of graphs that have α-labelings, Discrete Math. 170 (1997), 185–194.
31. R.M. Wilson. An existence theory for pairwise balanced designs. I. Composition theorems and morphisms, J.
Combin. Theory Ser. A 13 (1972), 220–245.
32. R.M. Wilson. An existence theory for pairwise balanced designs. II. The structure of PBD-closed sets and the
existence conjectures, J. Combin. Theory Ser. A 13 (1972), 246–273.
33. R.M. Wilson. An existence theory for pairwise balanced designs. III. Proof of the existence conjectures, J.
Combin. Theory Ser. A 18 (1975), 71–79.
34. R. Yuster, Packing and decomposition of graphs with trees, J. Combin. Theory Ser. B 78 (2000), 123–140.
35. A. Zak, Packing large trees of consecutive orders, arXiv:1510.07467 (2015).
School of Mathematics, University of Birmingham, Edgbaston, Birmingham, B15 2TT, United
Kingdom
E-mail address: f.joos@bham.ac.uk, j.kim.3@bham.ac.uk, d.kuhn@bham.ac.uk, d.osthus@bham.ac.uk

