words_num,awerage_word_length,italicness,formuleness,heading_first_word,boldness_first_word,is_capital_first_letter,type,text
1,1.0,0.0,0.0,False,0.0,False,text," 1
"
1,1.0,0.0,0.0,False,0.0,False,text," 1
"
1,1.0,0.0,0.0,False,0.0,False,text," 0
"
1,1.0,0.0,0.0,False,0.0,False,text," 2
"
2,0.0,0.0,0.0,False,0.0,False,text,"  
"
1,1.0,0.0,0.0,False,0.0,False,text," r
"
1,1.0,0.0,0.0,False,0.0,False,text," a
"
2,0.0,0.0,0.0,False,0.0,False,text,"  
"
1,1.0,0.0,0.0,False,0.0,True,text," M
"
1,1.0,0.0,0.0,False,0.0,False,text," 2
"
1,1.0,0.0,0.0,False,0.0,False,text," 1
"
2,0.0,0.0,0.0,False,0.0,False,text,"  
"
2,0.0,0.0,0.0,False,0.0,False,text,"  
"
1,1.0,0.0,0.0,False,0.0,False,text," ]
"
1,1.0,0.0,0.0,False,0.0,False,text," .
"
1,1.0,0.0,0.0,False,0.0,True,text," O
"
1,1.0,0.0,0.0,False,0.0,True,text," C
"
1,1.0,0.0,0.0,False,0.0,False,text," h
"
1,1.0,0.0,0.0,False,0.0,False,text," t
"
1,1.0,0.0,0.0,False,0.0,False,text," a
"
1,1.0,0.0,0.0,False,0.0,False,text," m
"
1,1.0,0.0,0.0,False,0.0,False,text," [
"
2,0.0,0.0,0.0,False,0.0,False,text,"  
"
2,0.0,0.0,0.0,False,0.0,False,text,"  
"
1,1.0,0.0,0.0,False,0.0,False,text," 2
"
1,1.0,0.0,0.0,False,0.0,False,text," v
"
1,1.0,0.0,0.0,False,0.0,False,text," 3
"
1,1.0,0.0,0.0,False,0.0,False,text," 5
"
1,1.0,0.0,0.0,False,0.0,False,text," 8
"
1,1.0,0.0,0.0,False,0.0,False,text," 2
"
1,1.0,0.0,0.0,False,0.0,False,text," .
"
1,1.0,0.0,0.0,False,0.0,False,text," 2
"
1,1.0,0.0,0.0,False,0.0,False,text," 0
"
1,1.0,0.0,0.0,False,0.0,False,text," 1
"
1,1.0,0.0,0.0,False,0.0,False,text," 1
"
1,1.0,0.0,0.0,False,0.0,False,text," :
"
1,1.0,0.0,0.0,False,0.0,False,text," v
"
1,1.0,0.0,0.0,False,0.0,False,text," i
"
1,1.0,0.0,0.0,False,0.0,True,text," X
"
1,1.0,0.0,0.0,False,0.0,False,text," r
"
1,1.0,0.0,0.0,False,0.0,False,text," a
"
6,6.5,0.0,0.0,False,0.0,True,text," An extension of the Moser-Tardos algorithmic
"
2,5.0,0.0,0.0,False,0.0,False,text," local lemma
"
2,6.0,0.0,0.0833333333333,False,0.0,True,text," Wesley Pegden
"
3,4.0,0.0,0.0,False,0.0,True,text," March 12, 2011
"
1,8.0,0.0,0.0,False,1.0,True,text," Abstract
"
13,4.69230769231,0.0,0.0,False,0.0,True,text," A recent theorem of Bissacot, et al. proved using results about the clus-
"
10,6.0,0.0,0.0,False,0.0,False,text," ter expansion in statistical mechanics extends the Lovasz Local Lemma
"
11,5.45454545455,0.0,0.0,False,0.0,False,text," by weakening the conditions under which its conclusions holds. In this
"
12,5.08333333333,0.0,0.0,False,0.0,False,text," note, we prove an algorithmic analog of this result, extending Moser and
"
9,6.66666666667,0.0,0.0,False,0.0,True,text," Tardoss recent algorithmic Local Lemma, and providing an alternative
"
12,5.0,0.0,0.0,False,0.0,False,text," proof of the theorem of Bissacot, et al. applicable in the Moser-Tardos
"
2,10.5,0.0,0.0,False,0.0,False,text," algorithmic framework.
"
2,6.5,0.0,0.0,False,1.0,False,text," 1 Introduction
"
20,2.95,0.0,0.358333333333,False,0.0,True,text," If events A1, A2, . . . , An are independent, then we have P(T Ai))  0 so long
"
15,4.13333333333,0.0,0.06,False,0.0,False,text," as P(Ai)  1 for each i. A central tool in probabilistic combinatorics is the
"
14,4.14285714286,0.0,0.0,False,0.0,True,text," Lovasz Local Lemma proved by Erdos and Lovasz [5], which can be seen as
"
11,6.09090909091,0.0,0.0,False,0.0,False,text," generalizing this simple fact to situations where some dependencies among the
"
12,5.16666666667,0.0,0.111111111111,False,0.0,True,text," Ai are allowed, in exchange for better bounds on the probabilities P(Ai).
"
12,4.75,0.0833333333333,0.0,False,0.0,True,text," The Local Lemma is commonly presented through the framework of a de-
"
15,4.2,0.133333333333,0.111111111111,False,0.0,False,text," pendency graph on the events Ai, where if C is any family of non-neighbors of
"
16,3.75,0.0,0.166666666667,False,0.0,False,text," some Ai, then we have that Ai is independent of the family C of events. The
"
7,4.57142857143,0.0,0.0,False,0.0,True,text," Lovasz Local Lemma is then as follows:
"
13,4.38461538462,0.538461538462,0.0769230769231,True,1.0,True,heading," Theorem 1.1 (Lovasz Local Lemma). Let G be any dependency graph for a
"
17,3.35294117647,0.661764705882,0.117647058824,False,0.0,False,body," nite family A of events, and suppose that there are real numbers 0  xA  1
"
12,2.16666666667,0.5,0.25,False,0.0,False,body," (A  A) such that for all A  A we have
"
1,4.0,1.0,0.0,False,0.0,True,body," Then
"
3,2.0,0.0,0.25,False,0.0,False,body," (1  xB).
"
1,3.0,0.0,0.0,False,0.0,False,body," (1)
"
4,2.25,0.0,0.645833333333,False,0.0,True,body," P(A)  xA YBA
"
3,1.33333333333,0.0,0.777777777778,False,0.0,True,text," P  \AA
"
3,1.66666666667,0.0,0.777777777778,False,0.0,True,text," A!  YAA
"
3,2.0,0.0,0.25,False,0.0,False,body," (1  xA),
"
13,5.76923076923,0.0,0.010989010989,False,0.0,True,text," Courant Institute of Mathematical Sciences, New York University, 251 Mercer St, Rm 921,
"
11,6.27272727273,0.0,0.0,False,0.0,True,text," New York, NY 10012 Email: pegden@math.nyu.edu. Partially supported by NSF MSPRF
"
2,6.5,0.0,0.0,False,0.0,False,text," grant 1004696.
"
1,1.0,0.0,0.0,False,0.0,False,heading," 1
"
6,4.0,1.0,0.0,False,0.0,False,body," and so in particular, we have
"
3,1.33333333333,0.0,0.777777777778,False,0.0,True,after_body," P  \AA
"
3,1.33333333333,0.0,0.5,False,0.0,True,text," A!  0.
"
1,3.0,0.0,0.0,False,0.0,False,text," (2)
"
12,5.0,0.0,0.0,False,0.0,True,text," The rst breakthrough in nding an algorithmic version of the Local Lemma
"
13,4.76923076923,0.0,0.0,False,0.0,False,text," was made by Beck, who demonstrated his method on the classical Local Lemma
"
9,7.44444444444,0.0,0.0,False,0.0,False,text," application to 2-colorable hypergraphs. Becks method was subsequently rened
"
12,5.58333333333,0.0,0.0,False,0.0,False,text," and given a more general framework [1,4,9,14], but required stronger bounds on
"
12,5.83333333333,0.0,0.0,False,0.0,False,text," the probabilities of the events than were required by the nonalgorithmic version.
"
12,5.25,0.0,0.0,False,0.0,True,text," In Moser and Tardos recent breakthrough paper [10], they give an algorith-
"
15,4.13333333333,0.0,0.0,False,0.0,False,text," mic proof of the Lovasz Local Lemma in a setting which is general enough for
"
11,6.0,0.0,0.0,False,0.0,False,text," nearly all applications of the Lemma in combinatorics, with bounds identical
"
12,5.33333333333,0.0,0.0,False,0.0,False,text," to those required by the nonalgorithmic version. In the framework Moser and
"
14,4.5,0.0,0.142857142857,False,0.0,True,text," Tardos consider, the events in A depend on some underlying set V of indepen-
"
15,4.0,0.0,0.0777777777778,False,0.0,False,text," dent random variables, and they denote by vbl(A) (A  A) the minimal set of
"
15,3.93333333333,0.0,0.2,False,0.0,False,text," random variables from V on which each A depends; A is said to be violated
"
14,4.64285714286,0.0,0.0119047619048,False,0.0,False,text," with respect to a particular evalation of the variables in vbl(A) if the event
"
11,5.63636363636,0.0,0.0,False,0.0,False,text," occurs for that evaluation. A Moser-Tardos dependency graph is one which
"
14,4.5,0.0,0.154761904762,False,0.0,False,text," implies that if events A and B are nonadjacent, then vbl(A) is disjoint from
"
13,5.0,0.0,0.010989010989,False,0.0,False,text," vbl(B). (Note that this notion of a dependency graph is more restrictive than
"
11,6.09090909091,0.0,0.0,False,0.0,False,text," the Lovasz version based on probabilistic independence, as is demonstrated by
"
13,4.76923076923,0.0,0.0,False,0.0,False,text," an example of Kolipaka and Szegedy [8].) Moser and Tardoss theorem is then
"
2,6.5,0.0,0.0,False,0.0,False,text," the following:
"
14,4.42857142857,0.589285714286,0.0714285714286,True,1.0,True,heading," Theorem 1.2 (Moser and Tardos). Let V be a nite set of mutually independent
"
15,4.46666666667,0.95,0.0666666666667,False,0.0,False,body," variables in a probability space, and let A be a nite family of events determined
"
18,3.0,0.611111111111,0.111111111111,False,0.0,False,body," by these variables. If there are real numbers 0  xA  1 (A  A) such that
"
4,2.25,0.0,0.645833333333,False,0.0,True,body," P(A)  xA YBA
"
3,1.66666666667,0.0,0.222222222222,False,0.0,False,body," (1  xB)
"
1,3.0,0.0,0.0,False,0.0,False,body," (3)
"
14,4.64285714286,0.928571428571,0.0714285714286,False,0.0,False,body," then there exists an assignment to the variables V which corresponds to no oc-
"
11,5.81818181818,0.954545454545,0.0454545454545,False,0.0,False,body," currence of any event from A. Moreover, the randomized algorithm described
"
10,4.0,0.8,0.2,False,0.0,False,body," below resamples an event A at most an expected xA
"
4,4.75,1.05,0.0,False,0.0,False,body," times before nding the
"
1,3.0,0.0,1.0,False,0.0,False,after_body," 1xA
"
2,4.0,1.0,0.0,False,0.0,False,text," in expec-
"
10,5.1,0.9,0.133333333333,False,0.0,False,body," evaluation, thus the total number of resampling steps is PAA
"
1,7.0,1.0,0.0,False,0.0,False,after_body," tation.
"
1,2.0,0.0,1.0,False,0.0,False,text," xA
"
1,3.0,0.0,1.0,False,0.0,False,text," 1xA
"
11,5.81818181818,0.0,0.0,False,0.0,True,text," The Moser-Tardos algorithm consists just of beginning with a random evalu-
"
14,4.5,0.0,0.047619047619,False,0.0,False,text," ation of all the variables in V, and then resampling vbl(A) for any violated
"
14,4.57142857143,0.0,0.0714285714286,False,0.0,False,text," events A until no violated events remain. Of course, the eciency of the algo-
"
12,5.5,0.0,0.0,False,0.0,False,text," rithm depends on the ability to resample variables eciently and check whether
"
11,6.45454545455,0.0,0.0,False,0.0,False,text," individual events are violated; this is generally an easy implementation problem,
"
12,5.41666666667,0.0,0.0,False,0.0,False,text," however, making the analysis of the number of resampling steps the important
"
1,6.0,0.0,0.0,False,0.0,False,text," issue.
"
9,7.22222222222,0.0,0.0,False,0.0,True,text," Recently, Bissacot, Fernandez, Procacci and Scoppola proved the following
"
6,5.5,0.0,0.0,False,0.0,False,text," improvement of the Lovasz Local Lemma:
"
1,1.0,0.0,0.0,False,0.0,False,text," 2
"
15,4.26666666667,0.55,0.0666666666667,True,1.0,True,heading," Theorem 1.3 (Bissacot, et al. [3]). Consider a nite family A of events in some
"
13,4.84615384615,0.961538461538,0.0384615384615,False,0.0,False,body," probability space , with some dependency graph G. If there are real numbers
"
7,1.42857142857,0.285714285714,0.285714285714,False,0.0,False,body," 0  A   such that
"
1,3.0,0.0,0.0,False,0.0,False,after_body," (4)
"
1,1.0,0.0,2.0,False,0.0,True,text," A
"
1,1.0,0.0,2.0,False,0.0,True,text," B
"
3,3.33333333333,0.0,0.777777777778,False,0.0,True,text," I indep. YBI
"
1,5.0,0.0,0.8,False,0.0,True,text," XI(A)
"
2,2.0,0.125,0.125,False,0.0,True,text," P(A) 
"
3,1.0,0.166666666667,0.666666666667,False,0.0,True,text," A  0.
"
3,2.66666666667,0.666666666667,0.777777777778,False,0.0,False,text," then P TAA
"
15,4.13333333333,0.0,0.0,False,0.0,True,text," It is not dicult to check that condition (4) is weaker than condition (1) by
"
6,5.0,0.0,0.5,False,0.0,False,text," considering the substitution A = xA
"
7,4.71428571429,0.0,0.0,False,0.0,False,text," . (Condition (1) would be equivalent to
"
1,3.0,0.0,1.0,False,0.0,False,text," 1xA
"
15,4.2,0.0,0.0666666666667,False,0.0,False,text," (4) without the condition in the sum that the sets I be independent.) In [3],
"
11,5.90909090909,0.0,0.0,False,0.0,False,text," they also give examples where this theorem improves some classical theorems
"
13,4.53846153846,0.0,0.0,False,0.0,False,text," proved with the Local Lemma. Theorem 1.3 has also since been applied to
"
8,5.25,0.0,0.0,False,0.0,False,text," improve some theorems on graph colorings in [11].
"
12,5.33333333333,0.0,0.0,False,0.0,True,text," Their proof of Theorem 1.3 is based on Shearers characterization of labeled
"
12,5.16666666667,0.0,0.0,False,0.0,False,text," dependency graphs to which the conclusion of the Local Lemma applies [13]
"
14,4.5,0.0,0.0,False,0.0,False,text," and two of those authors recent results on the radius of convergence of logs
"
12,5.33333333333,0.0,0.0,False,0.0,False,text," of partition functions [7]. (The connection between the Local Lemma and the
"
12,5.41666666667,0.0,0.0,False,0.0,False,text," partition functions of statistical mechanics was rst made by Scott and Sokal
"
1,6.0,0.0,0.0,False,0.0,False,text," [12].)
"
14,4.57142857143,0.0,0.0,False,0.0,True,text," In this short note, we prove an algorithmic analog to the result of Bissacot,
"
16,3.8125,0.0,0.0,False,0.0,False,text," et. al. That is, we will show that in the setting of Moser and Tardoss algo-
"
13,4.76923076923,0.0,0.0,False,0.0,False,text," rithmic Local Lemma, Moser and Tardoss bounds on the running time of their
"
11,5.72727272727,0.0,0.0,False,0.0,False,text," algorithm hold even with their condition (3) replaced with condition (4):
"
14,4.14285714286,0.803571428571,0.0714285714286,True,1.0,True,heading," Theorem 1.4. Let V be a nite set of mutually independent variables in a
"
14,4.42857142857,0.946428571429,0.0714285714286,False,0.0,False,body," probability space, and let A be a nite family of events determined by these
"
16,2.8125,0.5625,0.1875,False,0.0,False,body," variables. If there are real numbers 0  A   (A  A) such that
"
2,2.0,0.125,0.125,False,0.0,True,after_body," P(A) 
"
1,1.0,0.0,2.0,False,0.0,True,text," A
"
3,3.33333333333,0.0,0.777777777778,False,0.0,True,text," I indep. YBI
"
1,5.0,0.0,0.8,False,0.0,True,text," XI(A)
"
1,1.0,0.0,1.0,False,0.0,False,text," ,
"
1,1.0,0.0,2.0,False,0.0,True,text," B
"
1,3.0,0.0,0.0,False,0.0,False,heading," (5)
"
14,4.64285714286,0.928571428571,0.0714285714286,False,0.0,False,body," then there exists an assignment to the variables V which corresponds to no oc-
"
11,6.0,0.954545454545,0.0454545454545,False,0.0,False,body," currence of any event from A. Moreover, the Moser-Tardos algorithm resamples
"
15,4.13333333333,0.88,0.2,False,0.0,False,body," an event A at most an expected A times before nding the evaluation, thus the
"
7,4.71428571429,0.857142857143,0.190476190476,False,0.0,False,body," total number of resampling steps is PAA
"
3,5.0,0.666666666667,0.666666666667,False,0.0,True,body," A in expectation.
"
12,5.25,0.0,0.0,False,0.0,False,after_body," (The running time bound here is equivalent to the Moser-Tardos bound under
"
5,4.0,0.0,0.6,False,0.0,False,text," the substituation A = xA
"
1,3.0,0.0,1.0,False,0.0,False,text," 1xA
"
15,4.2,0.0,0.0,False,0.0,True,text," The proof of Theorem 1.4 consists simply of re-doing one part of the proof of
"
11,5.81818181818,0.0,0.0,False,0.0,True,text," Moser and Tardoss theorem, taking advantage of some constraints which were
"
8,5.625,0.0,0.0,False,0.0,False,text," not necessary for Moser and Tardoss original result.
"
1,2.0,0.0,0.0,False,0.0,False,text," .)
"
14,4.14285714286,0.0,0.0,True,0.0,True,text," Theorem 1.4 can be seen as doing two things: rst, it extends the result
"
13,4.76923076923,0.0,0.0,False,0.0,False,text," of Moser and Tardos by giving a weaker condition under which the identical
"
1,1.0,0.0,0.0,False,0.0,False,text," 3
"
14,4.21428571429,0.0,0.0,False,0.0,False,text," result holdsnote that this has also been done in a more general sense by
"
11,5.81818181818,0.0,0.0,False,0.0,True,text," Kolipaka and Szegedy [8], who directly connect Shearers condition with the
"
10,6.9,0.0,0.0,False,0.0,True,text," Moser/Tardos algorithmic framework. Secondly, it gives an alternative proof of
"
13,5.61538461538,0.0,0.0,False,0.0,False,text," the result of Bissacot, et al. (in the slightly more restrictive algorithmic setting)
"
11,5.81818181818,0.0,0.0,False,0.0,False,text," which is independent of Shearers theorem and the cluster expansion methods
"
3,3.33333333333,0.0,0.0,False,0.0,False,text," used in [7].
"
13,4.61538461538,0.0769230769231,0.0,False,0.0,True,text," Bissacot, et al. note that their Theorem 1.3 can be extended to Lopsided
"
13,4.84615384615,0.142857142857,0.0,False,0.0,False,text," dependency graphs, rst considered by Erdos and Spencer in [6]. In their pa-
"
13,4.61538461538,0.0,0.0,False,0.0,False,text," per on their algorithmic Local Lemma, Moser and Tardos dene an analog of
"
10,6.8,0.0,0.0,False,0.0,False,text," lopsidependency in the algorithm/variable setting, and a reader familiar with
"
13,4.84615384615,0.0,0.0,False,0.0,True,text," Moser and Tardoss paper can easily verify that our improvement to Moser and
"
10,6.6,0.0,0.0,False,0.0,True,text," Tardoss theorem applies to their theorem on algorithmic lopsided dependency
"
14,4.64285714286,0.0,0.0,False,0.0,False,text," graphs as well, as we only re-do their branching argument, which is applied to
"
12,3.91666666667,0.0,0.0,False,0.0,False,text," the lopsided case in the same way as in their main result.
"
2,3.0,0.0,0.0,False,1.0,False,text," 2 Proof
"
6,6.0,0.0,0.0,False,0.0,True,text," The Moser-Tardos algorithm is as follows:
"
3,8.66666666667,0.0,0.0222222222222,False,0.0,False,text," 1: procedure Moser-Tardos(P)
"
1,2.0,0.0,0.0,False,0.0,False,text," 2:
"
6,1.66666666667,0.0,0.333333333333,False,1.0,False,text," for all P  P do
"
6,3.83333333333,0.0,0.357142857143,False,0.0,False,text," vP (random evaluation of P )
"
2,3.0,0.0,0.0,False,1.0,False,text," end for
"
13,2.61538461538,0.0,0.461538461538,False,1.0,False,text," while A s.t. A is violated when P = vP (P ) do
"
6,2.5,0.0,0.194444444444,False,1.0,False,text," for all P  vbl(A) do
"
7,3.71428571429,0.0,0.321428571429,False,0.0,False,text," vP (new random evaluation of P )
"
1,2.0,0.0,0.0,False,0.0,False,text," 3:
"
1,2.0,0.0,0.0,False,0.0,False,text," 4:
"
1,2.0,0.0,0.0,False,0.0,False,text," 5:
"
1,2.0,0.0,0.0,False,0.0,False,text," 6:
"
1,2.0,0.0,0.0,False,0.0,False,text," 7:
"
1,2.0,0.0,0.0,False,0.0,False,text," 8:
"
2,3.0,0.0,0.0,False,1.0,False,text," end for
"
2,4.0,0.0,0.0,False,1.0,False,text," end while
"
1,2.0,0.0,0.0,False,0.0,False,text," 9:
"
3,5.0,0.0,0.0,False,0.0,False,text," 10: end procedure
"
13,5.07692307692,0.0,0.0,False,0.0,False,text," (Note that when multiple events exist satisfying line 5, one of the satisfying
"
4,6.75,0.0,0.0,False,0.0,False,text," events is chosen arbitrarily.)
"
11,5.63636363636,0.0,0.0,False,0.0,True,text," Moser and Tardos proof that this algorithm terminates in polynomial time
"
15,4.4,0.0,0.0,False,0.0,False,text," (under condition (3)) is based on the notion of a witness tree. As the algorithm
"
15,4.33333333333,0.0,0.0,False,0.0,False,text," runs and bad events are found and resampled, a witness tree is assigned to each
"
15,4.13333333333,0.0,0.0,False,0.0,False,text," step of the algorithm (where a step consists of a resampling of an event). A
"
16,3.9375,0.0,0.09375,False,0.0,False,text," witness tree is a rooted tree with labels from A. The witness tree Wt for step
"
15,4.46666666667,0.0,0.0666666666667,False,0.0,False,text," t of the algorithm is constructed as follows: choose as its root a vertex labeled
"
15,3.93333333333,0.0,0.1,False,0.0,False,text," with whatever event A0 was resampled at step t. If the event A1 which was
"
18,3.33333333333,0.0,0.0555555555556,False,0.0,False,text," resampled at step t  1 overlaps the label of the root, a vertex is added as a
"
17,3.64705882353,0.0,0.0637254901961,False,0.0,False,text," child of the root labeled with A1. (We may have A1 = A0.) In general, for each
"
24,2.375,0.0,0.375,False,0.0,False,text," step i = t  1, t  2, . . . , 1 of the algorithm, if the event Ai which was added
"
15,4.53333333333,0.0,0.0666666666667,False,0.0,False,text," at step i overlaps any of the events currently labels of vertices of our partially
"
16,3.75,0.0,0.104166666667,False,0.0,False,text," constructed Wt, we add a vertex labeled with Ai as the child of a vertex of
"
6,5.5,0.0,0.111111111111,False,0.0,False,text," maximum depth whose label overlaps Ai.
"
6,4.83333333333,0.0,0.111111111111,False,0.0,True,text," In the result, Wt, children always
"
12,5.25,0.0,0.0,False,0.0,False,text," overlap their parents, and children of a common parent always get distinct
"
1,1.0,0.0,0.0,False,0.0,False,text," 4
"
12,5.41666666667,0.0,0.0,False,0.0,False,text," labels (otherwise, whichever was added after the other would have been added
"
17,3.82352941176,0.0,0.117647058824,False,0.0,False,text," as a child of the other). Any tree T with labels from A with these two properties
"
6,4.5,0.466666666667,0.0,False,0.0,False,text," is called a proper witness tree.
"
12,5.25,0.0,0.0,False,0.0,True,text," Moser and Tardoss proof of their algorithms eciency consists of two parts:
"
13,4.38461538462,0.0,0.0769230769231,False,0.0,False,text," rst, they show that any proper witness tree T has probability at most
"
1,5.0,0.0,0.4,False,0.0,True,text," P(Av)
"
1,3.0,0.0,1.33333333333,False,0.0,True,text," YvT
"
1,3.0,0.0,0.0,False,0.0,False,text," (6)
"
15,4.13333333333,0.0,0.0,False,0.0,False,text," of occurring as a witness tree at any point in the running of the algorithm,
"
10,4.5,0.0,0.15,False,0.0,False,text," where here Av denotes the event labeling the vertex v.
"
16,3.625,0.0,0.15625,False,0.0,True,text," Now, if an event A is resampled at step t, the number of occurrences of A
"
18,3.27777777778,0.0,0.111111111111,False,0.0,False,text," as a label in the witness tree Wt is equal to the number of times A has been
"
17,3.94117647059,0.0,0.28431372549,False,0.0,False,text," resampled on steps 1, . . . , tin particular, all witness trees which will occur in
"
17,3.52941176471,0.0,0.0588235294118,False,0.0,False,text," a run of the algorithm will be distinct. Thus if we let TA denote the set of
"
15,4.26666666667,0.0,0.1,False,0.0,False,text," proper witness trees with root label A, the expected value of the number NA of
"
14,3.78571428571,0.0,0.0714285714286,False,0.0,False,text," resamplings of A which occur in a run of the algorithm is equal to
"
4,2.5,0.0,0.725,False,0.0,True,text," E(NA) = XT TA
"
9,2.77777777778,0.0,0.462962962963,False,0.0,True,text," P(T occurs in the log)  XT TA YvT
"
1,6.0,0.0,0.5,False,0.0,True,text," P(Av).
"
1,3.0,0.0,0.0,False,0.0,False,text," (7)
"
13,4.53846153846,0.0,0.0,False,0.0,True,text," The second part of Moser and Tardoss proof consists of bounding the sum
"
14,4.28571428571,0.0,0.0,False,0.0,False,text," of products in line (7). They do this by considering a random process for
"
14,4.14285714286,0.0,0.142857142857,False,0.0,False,text," constructing trees: Suppose xA (A  A) are real numbers between 0 and 1.
"
17,3.58823529412,0.0,0.0490196078431,False,0.0,True,text," Fix now any event A0. In the rst round of the process, a vertex labeled A0 is
"
14,4.78571428571,0.0,0.142857142857,False,0.0,False,text," created. In each subsequent round, for each event vertex v with label Av created
"
15,4.2,0.0,0.1,False,0.0,False,text," in the previous round, and for each event Au  (Av) (in the dependency graph),
"
18,3.44444444444,0.0,0.208333333333,False,0.0,False,text," a vertex u with label Au is added as a child of v with probability xAu. (All of
"
6,6.16666666667,0.0,0.0,False,0.0,False,text," these choices are are made independently.)
"
4,5.0,0.0,0.0,False,0.0,True,text," Moser and Tardos prove:
"
12,5.0,0.416666666667,0.0833333333333,True,1.0,True,heading," Lemma 2.1 (Moser Tardos Branching Lemma). For any proper witness tree T
"
13,5.23076923077,0.871794871795,0.102564102564,False,0.0,False,body," with root labeled A0, the probability pT that the process above produces exactly
"
4,2.5,0.75,0.25,False,0.0,False,body," the tree T is
"
2,1.5,0.0,0.5,False,0.0,False,body," pT =
"
3,1.33333333333,0.0,0.222222222222,False,0.0,False,body," 1  xA0
"
4,3.25,0.0,1.14583333333,False,0.0,False,text," xA0 YvT xAv YBAv
"
4,1.75,0.0,0.4375,False,0.0,False,text," (1  xB)! .
"
1,3.0,0.0,0.0,False,0.0,False,text," (8)
"
1,3.0,0.0,0.0,False,0.0,False,text," (9)
"
1,4.0,0.0,0.0,False,0.0,False,text," (10)
"
6,4.0,0.0,0.0,False,0.0,True,text," Thus, the Lemma gives us that
"
2,1.0,0.0,0.5,False,0.0,False,text," pT 
"
4,1.25,0.0,0.625,False,0.0,False,text," 1  XT TA
"
3,1.0,0.0,0.333333333333,False,0.0,False,text," 1  xA
"
6,2.66666666667,0.0,1.23611111111,False,0.0,False,text," xA XT TA YvT xAv YBAv
"
3,2.0,0.0,0.25,False,0.0,False,text," (1  xB)!
"
15,3.66666666667,0.0,0.238888888889,False,0.0,True,text," Thus the bound P (A)  (xAQBA(1  xB)) for all A implies, together with
"
3,4.0,0.0,0.0,False,0.0,False,text," line (7), that
"
1,2.0,0.0,1.0,False,0.0,False,text," xA
"
2,2.5,0.0,0.2,False,0.0,True,text," E(NA) 
"
1,1.0,0.0,1.0,False,0.0,False,text," .
"
3,1.0,0.0,0.333333333333,False,0.0,False,text," 1  xA
"
1,1.0,0.0,0.0,False,0.0,False,text," 5
"
11,5.54545454545,0.0,0.0,False,0.0,True,text," Our improvement comes just from a slightly more careful branching argu-
"
14,4.28571428571,0.0,0.0,False,0.0,False,text," ment. Note that any witness tree which occurs in the log of the algorithm
"
14,4.42857142857,0.0,0.0,False,0.0,False,text," has the property that any children of a common vertex have labels which are
"
10,6.3,0.1,0.0,False,0.0,False,text," nonadjacent in the dependency graph. This conditionlets call it strongly
"
12,5.41666666667,0.0833333333333,0.0,False,0.0,False,text," proper is stronger than requiring simply that children be distinct. Thus, we
"
9,3.88888888889,0.0,0.0,False,0.0,False,text," can strengthen line 7, as we have the bound
"
5,2.0,0.0,0.88,False,0.0,True,text," E(NA) = XT T S
"
1,1.0,0.0,1.0,False,0.0,True,text," A
"
9,2.44444444444,0.0,0.481481481481,False,0.0,True,text," P(T occurs in the log)  XT T S
"
2,2.0,0.0,1.16666666667,False,0.0,True,text," A YvT
"
1,6.0,0.0,0.5,False,0.0,True,text," P(Av).
"
1,4.0,0.0,0.0,False,0.0,False,text," (11)
"
3,2.33333333333,0.0,0.666666666667,False,0.0,False,text," where T S
"
11,3.63636363636,0.0,0.181818181818,False,0.0,True,text," A  TA is the set of strongly proper witness trees.
"
13,4.46153846154,0.0,0.0,False,0.0,True,text," To bound the sum in (11), we consider a modied branching process which
"
3,6.0,0.0,0.0,False,0.0,False,text," proceeds as follows.
"
13,2.23076923077,0.0,0.461538461538,False,0.0,True,text," Given real numbers 0  A  , we dene xA = A
"
7,2.14285714286,0.0,0.238095238095,False,0.0,True,text," A+1 (note that 0  xA 
"
17,3.47058823529,0.0,0.0490196078431,False,0.0,False,text," 1) and x any event A0. In the rst round of the process, a vertex labeled A0
"
15,4.26666666667,0.0,0.133333333333,False,0.0,False,text," is created. In each subsequent round, for each event vertex v with label Av in
"
15,3.93333333333,0.0,0.0888888888889,False,0.0,False,text," the previous round, we carry out a subprocess, where for each Au  (v) (in
"
17,3.58823529412,0.0,0.176470588235,False,0.0,False,text," the dependency graph), a vertex u with label Au is added as a child of v with
"
13,5.15384615385,0.0,0.0769230769231,False,0.0,False,text," probability xAu (the choices are independent). At the end of the subprocess, we
"
16,4.25,0.0,0.0625,False,0.0,False,text," check if the label-set of the resulting set of children for v is an independent set
"
15,4.46666666667,0.0,0.0,False,0.0,False,text," in the dependency graph. If it is not, we delete the children created and restart
"
15,4.13333333333,0.0,0.1,False,0.0,False,text," the subprocess. Note that xA  1 (for all A) implies that the subprocess will
"
10,6.2,0.0,0.0,False,0.0,False,text," eventually end (with probability 1) having produced an independent set.
"
14,4.5,0.0,0.0,False,0.0,True,text," Note that the process described above is equivalent to one in which, in each
"
16,4.0625,0.0,0.0625,False,0.0,False,text," round and for each vertex v from the previous round, we create a set of children
"
16,3.8125,0.0,0.140625,False,0.0,False,text," u with labels from a set chosen from all independent sets Iv  (v), where the
"
14,4.85714285714,0.0,0.0714285714286,False,0.0,False,text," likelihood of the choice of each independent set Iv is weighted according the the
"
1,7.0,0.0,0.0,False,0.0,False,text," product
"
3,3.33333333333,0.0,0.95,False,0.0,False,text," w(Iv) = YuIv
"
1,4.0,0.0,1.25,False,0.0,False,text," xAu!
"
2,4.0,0.0,0.4375,False,0.0,False,text,"  Yu(v)\Iv
"
4,1.5,0.0,0.5,False,0.0,False,text," (1  xAu )
"
2,0.5,0.0,0.5,False,0.0,False,text,"  .
"
10,6.0,0.5,0.0,True,1.0,True,text," Lemma 2.2 (Improved Branching Lemma). For any strongly proper witness
"
9,4.22222222222,0.703703703704,0.37037037037,False,0.0,False,text," tree T with root labeled A0, the probability p
"
6,5.0,0.861111111111,0.166666666667,False,0.0,True,text," T that the modied branching process
"
8,4.875,0.875,0.125,False,0.0,False,text," described above produces exactly the tree T is
"
3,1.0,0.0,1.0,False,0.0,True,heading," T = 1
"
1,1.0,0.0,2.0,False,0.0,False,after_body," p
"
2,2.5,0.0,0.916666666667,False,0.0,True,text," A0 YvT
"
1,2.0,0.0,1.5,False,0.0,True,text," Au
"
3,3.33333333333,0.0,0.777777777778,False,0.0,True,text," I indep. YAI
"
1,6.0,0.0,0.833333333333,False,0.0,True,text," XI(Av)
"
1,1.0,0.0,1.0,False,0.0,False,text," .
"
1,1.0,0.0,2.0,False,0.0,True,text," A
"
1,4.0,0.0,0.0,False,0.0,False,text," (12)
"
7,3.42857142857,0.142857142857,0.442857142857,False,0.0,True,text," Proof. Letting Wv = G(Av) \ (+
"
1,4.0,0.0,0.0,False,0.0,False,text," have
"
11,3.27272727273,0.0,0.215151515152,False,0.0,True,text," T (v)), where (v) is the label of vertex v, we
"
1,1.0,0.0,2.0,False,0.0,False,text," p
"
3,1.66666666667,0.0,0.777777777778,False,0.0,True,text," T = YvT
"
3,1.66666666667,0.0,0.222222222222,False,0.0,False,body," (1  xB)
"
2,2.0,0.0,0.666666666667,False,0.0,True,after_body," T (v)
"
1,3.0,0.0,1.0,False,0.0,True,text," Yu+
"
3,3.33333333333,0.0,0.777777777778,False,0.0,True,text," I indep. YAI
"
2,3.0,0.0,0.5,False,0.0,True,text," XI(Av )
"
2,3.5,0.0,1.125,False,0.0,False,text," xAu YBWv
"
3,3.66666666667,0.0,0.888888888889,False,0.0,False,text," xA YBG(Av )\I
"
1,1.0,0.0,1.0,False,0.0,False,text," .
"
3,1.66666666667,0.0,0.222222222222,False,0.0,False,text," (1  xB)
"
1,1.0,0.0,0.0,False,0.0,False,text," 6
"
5,4.0,0.0,0.0,False,0.0,True,text," This can be rewritten as
"
1,1.0,0.0,2.0,False,0.0,False,text," p
"
3,1.66666666667,0.0,0.777777777778,False,0.0,True,text," T = YvT
"
1,3.0,0.0,1.0,False,0.0,False,text," xAu
"
3,1.33333333333,0.0,0.333333333333,False,0.0,False,text," 1  xAu
"
1,2.0,0.0,1.0,False,0.0,False,text," xA
"
3,1.0,0.0,0.333333333333,False,0.0,False,text," 1  xA
"
2,2.0,0.0,0.666666666667,False,0.0,True,text," T (v)
"
1,3.0,0.0,1.0,False,0.0,True,text," Yu+
"
3,3.33333333333,0.0,0.777777777778,False,0.0,True,text," I indep. YAI
"
1,6.0,0.0,0.833333333333,False,0.0,True,text," XI(Av)
"
13,4.61538461538,0.0,0.0804195804196,False,0.0,False,text," by dividing the top and bottom byQBG(Av)(1  xB). Since taking the double
"
3,4.33333333333,0.0,0.777777777778,False,0.0,False,text," product QvT Qu+
"
12,3.91666666667,0.0,0.277777777778,False,0.0,True,text," T (v) is a equivalent to taking a product QvT \{v0}, where
"
17,3.58823529412,0.0,0.264705882353,False,0.0,False,text," v0 denotes the root vertex of T , this gives line (12), recalling that xA = A
"
1,3.0,0.0,0.666666666667,False,0.0,True,text," A+1
"
3,2.33333333333,0.0,0.333333333333,False,0.0,False,text," and so xA
"
1,3.0,0.0,1.0,False,0.0,False,text," 1xA
"
2,1.5,0.0,0.5,False,0.0,False,text," = A.
"
15,3.86666666667,0.0,0.0,False,0.0,True,text," This is applied now in the same way as the branching lemma used by Moser
"
10,3.7,0.0,0.2,False,0.0,False,text," and Tardos, but with regards to the family T S
"
6,4.83333333333,0.0,0.166666666667,False,0.0,True,text," A of strongly proper witness trees
"
15,4.26666666667,0.0,0.133333333333,False,0.0,False,text," rooted with A, instead of the family TA of proper witness trees rooted with A.
"
2,3.0,0.0,0.0,False,0.0,True,text," We have
"
5,1.0,0.0,0.8,False,0.0,False,text," 1  XT T S
"
1,1.0,0.0,1.0,False,0.0,True,text," A
"
3,0.666666666667,0.0,1.0,False,0.0,True,text," T  1
"
1,1.0,0.0,2.0,False,0.0,False,text," p
"
4,1.5,0.0,1.125,False,0.0,True,text," A0 XT T S
"
2,2.0,0.0,1.16666666667,False,0.0,True,text," A YvT
"
1,2.0,0.0,1.5,False,0.0,True,text," Au
"
3,3.33333333333,0.0,0.777777777778,False,0.0,True,text," I indep. YAI
"
2,3.0,0.0,0.5,False,0.0,True,text," XI(Av )
"
1,1.0,0.0,1.0,False,0.0,False,text," .
"
1,1.0,0.0,2.0,False,0.0,True,text," A
"
1,4.0,0.0,0.0,False,0.0,False,text," (13)
"
15,4.33333333333,0.0,0.0,False,0.0,True,text," Putting this together with line (11), we see then that the condition (5) of the
"
3,6.0,0.0,0.0,False,0.0,False,text," theorem implies that
"
3,2.33333333333,0.0,0.633333333333,False,0.0,True,text," E(NA)  A,
"
1,4.0,0.0,0.0,False,0.0,False,text," (14)
"
11,5.90909090909,0.0,0.0,False,0.0,False,text," completing the proof the the Moser-Tardos algorithm still terminates in ex-
"
2,5.0,0.0,0.0,False,0.0,False,text," pected time
"
1,2.0,0.0,1.5,False,0.0,True,text," A.
"
1,3.0,0.0,1.33333333333,False,0.0,True,text," XAA
"
1,15.0,0.0,0.0,False,1.0,True,text," Acknowledgement
"
13,4.61538461538,0.0,0.0,False,0.0,True,text," Id like to thank Joel Spencer for some helpful discussions on this note.
"
1,10.0,0.0,0.0,False,1.0,True,text," References
"
13,5.0,0.153846153846,0.0,False,0.0,False,text," [1] N. Alon. A parallel algorithmic version of the local lemma, Random Struc-
"
6,5.33333333333,0.5,0.0,False,0.0,False,text," tures and Algorithms 2 (1991) 367378.
"
12,5.08333333333,0.0833333333333,0.0,False,0.0,False,text," [2] Joszef Beck. An Algorithmic Approach to the Lovasz Local Lemma, Ran-
"
7,5.71428571429,0.571428571429,0.0,False,0.0,False,text," dom Structures and Algorithms 2 (1991) 343365.
"
11,5.09090909091,0.0,0.0,False,0.0,False,text," [3] R. Bissacot, R. Fernandez, A. Procacci, B. Scoppola. Title: An
"
7,5.42857142857,0.0,0.0,False,0.0,False,text," the Lovsz Local Lemma via Cluster Expansion.
"
2,6.5,0.0,0.0,False,0.0,True,text," Improvement of
"
3,14.0,0.0,0.0,False,0.0,False,text," http://arxiv.org/abs/0910.1824v2 (10 pages).
"
1,1.0,0.0,0.0,False,0.0,False,text," 7
"
11,5.63636363636,0.0,0.0,False,0.0,False,text," [4] A. Czumaj and C. Scheideler. Coloring non-uniform hypergraphs: a new
"
10,5.9,0.2,0.0,False,0.0,False,text," algorithmic approach to the general Lovasz local lemma, Symposium on
"
4,7.25,0.5,0.0,False,0.0,True,text," Discrete Algorithms (2000) 3039.
"
12,5.33333333333,0.0,0.0,False,0.0,False,text," [5] P. Erdos and L. Lovasz. Problems and results on 3-chromatic hypergraphs
"
11,5.63636363636,0.378787878788,0.0,False,0.0,False,text," and some related questions, in Innite and Finite sets II, North-Holland,
"
12,4.08333333333,0.0,0.0,False,0.0,False,text," pp. 609627, A. Hajnal, R. Rado, and V. T. Sos (Eds.) (1975).
"
12,5.5,0.0,0.0,False,0.0,False,text," [6] P. Erdos, J. Spencer. Lopsided Lovasz Local Lemma and Latin transversals,
"
6,5.83333333333,0.5,0.0,False,0.0,True,text," Discrete Applied Math. 30 (1991) 151154.
"
11,5.81818181818,0.0,0.0,False,0.0,False,text," [7] R. Fernandez, A. Procacci. Cluster expansion for abstract polymer mod-
"
10,5.9,0.3,0.0,False,0.0,False,text," els: New bounds from an old approach. Communications in Mathematical
"
5,5.8,0.2,0.0,False,0.0,True,text," Physics 274 (2007) 123140 (2007).
"
11,5.36363636364,0.0,0.0,False,0.0,False,text," [8] K. Kolipaka, M. Szegedy. Moser and Tardos meet Lovasz. Manuscript
"
1,7.0,0.0,0.0,False,0.0,False,text," (2010).
"
13,4.76923076923,0.0,0.0,False,0.0,False,text," [9] M. Molloy and B. Reed. Further Algorithmic Aspects of the Local Lemma,
"
12,4.58333333333,1.0,0.0,False,0.0,True,text," Proceedings of the 30th Annual ACM Symposium on the Theory of Com-
"
3,6.33333333333,0.333333333333,0.0,False,0.0,False,text," puting (1998) 524529.
"
14,4.57142857143,0.0,0.0,False,0.0,False,text," [10] R. Moser and G. Tardos. A constructive proof of the general Lovasz Local
"
9,4.11111111111,0.222222222222,0.0,True,0.0,True,text," Lemma, J. ACM 57 (2010) Article 11, 15 pages.
"
12,5.08333333333,0.0,0.0,False,0.0,False,text," [11] S. Ndreca, A. Procacci, B. Scoppola. Improved bounds on coloring of
"
2,19.0,0.0,0.0,False,0.0,False,text," graphs, http://arxiv.org/abs/1005.1875.
"
13,5.23076923077,0.0,0.0,False,0.0,False,text," [12] A. Scott and A. Sokal. The repulsive lattice gas, the independent-set poly-
"
12,5.0,0.25,0.0,False,0.0,False,text," nomial, and the Lovasz local lemma, J. Stat. Phys. 118 (2005) 11511261.
"
12,5.25,0.0833333333333,0.0,False,0.0,False,text," [13] J. Shearer. On a problem of Spencer, Combinatorica 5 (1985), 241-245.
"
11,6.0,0.0,0.0,False,0.0,False,text," [14] A. Srinivasan. Improved algorithmic versions of the Lovasz Local Lemma,
"
9,6.55555555556,1.0,0.0,False,0.0,True,text," Proceedings of the nineteenth annual ACM-SIAM symposium on Discrete
"
4,7.25,0.5,0.0,False,0.0,False,text," algorithms (SODA) (2008) 611620.
"
1,1.0,0.0,0.0,False,0.0,False,text," 8
"
