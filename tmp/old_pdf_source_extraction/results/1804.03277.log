This is pdfTeX, Version 3.14159265-2.6-1.40.16 (TeX Live 2015/Debian) (preloaded format=pdflatex 2017.8.22)  14 OCT 2018 21:53
entering extended mode
 restricted \write18 enabled.
 %&-line parsing enabled.
**source_extraction/results/1804.03277.tex
(./source_extraction/results/1804.03277.tex
LaTeX2e <2016/02/01>
Babel <3.9q> and hyphenation patterns for 1 language(s) loaded.
(/usr/share/texlive/texmf-dist/tex/latex/amscls/amsart.cls
Document Class: amsart 2015/03/04 v2.20.2
\linespacing=\dimen102
\normalparindent=\dimen103
\normaltopskip=\skip41
(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amsmath.sty
Package: amsmath 2016/03/03 v2.15a AMS math features
\@mathmargin=\skip42

For additional information on amsmath, use the `?' option.
(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amstext.sty
Package: amstext 2000/06/29 v2.01 AMS text

(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amsgen.sty
File: amsgen.sty 1999/11/30 v2.0 generic functions
\@emptytoks=\toks14
\ex@=\dimen104
))
(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amsbsy.sty
Package: amsbsy 1999/11/29 v1.2d Bold Symbols
\pmbraise@=\dimen105
)
(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amsopn.sty
Package: amsopn 1999/12/14 v2.01 operator names
)
\inf@bad=\count79
LaTeX Info: Redefining \frac on input line 199.
\uproot@=\count80
\leftroot@=\count81
LaTeX Info: Redefining \overline on input line 297.
\classnum@=\count82
\DOTSCASE@=\count83
LaTeX Info: Redefining \ldots on input line 394.
LaTeX Info: Redefining \dots on input line 397.
LaTeX Info: Redefining \cdots on input line 518.
\Mathstrutbox@=\box26
\strutbox@=\box27
\big@size=\dimen106
LaTeX Font Info:    Redeclaring font encoding OML on input line 630.
LaTeX Font Info:    Redeclaring font encoding OMS on input line 631.
\macc@depth=\count84
\c@MaxMatrixCols=\count85
\dotsspace@=\muskip10
\c@parentequation=\count86
\dspbrk@lvl=\count87
\tag@help=\toks15
\row@=\count88
\column@=\count89
\maxfields@=\count90
\andhelp@=\toks16
\eqnshift@=\dimen107
\alignsep@=\dimen108
\tagshift@=\dimen109
\tagwidth@=\dimen110
\totwidth@=\dimen111
\lineht@=\dimen112
\@envbody=\toks17
\multlinegap=\skip43
\multlinetaggap=\skip44
\mathdisplay@stack=\toks18
LaTeX Info: Redefining \[ on input line 2735.
LaTeX Info: Redefining \] on input line 2736.
)
LaTeX Font Info:    Try loading font information for U+msa on input line 388.

(/usr/share/texlive/texmf-dist/tex/latex/amsfonts/umsa.fd
File: umsa.fd 2013/01/14 v3.01 AMS symbols A
)
(/usr/share/texlive/texmf-dist/tex/latex/amsfonts/amsfonts.sty
Package: amsfonts 2013/01/14 v3.01 Basic AMSFonts support
\symAMSa=\mathgroup4
\symAMSb=\mathgroup5
LaTeX Font Info:    Overwriting math alphabet `\mathfrak' in version `bold'
(Font)                  U/euf/m/n --> U/euf/b/n on input line 106.
)
\copyins=\insert199
\abstractbox=\box28
\listisep=\skip45
\c@part=\count91
\c@section=\count92
\c@subsection=\count93
\c@subsubsection=\count94
\c@paragraph=\count95
\c@subparagraph=\count96
\c@figure=\count97
\c@table=\count98
\abovecaptionskip=\skip46
\belowcaptionskip=\skip47
\captionindent=\dimen113
\thm@style=\toks19
\thm@bodyfont=\toks20
\thm@headfont=\toks21
\thm@notefont=\toks22
\thm@headpunct=\toks23
\thm@preskip=\skip48
\thm@postskip=\skip49
\thm@headsep=\skip50
\dth@everypar=\toks24
)
(/usr/share/texlive/texmf-dist/tex/latex/jknapltx/mathrsfs.sty
Package: mathrsfs 1996/01/01 Math RSFS package v1.0 (jk)
\symrsfs=\mathgroup6
)
(/usr/share/texlive/texmf-dist/tex/latex/tools/enumerate.sty
Package: enumerate 2015/07/23 v3.00 enumerate extensions (DPC)
\@enLab=\toks25
)
(/usr/share/texlive/texmf-dist/tex/latex/amsfonts/amssymb.sty
Package: amssymb 2013/01/14 v3.01 AMS font symbols
)
(/usr/share/texlive/texmf-dist/tex/latex/microtype/microtype.sty
Package: microtype 2013/05/23 v2.5a Micro-typographical refinements (RS)

(/usr/share/texlive/texmf-dist/tex/latex/graphics/keyval.sty
Package: keyval 2014/10/28 v1.15 key=value parser (DPC)
\KV@toks@=\toks26
)
\MT@toks=\toks27
\MT@count=\count99
LaTeX Info: Redefining \textls on input line 766.
\MT@outer@kern=\dimen114
LaTeX Info: Redefining \textmicrotypecontext on input line 1285.
\MT@listname@count=\count100

(/usr/share/texlive/texmf-dist/tex/latex/microtype/microtype-pdftex.def
File: microtype-pdftex.def 2013/05/23 v2.5a Definitions specific to pdftex (RS)

LaTeX Info: Redefining \lsstyle on input line 915.
LaTeX Info: Redefining \lslig on input line 915.
\MT@outer@space=\skip51
)
Package microtype Info: Loading configuration file microtype.cfg.

(/usr/share/texlive/texmf-dist/tex/latex/microtype/microtype.cfg
File: microtype.cfg 2013/05/23 v2.5a microtype main configuration file (RS)
))
(/usr/share/texlive/texmf-dist/tex/latex/pgf/frontendlayer/tikz.sty
(/usr/share/texlive/texmf-dist/tex/latex/pgf/basiclayer/pgf.sty
(/usr/share/texlive/texmf-dist/tex/latex/pgf/utilities/pgfrcs.sty
(/usr/share/texlive/texmf-dist/tex/generic/pgf/utilities/pgfutil-common.tex
\pgfutil@everybye=\toks28
\pgfutil@tempdima=\dimen115
\pgfutil@tempdimb=\dimen116

(/usr/share/texlive/texmf-dist/tex/generic/pgf/utilities/pgfutil-common-lists.t
ex)) (/usr/share/texlive/texmf-dist/tex/generic/pgf/utilities/pgfutil-latex.def
\pgfutil@abb=\box29
(/usr/share/texlive/texmf-dist/tex/latex/ms/everyshi.sty
Package: everyshi 2001/05/15 v3.00 EveryShipout Package (MS)
))
(/usr/share/texlive/texmf-dist/tex/generic/pgf/utilities/pgfrcs.code.tex
Package: pgfrcs 2015/08/07 v3.0.1a (rcs-revision 1.31)
))
Package: pgf 2015/08/07 v3.0.1a (rcs-revision 1.15)

(/usr/share/texlive/texmf-dist/tex/latex/pgf/basiclayer/pgfcore.sty
(/usr/share/texlive/texmf-dist/tex/latex/graphics/graphicx.sty
Package: graphicx 2014/10/28 v1.0g Enhanced LaTeX Graphics (DPC,SPQR)

(/usr/share/texlive/texmf-dist/tex/latex/graphics/graphics.sty
Package: graphics 2016/01/03 v1.0q Standard LaTeX Graphics (DPC,SPQR)

(/usr/share/texlive/texmf-dist/tex/latex/graphics/trig.sty
Package: trig 2016/01/03 v1.10 sin cos tan (DPC)
)
(/usr/share/texlive/texmf-dist/tex/latex/latexconfig/graphics.cfg
File: graphics.cfg 2010/04/23 v1.9 graphics configuration of TeX Live
)
Package graphics Info: Driver file: pdftex.def on input line 95.

(/usr/share/texlive/texmf-dist/tex/latex/pdftex-def/pdftex.def
File: pdftex.def 2011/05/27 v0.06d Graphics/color for pdfTeX

(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/infwarerr.sty
Package: infwarerr 2010/04/08 v1.3 Providing info/warning/error messages (HO)
)
(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/ltxcmds.sty
Package: ltxcmds 2011/11/09 v1.22 LaTeX kernel commands for general use (HO)
)
\Gread@gobject=\count101
))
\Gin@req@height=\dimen117
\Gin@req@width=\dimen118
)
(/usr/share/texlive/texmf-dist/tex/latex/pgf/systemlayer/pgfsys.sty
(/usr/share/texlive/texmf-dist/tex/generic/pgf/systemlayer/pgfsys.code.tex
Package: pgfsys 2014/07/09 v3.0.1a (rcs-revision 1.48)

(/usr/share/texlive/texmf-dist/tex/generic/pgf/utilities/pgfkeys.code.tex
\pgfkeys@pathtoks=\toks29
\pgfkeys@temptoks=\toks30

(/usr/share/texlive/texmf-dist/tex/generic/pgf/utilities/pgfkeysfiltered.code.t
ex
\pgfkeys@tmptoks=\toks31
))
\pgf@x=\dimen119
\pgf@y=\dimen120
\pgf@xa=\dimen121
\pgf@ya=\dimen122
\pgf@xb=\dimen123
\pgf@yb=\dimen124
\pgf@xc=\dimen125
\pgf@yc=\dimen126
\w@pgf@writea=\write3
\r@pgf@reada=\read1
\c@pgf@counta=\count102
\c@pgf@countb=\count103
\c@pgf@countc=\count104
\c@pgf@countd=\count105
\t@pgf@toka=\toks32
\t@pgf@tokb=\toks33
\t@pgf@tokc=\toks34
 (/usr/share/texlive/texmf-dist/tex/generic/pgf/systemlayer/pgf.cfg
File: pgf.cfg 2008/05/14  (rcs-revision 1.7)
)
Driver file for pgf: pgfsys-pdftex.def

(/usr/share/texlive/texmf-dist/tex/generic/pgf/systemlayer/pgfsys-pdftex.def
File: pgfsys-pdftex.def 2014/10/11  (rcs-revision 1.35)

(/usr/share/texlive/texmf-dist/tex/generic/pgf/systemlayer/pgfsys-common-pdf.de
f
File: pgfsys-common-pdf.def 2013/10/10  (rcs-revision 1.13)
)))
(/usr/share/texlive/texmf-dist/tex/generic/pgf/systemlayer/pgfsyssoftpath.code.
tex
File: pgfsyssoftpath.code.tex 2013/09/09  (rcs-revision 1.9)
\pgfsyssoftpath@smallbuffer@items=\count106
\pgfsyssoftpath@bigbuffer@items=\count107
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/systemlayer/pgfsysprotocol.code.
tex
File: pgfsysprotocol.code.tex 2006/10/16  (rcs-revision 1.4)
)) (/usr/share/texlive/texmf-dist/tex/latex/xcolor/xcolor.sty
Package: xcolor 2007/01/21 v2.11 LaTeX color extensions (UK)

(/usr/share/texlive/texmf-dist/tex/latex/latexconfig/color.cfg
File: color.cfg 2007/01/18 v1.5 color configuration of teTeX/TeXLive
)
Package xcolor Info: Driver file: pdftex.def on input line 225.
Package xcolor Info: Model `cmy' substituted by `cmy0' on input line 1337.
Package xcolor Info: Model `hsb' substituted by `rgb' on input line 1341.
Package xcolor Info: Model `RGB' extended on input line 1353.
Package xcolor Info: Model `HTML' substituted by `rgb' on input line 1355.
Package xcolor Info: Model `Hsb' substituted by `hsb' on input line 1356.
Package xcolor Info: Model `tHsb' substituted by `hsb' on input line 1357.
Package xcolor Info: Model `HSB' substituted by `hsb' on input line 1358.
Package xcolor Info: Model `Gray' substituted by `gray' on input line 1359.
Package xcolor Info: Model `wave' substituted by `hsb' on input line 1360.
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcore.code.tex
Package: pgfcore 2010/04/11 v3.0.1a (rcs-revision 1.7)

(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmath.code.tex
(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathcalc.code.tex
(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathutil.code.tex)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathparser.code.tex
\pgfmath@dimen=\dimen127
\pgfmath@count=\count108
\pgfmath@box=\box30
\pgfmath@toks=\toks35
\pgfmath@stack@operand=\toks36
\pgfmath@stack@operation=\toks37
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.code.tex
(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.basic.code
.tex)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.trigonomet
ric.code.tex)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.random.cod
e.tex)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.comparison
.code.tex)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.base.code.
tex)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.round.code
.tex)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.misc.code.
tex)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.integerari
thmetics.code.tex)))
(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathfloat.code.tex
\c@pgfmathroundto@lastzeros=\count109
))
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcorepoints.code.te
x
File: pgfcorepoints.code.tex 2013/10/07  (rcs-revision 1.27)
\pgf@picminx=\dimen128
\pgf@picmaxx=\dimen129
\pgf@picminy=\dimen130
\pgf@picmaxy=\dimen131
\pgf@pathminx=\dimen132
\pgf@pathmaxx=\dimen133
\pgf@pathminy=\dimen134
\pgf@pathmaxy=\dimen135
\pgf@xx=\dimen136
\pgf@xy=\dimen137
\pgf@yx=\dimen138
\pgf@yy=\dimen139
\pgf@zx=\dimen140
\pgf@zy=\dimen141
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcorepathconstruct.
code.tex
File: pgfcorepathconstruct.code.tex 2013/10/07  (rcs-revision 1.29)
\pgf@path@lastx=\dimen142
\pgf@path@lasty=\dimen143
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcorepathusage.code
.tex
File: pgfcorepathusage.code.tex 2014/11/02  (rcs-revision 1.24)
\pgf@shorten@end@additional=\dimen144
\pgf@shorten@start@additional=\dimen145
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcorescopes.code.te
x
File: pgfcorescopes.code.tex 2015/05/08  (rcs-revision 1.46)
\pgfpic=\box31
\pgf@hbox=\box32
\pgf@layerbox@main=\box33
\pgf@picture@serial@count=\count110
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcoregraphicstate.c
ode.tex
File: pgfcoregraphicstate.code.tex 2014/11/02  (rcs-revision 1.12)
\pgflinewidth=\dimen146
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcoretransformation
s.code.tex
File: pgfcoretransformations.code.tex 2015/08/07  (rcs-revision 1.20)
\pgf@pt@x=\dimen147
\pgf@pt@y=\dimen148
\pgf@pt@temp=\dimen149
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcorequick.code.tex
File: pgfcorequick.code.tex 2008/10/09  (rcs-revision 1.3)
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcoreobjects.code.t
ex
File: pgfcoreobjects.code.tex 2006/10/11  (rcs-revision 1.2)
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcorepathprocessing
.code.tex
File: pgfcorepathprocessing.code.tex 2013/09/09  (rcs-revision 1.9)
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcorearrows.code.te
x
File: pgfcorearrows.code.tex 2015/05/14  (rcs-revision 1.43)
\pgfarrowsep=\dimen150
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcoreshade.code.tex
File: pgfcoreshade.code.tex 2013/07/15  (rcs-revision 1.15)
\pgf@max=\dimen151
\pgf@sys@shading@range@num=\count111
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcoreimage.code.tex
File: pgfcoreimage.code.tex 2013/07/15  (rcs-revision 1.18)

(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcoreexternal.code.
tex
File: pgfcoreexternal.code.tex 2014/07/09  (rcs-revision 1.21)
\pgfexternal@startupbox=\box34
))
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcorelayers.code.te
x
File: pgfcorelayers.code.tex 2013/07/18  (rcs-revision 1.7)
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcoretransparency.c
ode.tex
File: pgfcoretransparency.code.tex 2013/09/30  (rcs-revision 1.5)
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcorepatterns.code.
tex
File: pgfcorepatterns.code.tex 2013/11/07  (rcs-revision 1.5)
)))
(/usr/share/texlive/texmf-dist/tex/generic/pgf/modules/pgfmoduleshapes.code.tex
File: pgfmoduleshapes.code.tex 2014/03/21  (rcs-revision 1.35)
\pgfnodeparttextbox=\box35
) (/usr/share/texlive/texmf-dist/tex/generic/pgf/modules/pgfmoduleplot.code.tex
File: pgfmoduleplot.code.tex 2015/08/03  (rcs-revision 1.13)
)
(/usr/share/texlive/texmf-dist/tex/latex/pgf/compatibility/pgfcomp-version-0-65
.sty
Package: pgfcomp-version-0-65 2007/07/03 v3.0.1a (rcs-revision 1.7)
\pgf@nodesepstart=\dimen152
\pgf@nodesepend=\dimen153
)
(/usr/share/texlive/texmf-dist/tex/latex/pgf/compatibility/pgfcomp-version-1-18
.sty
Package: pgfcomp-version-1-18 2007/07/23 v3.0.1a (rcs-revision 1.1)
)) (/usr/share/texlive/texmf-dist/tex/latex/pgf/utilities/pgffor.sty
(/usr/share/texlive/texmf-dist/tex/latex/pgf/utilities/pgfkeys.sty
(/usr/share/texlive/texmf-dist/tex/generic/pgf/utilities/pgfkeys.code.tex))
(/usr/share/texlive/texmf-dist/tex/latex/pgf/math/pgfmath.sty
(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmath.code.tex))
(/usr/share/texlive/texmf-dist/tex/generic/pgf/utilities/pgffor.code.tex
Package: pgffor 2013/12/13 v3.0.1a (rcs-revision 1.25)

(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmath.code.tex)
\pgffor@iter=\dimen154
\pgffor@skip=\dimen155
\pgffor@stack=\toks38
\pgffor@toks=\toks39
))
(/usr/share/texlive/texmf-dist/tex/generic/pgf/frontendlayer/tikz/tikz.code.tex
Package: tikz 2015/08/07 v3.0.1a (rcs-revision 1.151)

(/usr/share/texlive/texmf-dist/tex/generic/pgf/libraries/pgflibraryplothandlers
.code.tex
File: pgflibraryplothandlers.code.tex 2013/08/31 v3.0.1a (rcs-revision 1.20)
\pgf@plot@mark@count=\count112
\pgfplotmarksize=\dimen156
)
\tikz@lastx=\dimen157
\tikz@lasty=\dimen158
\tikz@lastxsaved=\dimen159
\tikz@lastysaved=\dimen160
\tikzleveldistance=\dimen161
\tikzsiblingdistance=\dimen162
\tikz@figbox=\box36
\tikz@figbox@bg=\box37
\tikz@tempbox=\box38
\tikz@tempbox@bg=\box39
\tikztreelevel=\count113
\tikznumberofchildren=\count114
\tikznumberofcurrentchild=\count115
\tikz@fig@count=\count116

(/usr/share/texlive/texmf-dist/tex/generic/pgf/modules/pgfmodulematrix.code.tex
File: pgfmodulematrix.code.tex 2013/09/17  (rcs-revision 1.8)
\pgfmatrixcurrentrow=\count117
\pgfmatrixcurrentcolumn=\count118
\pgf@matrix@numberofcolumns=\count119
)
\tikz@expandcount=\count120

(/usr/share/texlive/texmf-dist/tex/generic/pgf/frontendlayer/tikz/libraries/tik
zlibrarytopaths.code.tex
File: tikzlibrarytopaths.code.tex 2008/06/17 v3.0.1a (rcs-revision 1.2)
)))
(/usr/share/texlive/texmf-dist/tex/latex/hyperref/hyperref.sty
Package: hyperref 2012/11/06 v6.83m Hypertext links for LaTeX

(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/hobsub-hyperref.sty
Package: hobsub-hyperref 2012/05/28 v1.13 Bundle oberdiek, subset hyperref (HO)


(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/hobsub-generic.sty
Package: hobsub-generic 2012/05/28 v1.13 Bundle oberdiek, subset generic (HO)
Package: hobsub 2012/05/28 v1.13 Construct package bundles (HO)
Package hobsub Info: Skipping package `infwarerr' (already loaded).
Package hobsub Info: Skipping package `ltxcmds' (already loaded).
Package: ifluatex 2010/03/01 v1.3 Provides the ifluatex switch (HO)
Package ifluatex Info: LuaTeX not detected.
Package: ifvtex 2010/03/01 v1.5 Detect VTeX and its facilities (HO)
Package ifvtex Info: VTeX not detected.
Package: intcalc 2007/09/27 v1.1 Expandable calculations with integers (HO)
Package: ifpdf 2011/01/30 v2.3 Provides the ifpdf switch (HO)
Package ifpdf Info: pdfTeX in PDF mode is detected.
Package: etexcmds 2011/02/16 v1.5 Avoid name clashes with e-TeX commands (HO)
Package etexcmds Info: Could not find \expanded.
(etexcmds)             That can mean that you are not using pdfTeX 1.50 or
(etexcmds)             that some package has redefined \expanded.
(etexcmds)             In the latter case, load this package earlier.
Package: kvsetkeys 2012/04/25 v1.16 Key value parser (HO)
Package: kvdefinekeys 2011/04/07 v1.3 Define keys (HO)
Package: pdftexcmds 2011/11/29 v0.20 Utility functions of pdfTeX for LuaTeX (HO
)
Package pdftexcmds Info: LuaTeX not detected.
Package pdftexcmds Info: \pdf@primitive is available.
Package pdftexcmds Info: \pdf@ifprimitive is available.
Package pdftexcmds Info: \pdfdraftmode found.
Package: pdfescape 2011/11/25 v1.13 Implements pdfTeX's escape features (HO)
Package: bigintcalc 2012/04/08 v1.3 Expandable calculations on big integers (HO
)
Package: bitset 2011/01/30 v1.1 Handle bit-vector datatype (HO)
Package: uniquecounter 2011/01/30 v1.2 Provide unlimited unique counter (HO)
)
Package hobsub Info: Skipping package `hobsub' (already loaded).
Package: letltxmacro 2010/09/02 v1.4 Let assignment for LaTeX macros (HO)
Package: hopatch 2012/05/28 v1.2 Wrapper for package hooks (HO)
Package: xcolor-patch 2011/01/30 xcolor patch
Package: atveryend 2011/06/30 v1.8 Hooks at the very end of document (HO)
Package atveryend Info: \enddocument detected (standard20110627).
Package: atbegshi 2011/10/05 v1.16 At begin shipout hook (HO)
Package: refcount 2011/10/16 v3.4 Data extraction from label references (HO)
Package: hycolor 2011/01/30 v1.7 Color options for hyperref/bookmark (HO)
)
(/usr/share/texlive/texmf-dist/tex/generic/ifxetex/ifxetex.sty
Package: ifxetex 2010/09/12 v0.6 Provides ifxetex conditional
)
(/usr/share/texlive/texmf-dist/tex/latex/oberdiek/auxhook.sty
Package: auxhook 2011/03/04 v1.3 Hooks for auxiliary files (HO)
)
(/usr/share/texlive/texmf-dist/tex/latex/oberdiek/kvoptions.sty
Package: kvoptions 2011/06/30 v3.11 Key value format for package options (HO)
)
\@linkdim=\dimen163
\Hy@linkcounter=\count121
\Hy@pagecounter=\count122

(/usr/share/texlive/texmf-dist/tex/latex/hyperref/pd1enc.def
File: pd1enc.def 2012/11/06 v6.83m Hyperref: PDFDocEncoding definition (HO)
)
\Hy@SavedSpaceFactor=\count123

(/usr/share/texlive/texmf-dist/tex/latex/latexconfig/hyperref.cfg
File: hyperref.cfg 2002/06/06 v1.2 hyperref configuration of TeXLive
)
Package hyperref Info: Option `colorlinks' set `true' on input line 4319.
Package hyperref Info: Option `bookmarks' set `false' on input line 4319.
Package hyperref Info: Hyper figures OFF on input line 4443.
Package hyperref Info: Link nesting OFF on input line 4448.
Package hyperref Info: Hyper index ON on input line 4451.
Package hyperref Info: Plain pages OFF on input line 4458.
Package hyperref Info: Backreferencing OFF on input line 4463.
Package hyperref Info: Implicit mode ON; LaTeX internals redefined.
Package hyperref Info: Bookmarks OFF on input line 4694.
\c@Hy@tempcnt=\count124

(/usr/share/texlive/texmf-dist/tex/latex/url/url.sty
\Urlmuskip=\muskip11
Package: url 2013/09/16  ver 3.4  Verb mode for urls, etc.
)
LaTeX Info: Redefining \url on input line 5041.
\XeTeXLinkMargin=\dimen164
\Fld@menulength=\count125
\Field@Width=\dimen165
\Fld@charsize=\dimen166
Package hyperref Info: Hyper figures OFF on input line 6295.
Package hyperref Info: Link nesting OFF on input line 6300.
Package hyperref Info: Hyper index ON on input line 6303.
Package hyperref Info: backreferencing OFF on input line 6310.
Package hyperref Info: Link coloring ON on input line 6313.
Package hyperref Info: Link coloring with OCG OFF on input line 6320.
Package hyperref Info: PDF/A mode OFF on input line 6325.
LaTeX Info: Redefining \ref on input line 6365.
LaTeX Info: Redefining \pageref on input line 6369.
\Hy@abspage=\count126
\c@Item=\count127
\c@Hfootnote=\count128
)

Package hyperref Message: Driver: hpdftex.

(/usr/share/texlive/texmf-dist/tex/latex/hyperref/hpdftex.def
File: hpdftex.def 2012/11/06 v6.83m Hyperref driver for pdfTeX
\Fld@listcount=\count129
\c@bookmark@seq@number=\count130

(/usr/share/texlive/texmf-dist/tex/latex/oberdiek/rerunfilecheck.sty
Package: rerunfilecheck 2011/04/15 v1.7 Rerun checks for auxiliary files (HO)
Package uniquecounter Info: New unique counter `rerunfilecheck' on input line 2
82.
)
\Hy@SectionHShift=\skip52
)
(/usr/share/texlive/texmf-dist/tex/latex/doi/doi.sty
Package: doi 2007/07/24 handle doi numbers
) (./extract.sty
(/usr/share/texlive/texmf-dist/tex/latex/environ/environ.sty
Package: environ 2014/05/04 v0.3 A new way to define environments

(/usr/share/texlive/texmf-dist/tex/latex/trimspaces/trimspaces.sty
Package: trimspaces 2009/09/17 v1.1 Trim spaces around a token list
))
(/usr/share/texlive/texmf-dist/tex/latex/etextools/etextools.sty
Package: etextools 2010/12/07 v3.1415926 e-TeX more useful tools for LaTeX pack
age writers

(/usr/share/texlive/texmf-dist/tex/latex/etex-pkg/etex.sty
Package: etex 2016/01/11 v2.6 eTeX basic definition package (PEB,DPC)
\et@xins=\count131
)
(/usr/share/texlive/texmf-dist/tex/latex/etoolbox/etoolbox.sty
Package: etoolbox 2015/08/02 v2.2a e-TeX tools for LaTeX (JAW)
\etb@tempcnta=\count132
)
\ettl@fter=\count133
\ettl@for@nested=\count277
)
(/usr/share/texmf/tex/latex/preview/preview.sty
Package: preview 2010/02/14 11.88 (AUCTeX/preview-latex)

(/usr/share/texmf/tex/latex/preview/prtightpage.def
\PreviewBorder=\dimen167
)
\pr@snippet=\count134
\pr@box=\box40
\pr@output=\toks40
)
\c@propcounter=\count135
\mybox=\box41
)
\c@thm=\count136
\c@theorem=\count137

(source_extraction/results/1804.03277.aux)
\openout1 = `1804.03277.aux'.

LaTeX Font Info:    Checking defaults for OML/cmm/m/it on input line 129.
LaTeX Font Info:    ... okay on input line 129.
LaTeX Font Info:    Checking defaults for T1/cmr/m/n on input line 129.
LaTeX Font Info:    ... okay on input line 129.
LaTeX Font Info:    Checking defaults for OT1/cmr/m/n on input line 129.
LaTeX Font Info:    ... okay on input line 129.
LaTeX Font Info:    Checking defaults for OMS/cmsy/m/n on input line 129.
LaTeX Font Info:    ... okay on input line 129.
LaTeX Font Info:    Checking defaults for OMX/cmex/m/n on input line 129.
LaTeX Font Info:    ... okay on input line 129.
LaTeX Font Info:    Checking defaults for U/cmr/m/n on input line 129.
LaTeX Font Info:    ... okay on input line 129.
LaTeX Font Info:    Checking defaults for PD1/pdf/m/n on input line 129.
LaTeX Font Info:    ... okay on input line 129.
LaTeX Font Info:    Try loading font information for U+msa on input line 129.

(/usr/share/texlive/texmf-dist/tex/latex/amsfonts/umsa.fd
File: umsa.fd 2013/01/14 v3.01 AMS symbols A
)
LaTeX Font Info:    Try loading font information for U+msb on input line 129.

(/usr/share/texlive/texmf-dist/tex/latex/amsfonts/umsb.fd
File: umsb.fd 2013/01/14 v3.01 AMS symbols B
)
LaTeX Font Info:    Try loading font information for U+rsfs on input line 129.

(/usr/share/texlive/texmf-dist/tex/latex/jknapltx/ursfs.fd
File: ursfs.fd 1998/03/24 rsfs font definition file (jk)
)
LaTeX Info: Redefining \microtypecontext on input line 129.
Package microtype Info: Generating PDF output.
Package microtype Info: Character protrusion enabled (level 2).
Package microtype Info: Using default protrusion set `alltext'.
Package microtype Info: Automatic font expansion enabled (level 2),
(microtype)             stretch: 20, shrink: 20, step: 1, non-selected.
Package microtype Info: Using default expansion set `basictext'.
Package microtype Info: No adjustment of tracking.
Package microtype Info: No adjustment of interword spacing.
Package microtype Info: No adjustment of character kerning.

(/usr/share/texlive/texmf-dist/tex/latex/microtype/mt-cmr.cfg
File: mt-cmr.cfg 2013/05/19 v2.2 microtype config. file: Computer Modern Roman 
(RS)
)
ABD: EveryShipout initializing macros
(/usr/share/texlive/texmf-dist/tex/context/base/supp-pdf.mkii
[Loading MPS to PDF converter (version 2006.09.02).]
\scratchcounter=\count138
\scratchdimen=\dimen168
\scratchbox=\box42
\nofMPsegments=\count139
\nofMParguments=\count140
\everyMPshowfont=\toks41
\MPscratchCnt=\count141
\MPscratchDim=\dimen169
\MPnumerator=\count142
\makeMPintoPDFobject=\count143
\everyMPtoPDFconversion=\toks42
) (/usr/share/texlive/texmf-dist/tex/latex/oberdiek/epstopdf-base.sty
Package: epstopdf-base 2010/02/09 v2.5 Base part for package epstopdf

(/usr/share/texlive/texmf-dist/tex/latex/oberdiek/grfext.sty
Package: grfext 2010/08/19 v1.1 Manage graphics extensions (HO)
)
Package grfext Info: Graphics extension search list:
(grfext)             [.png,.pdf,.jpg,.mps,.jpeg,.jbig2,.jb2,.PNG,.PDF,.JPG,.JPE
G,.JBIG2,.JB2,.eps]
(grfext)             \AppendGraphicsExtensions on input line 452.

(/usr/share/texlive/texmf-dist/tex/latex/latexconfig/epstopdf-sys.cfg
File: epstopdf-sys.cfg 2010/07/13 v1.3 Configuration of (r)epstopdf for TeX Liv
e
))
\AtBeginShipoutBox=\box43
Package hyperref Info: Link coloring ON on input line 129.

(/usr/share/texlive/texmf-dist/tex/latex/hyperref/nameref.sty
Package: nameref 2012/10/27 v2.43 Cross-referencing by name of section

(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/gettitlestring.sty
Package: gettitlestring 2010/12/03 v1.4 Cleanup title references (HO)
)
\c@section@level=\count144
)
LaTeX Info: Redefining \ref on input line 129.
LaTeX Info: Redefining \pageref on input line 129.
LaTeX Info: Redefining \nameref on input line 129.

Preview: Fontsize 10pt
Preview: PDFoutput 1
\extractedfile=\write4
\openout4 = `propositions.txt'.

(source_extraction/results/1804.03277.toc)
\tf@toc=\write5
\openout5 = `1804.03277.toc'.


(/usr/share/texlive/texmf-dist/tex/latex/microtype/mt-msa.cfg
File: mt-msa.cfg 2006/02/04 v1.1 microtype config. file: AMS symbols (a) (RS)
)
(/usr/share/texlive/texmf-dist/tex/latex/microtype/mt-msb.cfg
File: mt-msb.cfg 2005/06/01 v1.0 microtype config. file: AMS symbols (b) (RS)
)
Overfull \hbox (4.26692pt too wide) in paragraph at lines 165--173
\OT1/cmr/m/n/10 (-20) starting from a Poisson process over $
$ with intensity $\OML/cmm/m/it/10 T^^V$\OT1/cmr/m/n/10 (-20) , one attaches $[
](\OML/cmm/m/it/10 TS\OT1/cmr/m/n/10 (-20) (\OML/cmm/m/it/10 x[]\OT1/cmr/m/n/10
 (-20) ))$
 []


LaTeX Warning: Reference `sec:samplingwithloops' on page 2 undefined on input l
ine 229.

Preview: Tightpage -32891 -32891 32891 32891
[1{/var/lib/texmf/fonts/map/pdftex/updmap/pdftex.map}]
Overfull \hbox (12.0pt too wide) in paragraph at lines 264--264
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.264 \end{definition}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.264 \end{definition}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.264 \end{definition}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.264 \end{definition}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.264 \end{definition}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.264 \end{definition}
                      
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.264 \end{definition}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/m/it/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.264 \end{definition}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.264 \end{definition}
                      
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.264 \end{definition}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.264 \end{definition}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Underfull \vbox (badness 10000) has occurred while \output is active []

 [2]
Overfull \hbox (12.0pt too wide) in paragraph at lines 346--346
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.346 \end{definition}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.346 \end{definition}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.346 \end{definition}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.346 \end{definition}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.346 \end{definition}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.346 \end{definition}
                      
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.346 \end{definition}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/m/it/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.346 \end{definition}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.346 \end{definition}
                      
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.346 \end{definition}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.346 \end{definition}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[3]
Overfull \hbox (12.0pt too wide) in paragraph at lines 404--404
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.404 \end{remark}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.404 \end{remark}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.404 \end{remark}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.404 \end{remark}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.404 \end{remark}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.404 \end{remark}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.404 \end{remark}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/m/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.404 \end{remark}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.404 \end{remark}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.404 \end{remark}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.404 \end{remark}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Underfull \vbox (badness 10000) has occurred while \output is active []



LaTeX Warning: Reference `app:local-finite' on page 5 undefined on input line 4
13.


Underfull \vbox (badness 10000) has occurred while \output is active []

 [4]
Overfull \hbox (12.0pt too wide) in paragraph at lines 443--443
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.443 \end{proposition}
                       
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.443 \end{proposition}
                       
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.443 \end{proposition}
                       
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.443 \end{proposition}
                       
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.443 \end{proposition}
                       
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.443 \end{proposition}
                       
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.443 \end{proposition}
                       
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.443 \end{proposition}
                       
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.443 \end{proposition}
                       
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.443 \end{proposition}
                       
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.443 \end{proposition}
                       
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Underfull \vbox (badness 10000) has occurred while \output is active []

LaTeX Font Info:    Try loading font information for U+euf on input line 487.

(/usr/share/texlive/texmf-dist/tex/latex/amsfonts/ueuf.fd
File: ueuf.fd 2013/01/14 v3.01 Euler Fraktur
)
(/usr/share/texlive/texmf-dist/tex/latex/microtype/mt-euf.cfg
File: mt-euf.cfg 2006/07/03 v1.1 microtype config. file: AMS Euler Fraktur (RS)

)
Underfull \vbox (badness 1803) has occurred while \output is active []



LaTeX Warning: Reference `sec:idnetify' on page 8 undefined on input line 562.

[5]
Overfull \hbox (12.0pt too wide) in paragraph at lines 572--572
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.572 \end{theorem}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.572 \end{theorem}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.572 \end{theorem}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.572 \end{theorem}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.572 \end{theorem}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.572 \end{theorem}
                   
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.572 \end{theorem}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.572 \end{theorem}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.572 \end{theorem}
                   
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.572 \end{theorem}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.572 \end{theorem}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `sec:idnetify' on page 8 undefined on input line 592.

[6]
Overfull \hbox (12.0pt too wide) in paragraph at lines 592--592
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.592 \end{remark}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.592 \end{remark}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.592 \end{remark}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.592 \end{remark}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.592 \end{remark}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.592 \end{remark}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.592 \end{remark}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/m/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.592 \end{remark}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.592 \end{remark}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.592 \end{remark}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.592 \end{remark}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[7]
Overfull \hbox (12.0pt too wide) in paragraph at lines 616--616
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.616 \end{definition}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.616 \end{definition}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.616 \end{definition}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.616 \end{definition}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.616 \end{definition}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.616 \end{definition}
                      
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.616 \end{definition}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.616 \end{definition}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.616 \end{definition}
                      
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.616 \end{definition}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.616 \end{definition}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[8]
Overfull \hbox (12.0pt too wide) in paragraph at lines 632--632
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.632 \end{definition}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.632 \end{definition}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.632 \end{definition}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.632 \end{definition}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.632 \end{definition}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.632 \end{definition}
                      
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.632 \end{definition}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/m/it/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.632 \end{definition}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.632 \end{definition}
                      
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.632 \end{definition}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.632 \end{definition}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[9]
Overfull \hbox (95.91368pt too wide) in paragraph at lines 664--679
\OT1/cmr/m/n/10 (-20) more general[][][][][] setting. [] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.679 \end{definition}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.679 \end{definition}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.679 \end{definition}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.679 \end{definition}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.679 \end{definition}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.679 \end{definition}
                      
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.679 \end{definition}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.679 \end{definition}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.679 \end{definition}
                      
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.679 \end{definition}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.679 \end{definition}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Underfull \vbox (badness 10000) has occurred while \output is active []

 [10]
Overfull \hbox (12.0pt too wide) in paragraph at lines 736--736
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.736 \end{definition}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.736 \end{definition}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.736 \end{definition}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.736 \end{definition}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.736 \end{definition}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.736 \end{definition}
                      
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.736 \end{definition}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/m/it/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.736 \end{definition}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.736 \end{definition}
                      
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.736 \end{definition}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.736 \end{definition}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `sec:prelim' on page 10 undefined on input line 746.

[11]
Overfull \hbox (12.0pt too wide) in paragraph at lines 758--758
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.758 \end{theorem}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.758 \end{theorem}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.758 \end{theorem}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.758 \end{theorem}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.758 \end{theorem}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.758 \end{theorem}
                   
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.758 \end{theorem}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/m/n/7 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.758 \end{theorem}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.758 \end{theorem}
                   
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.758 \end{theorem}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.758 \end{theorem}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `sec:prelim' on page 11 undefined on input line 771.

[12]
Overfull \hbox (12.0pt too wide) in paragraph at lines 771--771
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.771 \end{remark}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.771 \end{remark}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.771 \end{remark}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.771 \end{remark}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.771 \end{remark}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.771 \end{remark}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.771 \end{remark}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.771 \end{remark}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.771 \end{remark}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.771 \end{remark}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.771 \end{remark}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `sec:subgraph-counts' on page 11 undefined on input li
ne 775.


LaTeX Warning: Reference `sec:sampling' on page 11 undefined on input line 776.


[13]
Overfull \hbox (12.0pt too wide) in paragraph at lines 781--781
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.781 \end{theorem}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.781 \end{theorem}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.781 \end{theorem}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.781 \end{theorem}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.781 \end{theorem}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.781 \end{theorem}
                   
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.781 \end{theorem}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.781 \end{theorem}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.781 \end{theorem}
                   
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.781 \end{theorem}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.781 \end{theorem}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Underfull \vbox (badness 1590) has occurred while \output is active []

 [14]
Overfull \hbox (12.0pt too wide) in paragraph at lines 833--833
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.833 \end{definition}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.833 \end{definition}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.833 \end{definition}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.833 \end{definition}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.833 \end{definition}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.833 \end{definition}
                      
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.833 \end{definition}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/m/it/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.833 \end{definition}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.833 \end{definition}
                      
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.833 \end{definition}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.833 \end{definition}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `sec:prelim' on page 12 undefined on input line 843.


LaTeX Warning: Reference `sec:prelim' on page 12 undefined on input line 848.

[15]
Overfull \hbox (12.0pt too wide) in paragraph at lines 854--854
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.854 \end{theorem}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.854 \end{theorem}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.854 \end{theorem}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.854 \end{theorem}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.854 \end{theorem}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.854 \end{theorem}
                   
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.854 \end{theorem}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.854 \end{theorem}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.854 \end{theorem}
                   
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.854 \end{theorem}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.854 \end{theorem}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[16]
Overfull \hbox (12.0pt too wide) in paragraph at lines 865--865
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.865 \end{remark}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.865 \end{remark}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.865 \end{remark}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.865 \end{remark}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.865 \end{remark}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.865 \end{remark}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.865 \end{remark}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/m/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.865 \end{remark}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.865 \end{remark}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.865 \end{remark}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.865 \end{remark}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `sec:prelim' on page 12 undefined on input line 872.

[17]
Overfull \hbox (12.0pt too wide) in paragraph at lines 877--877
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.877 \end{proposition}
                       
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.877 \end{proposition}
                       
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.877 \end{proposition}
                       
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.877 \end{proposition}
                       
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.877 \end{proposition}
                       
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.877 \end{proposition}
                       
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.877 \end{proposition}
                       
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.877 \end{proposition}
                       
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.877 \end{proposition}
                       
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.877 \end{proposition}
                       
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.877 \end{proposition}
                       
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `sec:reg' on page 12 undefined on input line 889.


LaTeX Warning: Reference `sec:subgraph-counts' on page 12 undefined on input li
ne 889.


LaTeX Warning: Reference `sec:sampling' on page 12 undefined on input line 889.



LaTeX Warning: Reference `sec:sampling' on page 12 undefined on input line 891.



Underfull \vbox (badness 10000) has occurred while \output is active []

 [18]
Overfull \hbox (12.0pt too wide) in paragraph at lines 897--897
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.897 \end{theorem}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.897 \end{theorem}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.897 \end{theorem}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.897 \end{theorem}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.897 \end{theorem}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.897 \end{theorem}
                   
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.897 \end{theorem}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.897 \end{theorem}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.897 \end{theorem}
                   
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.897 \end{theorem}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.897 \end{theorem}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `d22-def' on page 13 undefined on input line 931.


LaTeX Warning: Reference `tdel22-def' on page 13 undefined on input line 931.

[19]
Overfull \hbox (12.0pt too wide) in paragraph at lines 931--931
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.931 \end{remark}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.931 \end{remark}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.931 \end{remark}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.931 \end{remark}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.931 \end{remark}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.931 \end{remark}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.931 \end{remark}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/m/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.931 \end{remark}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.931 \end{remark}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.931 \end{remark}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.931 \end{remark}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[20]
Overfull \hbox (12.0pt too wide) in paragraph at lines 948--948
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.948 \end{definition}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.948 \end{definition}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.948 \end{definition}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.948 \end{definition}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.948 \end{definition}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.948 \end{definition}
                      
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.948 \end{definition}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/m/it/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.948 \end{definition}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.948 \end{definition}
                      
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.948 \end{definition}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.948 \end{definition}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Underfull \vbox (badness 10000) has occurred while \output is active []



LaTeX Warning: Reference `sec:tight' on page 14 undefined on input line 951.


LaTeX Warning: Reference `sec:reg' on page 14 undefined on input line 966.


LaTeX Warning: Reference `sec:tight' on page 14 undefined on input line 971.

[21]
Overfull \hbox (12.0pt too wide) in paragraph at lines 979--979
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.979 \end{theorem}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.979 \end{theorem}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.979 \end{theorem}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.979 \end{theorem}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.979 \end{theorem}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.979 \end{theorem}
                   
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.979 \end{theorem}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.979 \end{theorem}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.979 \end{theorem}
                   
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.979 \end{theorem}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.979 \end{theorem}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `sec:reg' on page 14 undefined on input line 995.

[22]
Overfull \hbox (12.0pt too wide) in paragraph at lines 995--995
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.995 \end{remark}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.995 \end{remark}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.995 \end{remark}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.995 \end{remark}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.995 \end{remark}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.995 \end{remark}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.995 \end{remark}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.995 \end{remark}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.995 \end{remark}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.995 \end{remark}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.995 \end{remark}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Underfull \vbox (badness 10000) has occurred while \output is active []



LaTeX Warning: Reference `sec:sampling' on page 15 undefined on input line 1037
.

[23]
Overfull \hbox (12.0pt too wide) in paragraph at lines 1053--1053
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1053 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1053 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1053 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1053 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1053 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1053 \end{theorem}
                    
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.1053 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.1053 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.1053 \end{theorem}
                    
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1053 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1053 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[24]
Overfull \hbox (12.0pt too wide) in paragraph at lines 1065--1065
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1065 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1065 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1065 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1065 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1065 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1065 \end{remark}
                   
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.1065 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/m/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.1065 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.1065 \end{remark}
                   
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1065 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1065 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (1.94037pt too wide) in paragraph at lines 1105--1112
\U/msb/m/n/10 W\OT1/cmr/m/n/10 (-20) (\OML/cmm/m/it/10 G[]; \OT1/cmr/m/n/10 (-2
0) 1\OML/cmm/m/it/10 =[]\OT1/cmr/m/n/10 (-20) )$ are GP-convergent. Since by de
finition, the stretched canonical
 []

[25]
Overfull \hbox (12.0pt too wide) in paragraph at lines 1128--1128
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1128 \end{definition}
                       
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1128 \end{definition}
                       
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1128 \end{definition}
                       
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1128 \end{definition}
                       
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1128 \end{definition}
                       
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1128 \end{definition}
                       
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.1128 \end{definition}
                       
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/m/it/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.1128 \end{definition}
                       
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.1128 \end{definition}
                       
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1128 \end{definition}
                       
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1128 \end{definition}
                       
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `sec:UIandUTR' on page 17 undefined on input line 1141
.

[26]
Overfull \hbox (12.0pt too wide) in paragraph at lines 1155--1155
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1155 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1155 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1155 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1155 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1155 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1155 \end{theorem}
                    
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.1155 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.1155 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.1155 \end{theorem}
                    
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1155 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1155 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `sec:UIandUTR' on page 17 undefined on input line 1161
.

[27]
Overfull \hbox (12.0pt too wide) in paragraph at lines 1169--1169
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1169 \end{definition}
                       
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1169 \end{definition}
                       
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1169 \end{definition}
                       
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1169 \end{definition}
                       
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1169 \end{definition}
                       
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1169 \end{definition}
                       
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.1169 \end{definition}
                       
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/m/it/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.1169 \end{definition}
                       
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.1169 \end{definition}
                       
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1169 \end{definition}
                       
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1169 \end{definition}
                       
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `sec:UIandUTR' on page 17 undefined on input line 1176
.

[28]
Overfull \hbox (12.0pt too wide) in paragraph at lines 1195--1195
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1195 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1195 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1195 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1195 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1195 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1195 \end{theorem}
                    
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.1195 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.1195 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.1195 \end{theorem}
                    
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1195 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1195 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `sec:UIandUTR' on page 17 undefined on input line 1198
.

[29]
Overfull \hbox (12.0pt too wide) in paragraph at lines 1214--1214
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1214 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1214 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1214 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1214 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1214 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1214 \end{theorem}
                    
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.1214 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.1214 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.1214 \end{theorem}
                    
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1214 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1214 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Underfull \vbox (badness 10000) has occurred while \output is active []

 [30]
Overfull \hbox (12.0pt too wide) in paragraph at lines 1236--1236
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1236 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1236 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1236 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1236 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1236 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1236 \end{remark}
                   
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.1236 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/m/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.1236 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.1236 \end{remark}
                   
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1236 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1236 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `sec:prelim' on page 18 undefined on input line 1261.


LaTeX Warning: Reference `sec:reg' on page 18 undefined on input line 1261.


LaTeX Warning: Reference `sec:subgraph-counts' on page 18 undefined on input li
ne 1262.


Underfull \vbox (badness 10000) has occurred while \output is active []



LaTeX Warning: Reference `d22-def' on page 19 undefined on input line 1296.

[31]
Overfull \hbox (12.0pt too wide) in paragraph at lines 1319--1319
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1319 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1319 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1319 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1319 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1319 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1319 \end{theorem}
                    
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.1319 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/m/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.1319 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.1319 \end{theorem}
                    
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1319 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1319 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[32]
Overfull \hbox (12.0pt too wide) in paragraph at lines 1376--1376
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1376 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1376 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1376 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1376 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1376 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1376 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.1376 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.1376 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.1376 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1376 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1376 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[33]
Overfull \hbox (12.0pt too wide) in paragraph at lines 1410--1410
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1410 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1410 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1410 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1410 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1410 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1410 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.1410 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/m/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.1410 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.1410 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1410 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1410 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Underfull \vbox (badness 10000) has occurred while \output is active []


Overfull \hbox (5.85922pt too wide) detected at line 1483
[]\OML/cmm/m/it/10 p\OT1/cmr/m/n/10 (\OML/cmm/m/it/10 t\OT1/cmr/m/n/10 ) = []\O
ML/cmm/m/it/10 :
 []

[34]
Overfull \hbox (12.0pt too wide) in paragraph at lines 1504--1504
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1504 \end{proposition}
                        
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1504 \end{proposition}
                        
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1504 \end{proposition}
                        
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1504 \end{proposition}
                        
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1504 \end{proposition}
                        
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1504 \end{proposition}
                        
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.1504 \end{proposition}
                        
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/m/it/5 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.1504 \end{proposition}
                        
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.1504 \end{proposition}
                        
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1504 \end{proposition}
                        
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1504 \end{proposition}
                        
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[35]
Overfull \hbox (12.0pt too wide) in paragraph at lines 1635--1635
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1635 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1635 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1635 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1635 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1635 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1635 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.1635 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/m/it/5 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.1635 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.1635 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1635 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1635 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[36]
Overfull \hbox (12.0pt too wide) in paragraph at lines 1694--1694
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1694 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1694 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1694 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1694 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1694 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1694 \end{remark}
                   
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.1694 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/m/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.1694 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.1694 \end{remark}
                   
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1694 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1694 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[37]
Overfull \hbox (12.0pt too wide) in paragraph at lines 1714--1714
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1714 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1714 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1714 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1714 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1714 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1714 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.1714 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/m/it/5 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.1714 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.1714 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1714 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1714 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[38]
Overfull \hbox (12.0pt too wide) in paragraph at lines 1757--1757
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1757 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1757 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1757 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1757 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1757 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1757 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.1757 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.1757 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.1757 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1757 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1757 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `tdel22-def' on page 27 undefined on input line 1818.

[39]
Overfull \hbox (12.0pt too wide) in paragraph at lines 1833--1833
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1833 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1833 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1833 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1833 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1833 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1833 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.1833 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.1833 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.1833 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1833 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1833 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `Delta-jbl-triangle' on page 27 undefined on input lin
e 1945.


LaTeX Warning: Reference `Delta22-triangle' on page 27 undefined on input line 
1945.


LaTeX Warning: Reference `Delta22-triangle' on page 28 undefined on input line 
1945.


LaTeX Warning: Reference `Delta-jbl-triangle' on page 28 undefined on input lin
e 1945.

[40]
Overfull \hbox (12.0pt too wide) in paragraph at lines 1968--1968
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1968 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1968 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1968 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1968 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1968 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1968 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.1968 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.1968 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.1968 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1968 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1968 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Underfull \vbox (badness 1931) has occurred while \output is active []



LaTeX Warning: Reference `d22-def' on page 30 undefined on input line 2085.

[41]
Overfull \hbox (12.0pt too wide) in paragraph at lines 2085--2085
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2085 \end{example}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2085 \end{example}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.2085 \end{example}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.2085 \end{example}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2085 \end{example}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.2085 \end{example}
                    
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.2085 \end{example}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/5 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.2085 \end{example}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.2085 \end{example}
                    
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.2085 \end{example}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.2085 \end{example}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[42]
Overfull \hbox (12.0pt too wide) in paragraph at lines 2099--2099
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2099 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2099 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.2099 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.2099 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2099 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.2099 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.2099 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.2099 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.2099 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.2099 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.2099 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[43]
Overfull \hbox (12.0pt too wide) in paragraph at lines 2137--2137
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2137 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2137 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.2137 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.2137 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2137 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.2137 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.2137 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.2137 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.2137 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.2137 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.2137 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[44]
Overfull \hbox (12.0pt too wide) in paragraph at lines 2221--2221
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2221 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2221 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.2221 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.2221 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2221 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.2221 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.2221 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/m/n/7 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.2221 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.2221 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.2221 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.2221 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[45]
Overfull \hbox (12.0pt too wide) in paragraph at lines 2383--2383
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2383 \end{proposition}
                        
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2383 \end{proposition}
                        
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.2383 \end{proposition}
                        
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.2383 \end{proposition}
                        
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2383 \end{proposition}
                        
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.2383 \end{proposition}
                        
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.2383 \end{proposition}
                        
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.2383 \end{proposition}
                        
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.2383 \end{proposition}
                        
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.2383 \end{proposition}
                        
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.2383 \end{proposition}
                        
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[46]
Overfull \hbox (12.0pt too wide) in paragraph at lines 2407--2407
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2407 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2407 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.2407 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.2407 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2407 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.2407 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.2407 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.2407 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.2407 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.2407 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.2407 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[47]
Overfull \hbox (12.0pt too wide) in paragraph at lines 2521--2521
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2521 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2521 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.2521 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.2521 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2521 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.2521 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.2521 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.2521 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.2521 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.2521 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.2521 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[48]
Overfull \hbox (12.0pt too wide) in paragraph at lines 2595--2595
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2595 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2595 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.2595 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.2595 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2595 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.2595 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.2595 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.2595 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.2595 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.2595 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.2595 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[49]
Overfull \hbox (12.0pt too wide) in paragraph at lines 2636--2636
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2636 \end{proposition}
                        
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2636 \end{proposition}
                        
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.2636 \end{proposition}
                        
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.2636 \end{proposition}
                        
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2636 \end{proposition}
                        
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.2636 \end{proposition}
                        
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.2636 \end{proposition}
                        
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.2636 \end{proposition}
                        
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.2636 \end{proposition}
                        
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.2636 \end{proposition}
                        
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.2636 \end{proposition}
                        
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[50]
Overfull \hbox (12.0pt too wide) in paragraph at lines 2648--2648
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2648 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2648 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.2648 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.2648 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2648 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.2648 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.2648 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.2648 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.2648 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.2648 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.2648 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[51]
Overfull \hbox (12.0pt too wide) in paragraph at lines 2688--2688
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2688 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2688 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.2688 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.2688 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2688 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.2688 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.2688 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.2688 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.2688 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.2688 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.2688 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[52]
Overfull \hbox (12.0pt too wide) in paragraph at lines 2720--2720
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2720 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2720 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.2720 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.2720 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2720 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.2720 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.2720 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.2720 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.2720 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.2720 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.2720 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[53]
Overfull \hbox (12.0pt too wide) in paragraph at lines 2782--2782
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2782 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2782 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.2782 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.2782 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2782 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.2782 \end{remark}
                   
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.2782 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/m/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.2782 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.2782 \end{remark}
                   
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.2782 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.2782 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[54]
Overfull \hbox (12.0pt too wide) in paragraph at lines 2799--2799
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2799 \end{proposition}
                        
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2799 \end{proposition}
                        
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.2799 \end{proposition}
                        
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.2799 \end{proposition}
                        
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2799 \end{proposition}
                        
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.2799 \end{proposition}
                        
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.2799 \end{proposition}
                        
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.2799 \end{proposition}
                        
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.2799 \end{proposition}
                        
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.2799 \end{proposition}
                        
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.2799 \end{proposition}
                        
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Underfull \vbox (badness 10000) has occurred while \output is active []


Underfull \vbox (badness 10000) has occurred while \output is active []

 [55]
Overfull \hbox (12.0pt too wide) in paragraph at lines 2921--2921
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2921 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2921 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.2921 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.2921 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2921 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.2921 \end{theorem}
                    
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.2921 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.2921 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.2921 \end{theorem}
                    
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.2921 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.2921 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Underfull \vbox (badness 10000) has occurred while \output is active []

 [56]
Overfull \hbox (12.0pt too wide) in paragraph at lines 2932--2932
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2932 \end{corollary}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2932 \end{corollary}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.2932 \end{corollary}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.2932 \end{corollary}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2932 \end{corollary}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.2932 \end{corollary}
                      
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.2932 \end{corollary}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/m/n/7 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.2932 \end{corollary}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.2932 \end{corollary}
                      
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.2932 \end{corollary}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.2932 \end{corollary}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[57]
Overfull \hbox (12.0pt too wide) in paragraph at lines 2961--2961
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2961 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2961 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.2961 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.2961 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2961 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.2961 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.2961 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.2961 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.2961 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.2961 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.2961 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[58]
Overfull \hbox (12.0pt too wide) in paragraph at lines 3064--3064
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3064 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3064 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.3064 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.3064 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3064 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.3064 \end{remark}
                   
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.3064 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/m/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.3064 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.3064 \end{remark}
                   
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.3064 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.3064 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[59]
Overfull \hbox (12.0pt too wide) in paragraph at lines 3112--3112
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3112 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3112 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.3112 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.3112 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3112 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.3112 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.3112 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.3112 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.3112 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.3112 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.3112 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[60]
! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3284 \end{proposition}
                        
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3284 \end{proposition}
                        
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.3284 \end{proposition}
                        
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.3284 \end{proposition}
                        
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3284 \end{proposition}
                        
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.3284 \end{proposition}
                        
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.3284 \end{proposition}
                        
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.3284 \end{proposition}
                        
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.3284 \end{proposition}
                        
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.3284 \end{proposition}
                        
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.3284 \end{proposition}
                        
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[61]
Overfull \hbox (12.0pt too wide) in paragraph at lines 3360--3360
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3360 \end{proposition}
                        
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3360 \end{proposition}
                        
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.3360 \end{proposition}
                        
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.3360 \end{proposition}
                        
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3360 \end{proposition}
                        
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.3360 \end{proposition}
                        
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.3360 \end{proposition}
                        
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/m/it/5 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.3360 \end{proposition}
                        
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.3360 \end{proposition}
                        
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.3360 \end{proposition}
                        
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.3360 \end{proposition}
                        
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Underfull \vbox (badness 2717) has occurred while \output is active []


Underfull \hbox (badness 2772) in paragraph at lines 3410--3410
[]\OT1/cmr/m/n/10 (+20) The following example shows that this straightforward g
eneralization of
 []

[62]
Overfull \hbox (12.0pt too wide) in paragraph at lines 3410--3410
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3410 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3410 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.3410 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.3410 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3410 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.3410 \end{remark}
                   
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.3410 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/m/it/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.3410 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.3410 \end{remark}
                   
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.3410 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.3410 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[63]
Underfull \vbox (badness 10000) has occurred while \output is active []


! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3430 \end{definition}
                       
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3430 \end{definition}
                       
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.3430 \end{definition}
                       
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.3430 \end{definition}
                       
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3430 \end{definition}
                       
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.3430 \end{definition}
                       
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.3430 \end{definition}
                       
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/m/n/7 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.3430 \end{definition}
                       
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.3430 \end{definition}
                       
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.3430 \end{definition}
                       
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.3430 \end{definition}
                       
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[64]
Overfull \hbox (12.0pt too wide) in paragraph at lines 3453--3453
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3453 \end{definition}
                       
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3453 \end{definition}
                       
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.3453 \end{definition}
                       
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.3453 \end{definition}
                       
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3453 \end{definition}
                       
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.3453 \end{definition}
                       
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.3453 \end{definition}
                       
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/m/n/5 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.3453 \end{definition}
                       
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.3453 \end{definition}
                       
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.3453 \end{definition}
                       
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.3453 \end{definition}
                       
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[65]
Overfull \hbox (12.0pt too wide) in paragraph at lines 3479--3479
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3479 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3479 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.3479 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.3479 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3479 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.3479 \end{theorem}
                    
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.3479 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/m/it/5 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.3479 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.3479 \end{theorem}
                    
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.3479 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.3479 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `D-jbl>eps' on page 54 undefined on input line 3602.


LaTeX Warning: Reference `W-jbl>eps' on page 54 undefined on input line 3602.

[66]
Overfull \hbox (12.0pt too wide) in paragraph at lines 3611--3611
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3611 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3611 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.3611 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.3611 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3611 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.3611 \end{remark}
                   
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.3611 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/m/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.3611 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.3611 \end{remark}
                   
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.3611 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.3611 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[67]
Overfull \hbox (12.0pt too wide) in paragraph at lines 3625--3625
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3625 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3625 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.3625 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.3625 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3625 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.3625 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.3625 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.3625 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.3625 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.3625 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.3625 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[68]
Overfull \hbox (12.0pt too wide) in paragraph at lines 3652--3652
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3652 \end{corollary}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3652 \end{corollary}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.3652 \end{corollary}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.3652 \end{corollary}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3652 \end{corollary}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.3652 \end{corollary}
                      
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.3652 \end{corollary}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.3652 \end{corollary}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.3652 \end{corollary}
                      
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.3652 \end{corollary}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.3652 \end{corollary}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[69]
Overfull \hbox (12.0pt too wide) in paragraph at lines 3684--3684
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3684 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3684 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.3684 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.3684 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3684 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.3684 \end{theorem}
                    
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.3684 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.3684 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.3684 \end{theorem}
                    
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.3684 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.3684 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[70]
Overfull \hbox (12.0pt too wide) in paragraph at lines 3765--3765
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3765 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3765 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.3765 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.3765 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3765 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.3765 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.3765 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.3765 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.3765 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.3765 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.3765 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[71]
Overfull \hbox (12.0pt too wide) in paragraph at lines 3808--3808
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3808 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3808 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.3808 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.3808 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3808 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.3808 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.3808 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/m/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.3808 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.3808 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.3808 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.3808 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[72]
Overfull \hbox (12.0pt too wide) in paragraph at lines 3818--3818
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3818 \end{claim}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3818 \end{claim}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.3818 \end{claim}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.3818 \end{claim}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3818 \end{claim}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.3818 \end{claim}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.3818 \end{claim}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.3818 \end{claim}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.3818 \end{claim}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.3818 \end{claim}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.3818 \end{claim}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Underfull \vbox (badness 4217) has occurred while \output is active []

 [73]
Overfull \hbox (12.0pt too wide) in paragraph at lines 4006--4006
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4006 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4006 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.4006 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.4006 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4006 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.4006 \end{remark}
                   
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.4006 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/m/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.4006 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.4006 \end{remark}
                   
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.4006 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.4006 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `sec:counting' on page 62 undefined on input line 4066
.

[74]
Overfull \hbox (12.0pt too wide) in paragraph at lines 4079--4079
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4079 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4079 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.4079 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.4079 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4079 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.4079 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.4079 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.4079 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.4079 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.4079 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.4079 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[75]
Overfull \hbox (12.0pt too wide) in paragraph at lines 4089--4089
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4089 \end{corollary}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4089 \end{corollary}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.4089 \end{corollary}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.4089 \end{corollary}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4089 \end{corollary}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.4089 \end{corollary}
                      
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.4089 \end{corollary}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.4089 \end{corollary}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.4089 \end{corollary}
                      
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.4089 \end{corollary}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.4089 \end{corollary}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[76]
Overfull \hbox (12.0pt too wide) in paragraph at lines 4117--4117
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4117 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4117 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.4117 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.4117 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4117 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.4117 \end{theorem}
                    
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.4117 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.4117 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.4117 \end{theorem}
                    
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.4117 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.4117 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `sec:counting' on page 62 undefined on input line 4119
.


LaTeX Warning: Reference `sec:samplingandsubgraphs' on page 62 undefined on inp
ut line 4121.


LaTeX Warning: Reference `sec:metric-implies-GP' on page 62 undefined on input 
line 4122.


LaTeX Warning: Reference `sec:tight' on page 62 undefined on input line 4126.


LaTeX Warning: Reference `rho-of-W-def' on page 62 undefined on input line 4159
.

[77]
Overfull \hbox (12.0pt too wide) in paragraph at lines 4159--4159
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4159 \end{definition}
                       
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4159 \end{definition}
                       
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.4159 \end{definition}
                       
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.4159 \end{definition}
                       
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4159 \end{definition}
                       
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.4159 \end{definition}
                       
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.4159 \end{definition}
                       
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/m/n/7 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.4159 \end{definition}
                       
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.4159 \end{definition}
                       
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.4159 \end{definition}
                       
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.4159 \end{definition}
                       
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[78]
Overfull \hbox (12.0pt too wide) in paragraph at lines 4184--4184
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4184 \end{definition}
                       
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4184 \end{definition}
                       
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.4184 \end{definition}
                       
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.4184 \end{definition}
                       
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4184 \end{definition}
                       
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.4184 \end{definition}
                       
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.4184 \end{definition}
                       
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.4184 \end{definition}
                       
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.4184 \end{definition}
                       
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.4184 \end{definition}
                       
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.4184 \end{definition}
                       
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[79]
Overfull \hbox (12.0pt too wide) in paragraph at lines 4210--4210
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4210 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4210 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.4210 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.4210 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4210 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.4210 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.4210 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.4210 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.4210 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.4210 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.4210 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Underfull \vbox (badness 10000) has occurred while \output is active []

 [80]
Overfull \hbox (12.0pt too wide) in paragraph at lines 4247--4247
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4247 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4247 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.4247 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.4247 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4247 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.4247 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.4247 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.4247 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.4247 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.4247 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.4247 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Underfull \vbox (badness 10000) has occurred while \output is active []


Underfull \vbox (badness 2245) has occurred while \output is active []

 [81]
Overfull \hbox (12.0pt too wide) in paragraph at lines 4415--4415
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4415 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4415 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.4415 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.4415 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4415 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.4415 \end{remark}
                   
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.4415 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/m/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.4415 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.4415 \end{remark}
                   
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.4415 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.4415 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[82]
Overfull \hbox (12.0pt too wide) in paragraph at lines 4423--4423
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4423 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4423 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.4423 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.4423 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4423 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.4423 \end{remark}
                   
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.4423 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/m/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.4423 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.4423 \end{remark}
                   
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.4423 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.4423 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (24.21838pt too wide) in paragraph at lines 4427--4429
 \OT1/cmr/m/n/10 (-20) 6.2.\OT1/cmr/bx/n/10 GP-convergence and subgraph counts.
[] \OT1/cmr/m/n/10 (-20) In this subsection, we prove Theorem 6.3
 []

[83]
Overfull \hbox (12.0pt too wide) in paragraph at lines 4447--4447
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4447 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4447 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.4447 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.4447 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4447 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.4447 \end{theorem}
                    
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.4447 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.4447 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.4447 \end{theorem}
                    
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.4447 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.4447 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Underfull \vbox (badness 1052) has occurred while \output is active []

 [84]
Overfull \hbox (12.0pt too wide) in paragraph at lines 4477--4477
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4477 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4477 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.4477 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.4477 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4477 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.4477 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.4477 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/m/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.4477 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.4477 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.4477 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.4477 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[85]
Overfull \hbox (12.0pt too wide) in paragraph at lines 4560--4560
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4560 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4560 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.4560 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.4560 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4560 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.4560 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.4560 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.4560 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.4560 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.4560 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.4560 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[86]
Overfull \hbox (12.0pt too wide) in paragraph at lines 4645--4645
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4645 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4645 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.4645 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.4645 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4645 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.4645 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.4645 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.4645 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.4645 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.4645 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.4645 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[87]
Overfull \hbox (12.0pt too wide) in paragraph at lines 4668--4668
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4668 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4668 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.4668 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.4668 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4668 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.4668 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.4668 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.4668 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.4668 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.4668 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.4668 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `eqnmomgenfuncbound' on page 71 undefined on input lin
e 4749.


Overfull \hbox (3.53735pt too wide) in paragraph at lines 4749--4749
[] 
 []


LaTeX Warning: Reference `eqnmomgenfuncbound' on page 72 undefined on input lin
e 4749.

[88]
Overfull \hbox (12.0pt too wide) in paragraph at lines 4785--4785
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4785 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4785 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.4785 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.4785 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4785 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.4785 \end{theorem}
                    
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.4785 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.4785 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.4785 \end{theorem}
                    
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.4785 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.4785 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (2.3501pt too wide) in paragraph at lines 4805--4809
\OT1/cmr/m/n/10 (-20) proving that under the assumption of uniformly bounded ma
rginals, $\OML/cmm/m/it/10 ^^N[]$\OT1/cmr/m/n/10 (-20) -convergence
 []


Overfull \hbox (4.55212pt too wide) in paragraph at lines 4805--4809
\OT1/cmr/m/n/10 (-20) implies GP-convergence. We then use this result to show t
hat without any assumptions
 []

[89]
Overfull \hbox (12.0pt too wide) in paragraph at lines 4813--4813
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4813 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4813 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.4813 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.4813 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4813 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.4813 \end{theorem}
                    
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.4813 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.4813 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.4813 \end{theorem}
                    
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.4813 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.4813 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[90]
Overfull \hbox (12.0pt too wide) in paragraph at lines 4828--4828
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4828 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4828 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.4828 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.4828 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4828 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.4828 \end{theorem}
                    
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.4828 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.4828 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.4828 \end{theorem}
                    
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.4828 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.4828 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[91]
Overfull \hbox (12.0pt too wide) in paragraph at lines 4887--4887
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4887 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4887 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.4887 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.4887 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4887 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.4887 \end{theorem}
                    
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.4887 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.4887 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.4887 \end{theorem}
                    
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.4887 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.4887 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[92]
Overfull \hbox (12.0pt too wide) in paragraph at lines 4896--4896
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4896 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4896 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.4896 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.4896 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4896 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.4896 \end{remark}
                   
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.4896 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/m/it/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.4896 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.4896 \end{remark}
                   
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.4896 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.4896 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[93]
Overfull \hbox (12.0pt too wide) in paragraph at lines 4915--4915
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4915 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4915 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.4915 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.4915 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4915 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.4915 \end{theorem}
                    
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.4915 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.4915 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.4915 \end{theorem}
                    
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.4915 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.4915 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[94]
Overfull \hbox (12.0pt too wide) in paragraph at lines 4953--4953
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4953 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4953 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.4953 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.4953 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4953 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.4953 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.4953 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.4953 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.4953 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.4953 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.4953 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[95]
Overfull \hbox (12.0pt too wide) in paragraph at lines 4984--4984
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4984 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4984 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.4984 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.4984 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.4984 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.4984 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.4984 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.4984 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.4984 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.4984 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.4984 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (10.93146pt too wide) in paragraph at lines 5137--5137
[] 
 []

[96]
Overfull \hbox (12.0pt too wide) in paragraph at lines 5157--5157
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.5157 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.5157 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.5157 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.5157 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.5157 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.5157 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.5157 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.5157 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.5157 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.5157 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.5157 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[97]
Overfull \hbox (12.0pt too wide) in paragraph at lines 5235--5235
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.5235 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.5235 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.5235 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.5235 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.5235 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.5235 \end{remark}
                   
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.5235 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/m/n/5 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.5235 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.5235 \end{remark}
                   
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.5235 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.5235 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (17.3589pt too wide) in paragraph at lines 5237--5246
[]\OT1/cmr/m/n/10 (-20) Our second lemma estimates the distance between the emp
irical graphex corresponding
 []

[98]
Overfull \hbox (12.0pt too wide) in paragraph at lines 5252--5252
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.5252 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.5252 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.5252 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.5252 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.5252 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.5252 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.5252 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.5252 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.5252 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.5252 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.5252 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `EtC4-bd' on page 80 undefined on input line 5286.


Overfull \hbox (63.84842pt too wide) in paragraph at lines 5380--5380
\OT1/cmr/m/n/10 (-20) Furthermore, we can take $\OML/cmm/m/it/10 T$ \OT1/cmr/m/
n/10 (-20) large enough so that the probability that $\OML/cmm/m/it/10 ^^N[]\OT
1/cmr/m/n/10 (-20) (\U/msb/m/n/10 W\OT1/cmr/m/n/10 (-20) (\OML/cmm/m/it/10 G[]\
OT1/cmr/m/n/10 (-20) (\U/msb/m/n/10 W[]\OT1/cmr/m/n/10 (-20) )\OML/cmm/m/it/10 
; \OT1/cmr/m/n/10 (-20) 1\OML/cmm/m/it/10 =T\OT1/cmr/m/n/10 (-20) )\OML/cmm/m/i
t/10 ; \U/msb/m/n/10 W[]\OT1/cmr/m/n/10 (-20) ) \OML/cmm/m/it/10 >
 []


LaTeX Warning: Reference `sec:defs' on page 82 undefined on input line 5387.

[99]
Overfull \hbox (12.0pt too wide) in paragraph at lines 5393--5393
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.5393 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.5393 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.5393 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.5393 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.5393 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.5393 \end{theorem}
                    
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.5393 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.5393 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.5393 \end{theorem}
                    
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.5393 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.5393 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[100]
Overfull \hbox (12.0pt too wide) in paragraph at lines 5438--5438
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.5438 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.5438 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.5438 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.5438 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.5438 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.5438 \end{theorem}
                    
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.5438 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.5438 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.5438 \end{theorem}
                    
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.5438 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.5438 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[101]
Overfull \hbox (12.0pt too wide) in paragraph at lines 5459--5459
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.5459 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.5459 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.5459 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.5459 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.5459 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.5459 \end{theorem}
                    
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.5459 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.5459 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.5459 \end{theorem}
                    
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.5459 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.5459 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `sec:infmin' on page 83 undefined on input line 5469.


LaTeX Warning: Reference `d22-def' on page 84 undefined on input line 5488.

[102]
Overfull \hbox (12.0pt too wide) in paragraph at lines 5488--5488
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.5488 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.5488 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.5488 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.5488 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.5488 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.5488 \end{remark}
                   
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.5488 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/m/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.5488 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.5488 \end{remark}
                   
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.5488 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.5488 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `sec:canonical' on page 84 undefined on input line 549
6.


LaTeX Warning: Reference `sec:canonical' on page 84 undefined on input line 550
6.

[103]
Overfull \hbox (12.0pt too wide) in paragraph at lines 5506--5506
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.5506 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.5506 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.5506 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.5506 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.5506 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.5506 \end{remark}
                   
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.5506 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.5506 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.5506 \end{remark}
                   
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.5506 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.5506 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[104]
Overfull \hbox (12.0pt too wide) in paragraph at lines 5552--5552
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.5552 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.5552 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.5552 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.5552 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.5552 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.5552 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.5552 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.5552 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.5552 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.5552 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.5552 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[105]
Overfull \hbox (12.0pt too wide) in paragraph at lines 5600--5600
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.5600 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.5600 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.5600 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.5600 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.5600 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.5600 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.5600 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.5600 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.5600 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.5600 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.5600 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[106]
Overfull \hbox (12.0pt too wide) in paragraph at lines 5846--5846
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.5846 \end{corollary}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.5846 \end{corollary}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.5846 \end{corollary}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.5846 \end{corollary}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.5846 \end{corollary}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.5846 \end{corollary}
                      
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.5846 \end{corollary}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.5846 \end{corollary}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.5846 \end{corollary}
                      
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.5846 \end{corollary}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.5846 \end{corollary}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[107]
Overfull \hbox (12.0pt too wide) in paragraph at lines 5925--5925
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.5925 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.5925 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.5925 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.5925 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.5925 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.5925 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.5925 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.5925 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.5925 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.5925 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.5925 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[108]
Overfull \hbox (12.0pt too wide) in paragraph at lines 5971--5971
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.5971 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.5971 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.5971 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.5971 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.5971 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.5971 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.5971 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.5971 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.5971 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.5971 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.5971 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (8.87596pt too wide) in paragraph at lines 6007--6007
\OT1/cmr/m/n/10 (-20) Since $\OML/cmm/m/it/10 B\OT1/cmr/m/n/10 (-20) (\OML/cmm/
m/it/10 f; W\OT1/cmr/m/n/10 (-20) (\OML/cmm/m/it/10 x; \OMS/cmsy/m/n/10 ^^A\OT1
/cmr/m/n/10 (-20) )1[]\OML/cmm/m/it/10 ; c\OT1/cmr/m/n/10 (-20) )$ is measurabl
e, this proves the statement for unbounded
 []

[109]
Overfull \hbox (12.0pt too wide) in paragraph at lines 6023--6023
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.6023 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.6023 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.6023 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.6023 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.6023 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.6023 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.6023 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.6023 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.6023 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.6023 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.6023 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[110]
Overfull \hbox (12.0pt too wide) in paragraph at lines 6040--6040
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.6040 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.6040 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.6040 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.6040 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.6040 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.6040 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.6040 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.6040 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.6040 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.6040 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.6040 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[111]
Overfull \hbox (12.0pt too wide) in paragraph at lines 6152--6152
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.6152 \end{proposition}
                        
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.6152 \end{proposition}
                        
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.6152 \end{proposition}
                        
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.6152 \end{proposition}
                        
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.6152 \end{proposition}
                        
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.6152 \end{proposition}
                        
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.6152 \end{proposition}
                        
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.6152 \end{proposition}
                        
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.6152 \end{proposition}
                        
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.6152 \end{proposition}
                        
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.6152 \end{proposition}
                        
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[112]
Overfull \hbox (12.0pt too wide) in paragraph at lines 6239--6239
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.6239 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.6239 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.6239 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.6239 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.6239 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.6239 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.6239 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.6239 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.6239 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.6239 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.6239 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[113]
Overfull \hbox (12.0pt too wide) in paragraph at lines 6245--6245
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.6245 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.6245 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.6245 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.6245 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.6245 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.6245 \end{remark}
                   
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.6245 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/m/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.6245 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.6245 \end{remark}
                   
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.6245 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.6245 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[114]
Overfull \hbox (12.0pt too wide) in paragraph at lines 6377--6377
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.6377 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.6377 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.6377 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.6377 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.6377 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.6377 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.6377 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.6377 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.6377 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.6377 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.6377 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[115]
Overfull \hbox (12.0pt too wide) in paragraph at lines 6479--6479
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.6479 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.6479 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.6479 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.6479 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.6479 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.6479 \end{theorem}
                    
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.6479 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.6479 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.6479 \end{theorem}
                    
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.6479 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.6479 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[116]
Overfull \hbox (12.0pt too wide) in paragraph at lines 6665--6665
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.6665 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.6665 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.6665 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.6665 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.6665 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.6665 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.6665 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.6665 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.6665 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.6665 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.6665 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[117]
Overfull \hbox (12.0pt too wide) in paragraph at lines 6708--6708
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.6708 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.6708 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.6708 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.6708 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.6708 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.6708 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.6708 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.6708 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.6708 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.6708 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.6708 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[118]
Overfull \hbox (12.0pt too wide) in paragraph at lines 6714--6714
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.6714 \end{corollary}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.6714 \end{corollary}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.6714 \end{corollary}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.6714 \end{corollary}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.6714 \end{corollary}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.6714 \end{corollary}
                      
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.6714 \end{corollary}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.6714 \end{corollary}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.6714 \end{corollary}
                      
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.6714 \end{corollary}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.6714 \end{corollary}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[119]
Overfull \hbox (12.0pt too wide) in paragraph at lines 6754--6754
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.6754 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.6754 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.6754 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.6754 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.6754 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.6754 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.6754 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.6754 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.6754 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.6754 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.6754 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[120]
Overfull \hbox (12.0pt too wide) in paragraph at lines 6841--6841
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.6841 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.6841 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.6841 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.6841 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.6841 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.6841 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.6841 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.6841 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.6841 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.6841 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.6841 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[121]
Overfull \hbox (12.0pt too wide) in paragraph at lines 6885--6885
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.6885 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.6885 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.6885 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.6885 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.6885 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.6885 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.6885 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.6885 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.6885 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.6885 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.6885 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (13.80186pt too wide) in paragraph at lines 7017--7022
\OT1/cmr/m/n/10 (-20) Poisson point process and $\OML/cmm/m/it/10 W \OMS/cmsy/m
/n/10 ^^N \OML/cmm/m/it/10 W$ \OT1/cmr/m/n/10 (-20) to denote the function $(\O
ML/cmm/m/it/10 x; y\OT1/cmr/m/n/10 (-20) ) \OMS/cmsy/m/n/10 7! [] \OML/cmm/m/it
/10 W\OT1/cmr/m/n/10 (-20) (\OML/cmm/m/it/10 x; z\OT1/cmr/m/n/10 (-20) )\OML/cm
m/m/it/10 W\OT1/cmr/m/n/10 (-20) (\OML/cmm/m/it/10 z; y\OT1/cmr/m/n/10 (-20) ) 
\OML/cmm/m/it/10 d^^V\OT1/cmr/m/n/10 (-20) (\OML/cmm/m/it/10 z\OT1/cmr/m/n/10 (
-20) )$. 
 []

[122]
Overfull \hbox (12.0pt too wide) in paragraph at lines 7033--7033
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.7033 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.7033 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.7033 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.7033 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.7033 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.7033 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.7033 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/m/n/7 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.7033 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.7033 \end{lemma}
                  
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.7033 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.7033 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[123]
Overfull \hbox (12.0pt too wide) in paragraph at lines 7096--7096
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.7096 \end{proposition}
                        
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.7096 \end{proposition}
                        
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.7096 \end{proposition}
                        
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.7096 \end{proposition}
                        
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.7096 \end{proposition}
                        
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.7096 \end{proposition}
                        
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.7096 \end{proposition}
                        
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.7096 \end{proposition}
                        
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.7096 \end{proposition}
                        
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.7096 \end{proposition}
                        
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.7096 \end{proposition}
                        
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `Paley-Z' on page 108 undefined on input line 7236.


LaTeX Warning: Reference `Paley-Z' on page 108 undefined on input line 7236.

[124]
Overfull \hbox (12.0pt too wide) in paragraph at lines 7372--7372
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.7372 \end{proposition}
                        
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.7372 \end{proposition}
                        
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.7372 \end{proposition}
                        
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.7372 \end{proposition}
                        
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.7372 \end{proposition}
                        
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.7372 \end{proposition}
                        
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.7372 \end{proposition}
                        
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.7372 \end{proposition}
                        
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.7372 \end{proposition}
                        
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.7372 \end{proposition}
                        
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.7372 \end{proposition}
                        
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[125]
Overfull \hbox (12.0pt too wide) in paragraph at lines 7420--7420
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.7420 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.7420 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.7420 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.7420 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.7420 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.7420 \end{theorem}
                    
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.7420 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\OT1/cmr/m/n/7 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.7420 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.7420 \end{theorem}
                    
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.7420 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.7420 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

Package microtype Info: Loading generic settings for font family
(microtype)             `cmtt' (encoding: OT1).
(microtype)             For optimal results, create family-specific settings.
(microtype)             See the microtype manual for details.
Package atveryend Info: Empty hook `BeforeClearDocument' on input line 7570.
Package atveryend Info: Empty hook `AfterLastShipout' on input line 7570.
(source_extraction/results/1804.03277.aux)
Package atveryend Info: Executing hook `AtVeryEndDocument' on input line 7570.
Package atveryend Info: Empty hook `AtEndAfterFileList' on input line 7570.


LaTeX Warning: There were undefined references.

Package atveryend Info: Empty hook `AtVeryVeryEnd' on input line 7570.
 )
(\end occurred when \ifx on line 7420 was incomplete)
(\end occurred when \ifx on line 7420 was incomplete)
(\end occurred when \iftrue on line 7420 was incomplete)
(\end occurred when \iftrue on line 7420 was incomplete)
(\end occurred when \iftrue on line 7420 was incomplete)
(\end occurred when \iftrue on line 7420 was incomplete)
(\end occurred when \iftrue on line 7420 was incomplete)
(\end occurred when \iftrue on line 7420 was incomplete)
(\end occurred when \ifx on line 7372 was incomplete)
(\end occurred when \ifx on line 7372 was incomplete)
(\end occurred when \iftrue on line 7372 was incomplete)
(\end occurred when \iftrue on line 7372 was incomplete)
(\end occurred when \iftrue on line 7372 was incomplete)
(\end occurred when \iftrue on line 7372 was incomplete)
(\end occurred when \iftrue on line 7372 was incomplete)
(\end occurred when \iftrue on line 7372 was incomplete)
(\end occurred when \ifx on line 7096 was incomplete)
(\end occurred when \ifx on line 7096 was incomplete)
(\end occurred when \iftrue on line 7096 was incomplete)
(\end occurred when \iftrue on line 7096 was incomplete)
(\end occurred when \iftrue on line 7096 was incomplete)
(\end occurred when \iftrue on line 7096 was incomplete)
(\end occurred when \iftrue on line 7096 was incomplete)
(\end occurred when \iftrue on line 7096 was incomplete)
(\end occurred when \ifx on line 7033 was incomplete)
(\end occurred when \ifx on line 7033 was incomplete)
(\end occurred when \iftrue on line 7033 was incomplete)
(\end occurred when \iftrue on line 7033 was incomplete)
(\end occurred when \iftrue on line 7033 was incomplete)
(\end occurred when \iftrue on line 7033 was incomplete)
(\end occurred when \iftrue on line 7033 was incomplete)
(\end occurred when \iftrue on line 7033 was incomplete)
(\end occurred when \ifx on line 6885 was incomplete)
(\end occurred when \ifx on line 6885 was incomplete)
(\end occurred when \iftrue on line 6885 was incomplete)
(\end occurred when \iftrue on line 6885 was incomplete)
(\end occurred when \iftrue on line 6885 was incomplete)
(\end occurred when \iftrue on line 6885 was incomplete)
(\end occurred when \iftrue on line 6885 was incomplete)
(\end occurred when \iftrue on line 6885 was incomplete)
(\end occurred when \ifx on line 6841 was incomplete)
(\end occurred when \ifx on line 6841 was incomplete)
(\end occurred when \iftrue on line 6841 was incomplete)
(\end occurred when \iftrue on line 6841 was incomplete)
(\end occurred when \iftrue on line 6841 was incomplete)
(\end occurred when \iftrue on line 6841 was incomplete)
(\end occurred when \iftrue on line 6841 was incomplete)
(\end occurred when \iftrue on line 6841 was incomplete)
(\end occurred when \ifx on line 6754 was incomplete)
(\end occurred when \ifx on line 6754 was incomplete)
(\end occurred when \iftrue on line 6754 was incomplete)
(\end occurred when \iftrue on line 6754 was incomplete)
(\end occurred when \iftrue on line 6754 was incomplete)
(\end occurred when \iftrue on line 6754 was incomplete)
(\end occurred when \iftrue on line 6754 was incomplete)
(\end occurred when \iftrue on line 6754 was incomplete)
(\end occurred when \ifx on line 6714 was incomplete)
(\end occurred when \ifx on line 6714 was incomplete)
(\end occurred when \iftrue on line 6714 was incomplete)
(\end occurred when \iftrue on line 6714 was incomplete)
(\end occurred when \iftrue on line 6714 was incomplete)
(\end occurred when \iftrue on line 6714 was incomplete)
(\end occurred when \iftrue on line 6714 was incomplete)
(\end occurred when \iftrue on line 6714 was incomplete)
(\end occurred when \ifx on line 6708 was incomplete)
(\end occurred when \ifx on line 6708 was incomplete)
(\end occurred when \iftrue on line 6708 was incomplete)
(\end occurred when \iftrue on line 6708 was incomplete)
(\end occurred when \iftrue on line 6708 was incomplete)
(\end occurred when \iftrue on line 6708 was incomplete)
(\end occurred when \iftrue on line 6708 was incomplete)
(\end occurred when \iftrue on line 6708 was incomplete)
(\end occurred when \ifx on line 6665 was incomplete)
(\end occurred when \ifx on line 6665 was incomplete)
(\end occurred when \iftrue on line 6665 was incomplete)
(\end occurred when \iftrue on line 6665 was incomplete)
(\end occurred when \iftrue on line 6665 was incomplete)
(\end occurred when \iftrue on line 6665 was incomplete)
(\end occurred when \iftrue on line 6665 was incomplete)
(\end occurred when \iftrue on line 6665 was incomplete)
(\end occurred when \ifx on line 6479 was incomplete)
(\end occurred when \ifx on line 6479 was incomplete)
(\end occurred when \iftrue on line 6479 was incomplete)
(\end occurred when \iftrue on line 6479 was incomplete)
(\end occurred when \iftrue on line 6479 was incomplete)
(\end occurred when \iftrue on line 6479 was incomplete)
(\end occurred when \iftrue on line 6479 was incomplete)
(\end occurred when \iftrue on line 6479 was incomplete)
(\end occurred when \ifx on line 6377 was incomplete)
(\end occurred when \ifx on line 6377 was incomplete)
(\end occurred when \iftrue on line 6377 was incomplete)
(\end occurred when \iftrue on line 6377 was incomplete)
(\end occurred when \iftrue on line 6377 was incomplete)
(\end occurred when \iftrue on line 6377 was incomplete)
(\end occurred when \iftrue on line 6377 was incomplete)
(\end occurred when \iftrue on line 6377 was incomplete)
(\end occurred when \ifx on line 6245 was incomplete)
(\end occurred when \ifx on line 6245 was incomplete)
(\end occurred when \iftrue on line 6245 was incomplete)
(\end occurred when \iftrue on line 6245 was incomplete)
(\end occurred when \iftrue on line 6245 was incomplete)
(\end occurred when \iftrue on line 6245 was incomplete)
(\end occurred when \iftrue on line 6245 was incomplete)
(\end occurred when \iftrue on line 6245 was incomplete)
(\end occurred when \ifx on line 6239 was incomplete)
(\end occurred when \ifx on line 6239 was incomplete)
(\end occurred when \iftrue on line 6239 was incomplete)
(\end occurred when \iftrue on line 6239 was incomplete)
(\end occurred when \iftrue on line 6239 was incomplete)
(\end occurred when \iftrue on line 6239 was incomplete)
(\end occurred when \iftrue on line 6239 was incomplete)
(\end occurred when \iftrue on line 6239 was incomplete)
(\end occurred when \ifx on line 6152 was incomplete)
(\end occurred when \ifx on line 6152 was incomplete)
(\end occurred when \iftrue on line 6152 was incomplete)
(\end occurred when \iftrue on line 6152 was incomplete)
(\end occurred when \iftrue on line 6152 was incomplete)
(\end occurred when \iftrue on line 6152 was incomplete)
(\end occurred when \iftrue on line 6152 was incomplete)
(\end occurred when \iftrue on line 6152 was incomplete)
(\end occurred when \ifx on line 6040 was incomplete)
(\end occurred when \ifx on line 6040 was incomplete)
(\end occurred when \iftrue on line 6040 was incomplete)
(\end occurred when \iftrue on line 6040 was incomplete)
(\end occurred when \iftrue on line 6040 was incomplete)
(\end occurred when \iftrue on line 6040 was incomplete)
(\end occurred when \iftrue on line 6040 was incomplete)
(\end occurred when \iftrue on line 6040 was incomplete)
(\end occurred when \ifx on line 6023 was incomplete)
(\end occurred when \ifx on line 6023 was incomplete)
(\end occurred when \iftrue on line 6023 was incomplete)
(\end occurred when \iftrue on line 6023 was incomplete)
(\end occurred when \iftrue on line 6023 was incomplete)
(\end occurred when \iftrue on line 6023 was incomplete)
(\end occurred when \iftrue on line 6023 was incomplete)
(\end occurred when \iftrue on line 6023 was incomplete)
(\end occurred when \ifx on line 5971 was incomplete)
(\end occurred when \ifx on line 5971 was incomplete)
(\end occurred when \iftrue on line 5971 was incomplete)
(\end occurred when \iftrue on line 5971 was incomplete)
(\end occurred when \iftrue on line 5971 was incomplete)
(\end occurred when \iftrue on line 5971 was incomplete)
(\end occurred when \iftrue on line 5971 was incomplete)
(\end occurred when \iftrue on line 5971 was incomplete)
(\end occurred when \ifx on line 5925 was incomplete)
(\end occurred when \ifx on line 5925 was incomplete)
(\end occurred when \iftrue on line 5925 was incomplete)
(\end occurred when \iftrue on line 5925 was incomplete)
(\end occurred when \iftrue on line 5925 was incomplete)
(\end occurred when \iftrue on line 5925 was incomplete)
(\end occurred when \iftrue on line 5925 was incomplete)
(\end occurred when \iftrue on line 5925 was incomplete)
(\end occurred when \ifx on line 5846 was incomplete)
(\end occurred when \ifx on line 5846 was incomplete)
(\end occurred when \iftrue on line 5846 was incomplete)
(\end occurred when \iftrue on line 5846 was incomplete)
(\end occurred when \iftrue on line 5846 was incomplete)
(\end occurred when \iftrue on line 5846 was incomplete)
(\end occurred when \iftrue on line 5846 was incomplete)
(\end occurred when \iftrue on line 5846 was incomplete)
(\end occurred when \ifx on line 5600 was incomplete)
(\end occurred when \ifx on line 5600 was incomplete)
(\end occurred when \iftrue on line 5600 was incomplete)
(\end occurred when \iftrue on line 5600 was incomplete)
(\end occurred when \iftrue on line 5600 was incomplete)
(\end occurred when \iftrue on line 5600 was incomplete)
(\end occurred when \iftrue on line 5600 was incomplete)
(\end occurred when \iftrue on line 5600 was incomplete)
(\end occurred when \ifx on line 5552 was incomplete)
(\end occurred when \ifx on line 5552 was incomplete)
(\end occurred when \iftrue on line 5552 was incomplete)
(\end occurred when \iftrue on line 5552 was incomplete)
(\end occurred when \iftrue on line 5552 was incomplete)
(\end occurred when \iftrue on line 5552 was incomplete)
(\end occurred when \iftrue on line 5552 was incomplete)
(\end occurred when \iftrue on line 5552 was incomplete)
(\end occurred when \ifx on line 5506 was incomplete)
(\end occurred when \ifx on line 5506 was incomplete)
(\end occurred when \iftrue on line 5506 was incomplete)
(\end occurred when \iftrue on line 5506 was incomplete)
(\end occurred when \iftrue on line 5506 was incomplete)
(\end occurred when \iftrue on line 5506 was incomplete)
(\end occurred when \iftrue on line 5506 was incomplete)
(\end occurred when \iftrue on line 5506 was incomplete)
(\end occurred when \ifx on line 5488 was incomplete)
(\end occurred when \ifx on line 5488 was incomplete)
(\end occurred when \iftrue on line 5488 was incomplete)
(\end occurred when \iftrue on line 5488 was incomplete)
(\end occurred when \iftrue on line 5488 was incomplete)
(\end occurred when \iftrue on line 5488 was incomplete)
(\end occurred when \iftrue on line 5488 was incomplete)
(\end occurred when \iftrue on line 5488 was incomplete)
(\end occurred when \ifx on line 5459 was incomplete)
(\end occurred when \ifx on line 5459 was incomplete)
(\end occurred when \iftrue on line 5459 was incomplete)
(\end occurred when \iftrue on line 5459 was incomplete)
(\end occurred when \iftrue on line 5459 was incomplete)
(\end occurred when \iftrue on line 5459 was incomplete)
(\end occurred when \iftrue on line 5459 was incomplete)
(\end occurred when \iftrue on line 5459 was incomplete)
(\end occurred when \ifx on line 5438 was incomplete)
(\end occurred when \ifx on line 5438 was incomplete)
(\end occurred when \iftrue on line 5438 was incomplete)
(\end occurred when \iftrue on line 5438 was incomplete)
(\end occurred when \iftrue on line 5438 was incomplete)
(\end occurred when \iftrue on line 5438 was incomplete)
(\end occurred when \iftrue on line 5438 was incomplete)
(\end occurred when \iftrue on line 5438 was incomplete)
(\end occurred when \ifx on line 5393 was incomplete)
(\end occurred when \ifx on line 5393 was incomplete)
(\end occurred when \iftrue on line 5393 was incomplete)
(\end occurred when \iftrue on line 5393 was incomplete)
(\end occurred when \iftrue on line 5393 was incomplete)
(\end occurred when \iftrue on line 5393 was incomplete)
(\end occurred when \iftrue on line 5393 was incomplete)
(\end occurred when \iftrue on line 5393 was incomplete)
(\end occurred when \ifx on line 5252 was incomplete)
(\end occurred when \ifx on line 5252 was incomplete)
(\end occurred when \iftrue on line 5252 was incomplete)
(\end occurred when \iftrue on line 5252 was incomplete)
(\end occurred when \iftrue on line 5252 was incomplete)
(\end occurred when \iftrue on line 5252 was incomplete)
(\end occurred when \iftrue on line 5252 was incomplete)
(\end occurred when \iftrue on line 5252 was incomplete)
(\end occurred when \ifx on line 5235 was incomplete)
(\end occurred when \ifx on line 5235 was incomplete)
(\end occurred when \iftrue on line 5235 was incomplete)
(\end occurred when \iftrue on line 5235 was incomplete)
(\end occurred when \iftrue on line 5235 was incomplete)
(\end occurred when \iftrue on line 5235 was incomplete)
(\end occurred when \iftrue on line 5235 was incomplete)
(\end occurred when \iftrue on line 5235 was incomplete)
(\end occurred when \ifx on line 5157 was incomplete)
(\end occurred when \ifx on line 5157 was incomplete)
(\end occurred when \iftrue on line 5157 was incomplete)
(\end occurred when \iftrue on line 5157 was incomplete)
(\end occurred when \iftrue on line 5157 was incomplete)
(\end occurred when \iftrue on line 5157 was incomplete)
(\end occurred when \iftrue on line 5157 was incomplete)
(\end occurred when \iftrue on line 5157 was incomplete)
(\end occurred when \ifx on line 4984 was incomplete)
(\end occurred when \ifx on line 4984 was incomplete)
(\end occurred when \iftrue on line 4984 was incomplete)
(\end occurred when \iftrue on line 4984 was incomplete)
(\end occurred when \iftrue on line 4984 was incomplete)
(\end occurred when \iftrue on line 4984 was incomplete)
(\end occurred when \iftrue on line 4984 was incomplete)
(\end occurred when \iftrue on line 4984 was incomplete)
(\end occurred when \ifx on line 4953 was incomplete)
(\end occurred when \ifx on line 4953 was incomplete)
(\end occurred when \iftrue on line 4953 was incomplete)
(\end occurred when \iftrue on line 4953 was incomplete)
(\end occurred when \iftrue on line 4953 was incomplete)
(\end occurred when \iftrue on line 4953 was incomplete)
(\end occurred when \iftrue on line 4953 was incomplete)
(\end occurred when \iftrue on line 4953 was incomplete)
(\end occurred when \ifx on line 4915 was incomplete)
(\end occurred when \ifx on line 4915 was incomplete)
(\end occurred when \iftrue on line 4915 was incomplete)
(\end occurred when \iftrue on line 4915 was incomplete)
(\end occurred when \iftrue on line 4915 was incomplete)
(\end occurred when \iftrue on line 4915 was incomplete)
(\end occurred when \iftrue on line 4915 was incomplete)
(\end occurred when \iftrue on line 4915 was incomplete)
(\end occurred when \ifx on line 4896 was incomplete)
(\end occurred when \ifx on line 4896 was incomplete)
(\end occurred when \iftrue on line 4896 was incomplete)
(\end occurred when \iftrue on line 4896 was incomplete)
(\end occurred when \iftrue on line 4896 was incomplete)
(\end occurred when \iftrue on line 4896 was incomplete)
(\end occurred when \iftrue on line 4896 was incomplete)
(\end occurred when \iftrue on line 4896 was incomplete)
(\end occurred when \ifx on line 4887 was incomplete)
(\end occurred when \ifx on line 4887 was incomplete)
(\end occurred when \iftrue on line 4887 was incomplete)
(\end occurred when \iftrue on line 4887 was incomplete)
(\end occurred when \iftrue on line 4887 was incomplete)
(\end occurred when \iftrue on line 4887 was incomplete)
(\end occurred when \iftrue on line 4887 was incomplete)
(\end occurred when \iftrue on line 4887 was incomplete)
(\end occurred when \ifx on line 4828 was incomplete)
(\end occurred when \ifx on line 4828 was incomplete)
(\end occurred when \iftrue on line 4828 was incomplete)
(\end occurred when \iftrue on line 4828 was incomplete)
(\end occurred when \iftrue on line 4828 was incomplete)
(\end occurred when \iftrue on line 4828 was incomplete)
(\end occurred when \iftrue on line 4828 was incomplete)
(\end occurred when \iftrue on line 4828 was incomplete)
(\end occurred when \ifx on line 4813 was incomplete)
(\end occurred when \ifx on line 4813 was incomplete)
(\end occurred when \iftrue on line 4813 was incomplete)
(\end occurred when \iftrue on line 4813 was incomplete)
(\end occurred when \iftrue on line 4813 was incomplete)
(\end occurred when \iftrue on line 4813 was incomplete)
(\end occurred when \iftrue on line 4813 was incomplete)
(\end occurred when \iftrue on line 4813 was incomplete)
(\end occurred when \ifx on line 4785 was incomplete)
(\end occurred when \ifx on line 4785 was incomplete)
(\end occurred when \iftrue on line 4785 was incomplete)
(\end occurred when \iftrue on line 4785 was incomplete)
(\end occurred when \iftrue on line 4785 was incomplete)
(\end occurred when \iftrue on line 4785 was incomplete)
(\end occurred when \iftrue on line 4785 was incomplete)
(\end occurred when \iftrue on line 4785 was incomplete)
(\end occurred when \ifx on line 4668 was incomplete)
(\end occurred when \ifx on line 4668 was incomplete)
(\end occurred when \iftrue on line 4668 was incomplete)
(\end occurred when \iftrue on line 4668 was incomplete)
(\end occurred when \iftrue on line 4668 was incomplete)
(\end occurred when \iftrue on line 4668 was incomplete)
(\end occurred when \iftrue on line 4668 was incomplete)
(\end occurred when \iftrue on line 4668 was incomplete)
(\end occurred when \ifx on line 4645 was incomplete)
(\end occurred when \ifx on line 4645 was incomplete)
(\end occurred when \iftrue on line 4645 was incomplete)
(\end occurred when \iftrue on line 4645 was incomplete)
(\end occurred when \iftrue on line 4645 was incomplete)
(\end occurred when \iftrue on line 4645 was incomplete)
(\end occurred when \iftrue on line 4645 was incomplete)
(\end occurred when \iftrue on line 4645 was incomplete)
(\end occurred when \ifx on line 4560 was incomplete)
(\end occurred when \ifx on line 4560 was incomplete)
(\end occurred when \iftrue on line 4560 was incomplete)
(\end occurred when \iftrue on line 4560 was incomplete)
(\end occurred when \iftrue on line 4560 was incomplete)
(\end occurred when \iftrue on line 4560 was incomplete)
(\end occurred when \iftrue on line 4560 was incomplete)
(\end occurred when \iftrue on line 4560 was incomplete)
(\end occurred when \ifx on line 4477 was incomplete)
(\end occurred when \ifx on line 4477 was incomplete)
(\end occurred when \iftrue on line 4477 was incomplete)
(\end occurred when \iftrue on line 4477 was incomplete)
(\end occurred when \iftrue on line 4477 was incomplete)
(\end occurred when \iftrue on line 4477 was incomplete)
(\end occurred when \iftrue on line 4477 was incomplete)
(\end occurred when \iftrue on line 4477 was incomplete)
(\end occurred when \ifx on line 4447 was incomplete)
(\end occurred when \ifx on line 4447 was incomplete)
(\end occurred when \iftrue on line 4447 was incomplete)
(\end occurred when \iftrue on line 4447 was incomplete)
(\end occurred when \iftrue on line 4447 was incomplete)
(\end occurred when \iftrue on line 4447 was incomplete)
(\end occurred when \iftrue on line 4447 was incomplete)
(\end occurred when \iftrue on line 4447 was incomplete)
(\end occurred when \ifx on line 4423 was incomplete)
(\end occurred when \ifx on line 4423 was incomplete)
(\end occurred when \iftrue on line 4423 was incomplete)
(\end occurred when \iftrue on line 4423 was incomplete)
(\end occurred when \iftrue on line 4423 was incomplete)
(\end occurred when \iftrue on line 4423 was incomplete)
(\end occurred when \iftrue on line 4423 was incomplete)
(\end occurred when \iftrue on line 4423 was incomplete)
(\end occurred when \ifx on line 4415 was incomplete)
(\end occurred when \ifx on line 4415 was incomplete)
(\end occurred when \iftrue on line 4415 was incomplete)
(\end occurred when \iftrue on line 4415 was incomplete)
(\end occurred when \iftrue on line 4415 was incomplete)
(\end occurred when \iftrue on line 4415 was incomplete)
(\end occurred when \iftrue on line 4415 was incomplete)
(\end occurred when \iftrue on line 4415 was incomplete)
(\end occurred when \ifx on line 4247 was incomplete)
(\end occurred when \ifx on line 4247 was incomplete)
(\end occurred when \iftrue on line 4247 was incomplete)
(\end occurred when \iftrue on line 4247 was incomplete)
(\end occurred when \iftrue on line 4247 was incomplete)
(\end occurred when \iftrue on line 4247 was incomplete)
(\end occurred when \iftrue on line 4247 was incomplete)
(\end occurred when \iftrue on line 4247 was incomplete)
(\end occurred when \ifx on line 4210 was incomplete)
(\end occurred when \ifx on line 4210 was incomplete)
(\end occurred when \iftrue on line 4210 was incomplete)
(\end occurred when \iftrue on line 4210 was incomplete)
(\end occurred when \iftrue on line 4210 was incomplete)
(\end occurred when \iftrue on line 4210 was incomplete)
(\end occurred when \iftrue on line 4210 was incomplete)
(\end occurred when \iftrue on line 4210 was incomplete)
(\end occurred when \ifx on line 4184 was incomplete)
(\end occurred when \ifx on line 4184 was incomplete)
(\end occurred when \iftrue on line 4184 was incomplete)
(\end occurred when \iftrue on line 4184 was incomplete)
(\end occurred when \iftrue on line 4184 was incomplete)
(\end occurred when \iftrue on line 4184 was incomplete)
(\end occurred when \iftrue on line 4184 was incomplete)
(\end occurred when \iftrue on line 4184 was incomplete)
(\end occurred when \ifx on line 4159 was incomplete)
(\end occurred when \ifx on line 4159 was incomplete)
(\end occurred when \iftrue on line 4159 was incomplete)
(\end occurred when \iftrue on line 4159 was incomplete)
(\end occurred when \iftrue on line 4159 was incomplete)
(\end occurred when \iftrue on line 4159 was incomplete)
(\end occurred when \iftrue on line 4159 was incomplete)
(\end occurred when \iftrue on line 4159 was incomplete)
(\end occurred when \ifx on line 4117 was incomplete)
(\end occurred when \ifx on line 4117 was incomplete)
(\end occurred when \iftrue on line 4117 was incomplete)
(\end occurred when \iftrue on line 4117 was incomplete)
(\end occurred when \iftrue on line 4117 was incomplete)
(\end occurred when \iftrue on line 4117 was incomplete)
(\end occurred when \iftrue on line 4117 was incomplete)
(\end occurred when \iftrue on line 4117 was incomplete)
(\end occurred when \ifx on line 4089 was incomplete)
(\end occurred when \ifx on line 4089 was incomplete)
(\end occurred when \iftrue on line 4089 was incomplete)
(\end occurred when \iftrue on line 4089 was incomplete)
(\end occurred when \iftrue on line 4089 was incomplete)
(\end occurred when \iftrue on line 4089 was incomplete)
(\end occurred when \iftrue on line 4089 was incomplete)
(\end occurred when \iftrue on line 4089 was incomplete)
(\end occurred when \ifx on line 4079 was incomplete)
(\end occurred when \ifx on line 4079 was incomplete)
(\end occurred when \iftrue on line 4079 was incomplete)
(\end occurred when \iftrue on line 4079 was incomplete)
(\end occurred when \iftrue on line 4079 was incomplete)
(\end occurred when \iftrue on line 4079 was incomplete)
(\end occurred when \iftrue on line 4079 was incomplete)
(\end occurred when \iftrue on line 4079 was incomplete)
(\end occurred when \ifx on line 4006 was incomplete)
(\end occurred when \ifx on line 4006 was incomplete)
(\end occurred when \iftrue on line 4006 was incomplete)
(\end occurred when \iftrue on line 4006 was incomplete)
(\end occurred when \iftrue on line 4006 was incomplete)
(\end occurred when \iftrue on line 4006 was incomplete)
(\end occurred when \iftrue on line 4006 was incomplete)
(\end occurred when \iftrue on line 4006 was incomplete)
(\end occurred when \ifx on line 3818 was incomplete)
(\end occurred when \ifx on line 3818 was incomplete)
(\end occurred when \iftrue on line 3818 was incomplete)
(\end occurred when \iftrue on line 3818 was incomplete)
(\end occurred when \iftrue on line 3818 was incomplete)
(\end occurred when \iftrue on line 3818 was incomplete)
(\end occurred when \iftrue on line 3818 was incomplete)
(\end occurred when \iftrue on line 3818 was incomplete)
(\end occurred when \ifx on line 3808 was incomplete)
(\end occurred when \ifx on line 3808 was incomplete)
(\end occurred when \iftrue on line 3808 was incomplete)
(\end occurred when \iftrue on line 3808 was incomplete)
(\end occurred when \iftrue on line 3808 was incomplete)
(\end occurred when \iftrue on line 3808 was incomplete)
(\end occurred when \iftrue on line 3808 was incomplete)
(\end occurred when \iftrue on line 3808 was incomplete)
(\end occurred when \ifx on line 3765 was incomplete)
(\end occurred when \ifx on line 3765 was incomplete)
(\end occurred when \iftrue on line 3765 was incomplete)
(\end occurred when \iftrue on line 3765 was incomplete)
(\end occurred when \iftrue on line 3765 was incomplete)
(\end occurred when \iftrue on line 3765 was incomplete)
(\end occurred when \iftrue on line 3765 was incomplete)
(\end occurred when \iftrue on line 3765 was incomplete)
(\end occurred when \ifx on line 3684 was incomplete)
(\end occurred when \ifx on line 3684 was incomplete)
(\end occurred when \iftrue on line 3684 was incomplete)
(\end occurred when \iftrue on line 3684 was incomplete)
(\end occurred when \iftrue on line 3684 was incomplete)
(\end occurred when \iftrue on line 3684 was incomplete)
(\end occurred when \iftrue on line 3684 was incomplete)
(\end occurred when \iftrue on line 3684 was incomplete)
(\end occurred when \ifx on line 3652 was incomplete)
(\end occurred when \ifx on line 3652 was incomplete)
(\end occurred when \iftrue on line 3652 was incomplete)
(\end occurred when \iftrue on line 3652 was incomplete)
(\end occurred when \iftrue on line 3652 was incomplete)
(\end occurred when \iftrue on line 3652 was incomplete)
(\end occurred when \iftrue on line 3652 was incomplete)
(\end occurred when \iftrue on line 3652 was incomplete)
(\end occurred when \ifx on line 3625 was incomplete)
(\end occurred when \ifx on line 3625 was incomplete)
(\end occurred when \iftrue on line 3625 was incomplete)
(\end occurred when \iftrue on line 3625 was incomplete)
(\end occurred when \iftrue on line 3625 was incomplete)
(\end occurred when \iftrue on line 3625 was incomplete)
(\end occurred when \iftrue on line 3625 was incomplete)
(\end occurred when \iftrue on line 3625 was incomplete)
(\end occurred when \ifx on line 3611 was incomplete)
(\end occurred when \ifx on line 3611 was incomplete)
(\end occurred when \iftrue on line 3611 was incomplete)
(\end occurred when \iftrue on line 3611 was incomplete)
(\end occurred when \iftrue on line 3611 was incomplete)
(\end occurred when \iftrue on line 3611 was incomplete)
(\end occurred when \iftrue on line 3611 was incomplete)
(\end occurred when \iftrue on line 3611 was incomplete)
(\end occurred when \ifx on line 3479 was incomplete)
(\end occurred when \ifx on line 3479 was incomplete)
(\end occurred when \iftrue on line 3479 was incomplete)
(\end occurred when \iftrue on line 3479 was incomplete)
(\end occurred when \iftrue on line 3479 was incomplete)
(\end occurred when \iftrue on line 3479 was incomplete)
(\end occurred when \iftrue on line 3479 was incomplete)
(\end occurred when \iftrue on line 3479 was incomplete)
(\end occurred when \ifx on line 3453 was incomplete)
(\end occurred when \ifx on line 3453 was incomplete)
(\end occurred when \iftrue on line 3453 was incomplete)
(\end occurred when \iftrue on line 3453 was incomplete)
(\end occurred when \iftrue on line 3453 was incomplete)
(\end occurred when \iftrue on line 3453 was incomplete)
(\end occurred when \iftrue on line 3453 was incomplete)
(\end occurred when \iftrue on line 3453 was incomplete)
(\end occurred when \ifx on line 3430 was incomplete)
(\end occurred when \ifx on line 3430 was incomplete)
(\end occurred when \iftrue on line 3430 was incomplete)
(\end occurred when \iftrue on line 3430 was incomplete)
(\end occurred when \iftrue on line 3430 was incomplete)
(\end occurred when \iftrue on line 3430 was incomplete)
(\end occurred when \iftrue on line 3430 was incomplete)
(\end occurred when \iftrue on line 3430 was incomplete)
(\end occurred when \ifx on line 3410 was incomplete)
(\end occurred when \ifx on line 3410 was incomplete)
(\end occurred when \iftrue on line 3410 was incomplete)
(\end occurred when \iftrue on line 3410 was incomplete)
(\end occurred when \iftrue on line 3410 was incomplete)
(\end occurred when \iftrue on line 3410 was incomplete)
(\end occurred when \iftrue on line 3410 was incomplete)
(\end occurred when \iftrue on line 3410 was incomplete)
(\end occurred when \ifx on line 3360 was incomplete)
(\end occurred when \ifx on line 3360 was incomplete)
(\end occurred when \iftrue on line 3360 was incomplete)
(\end occurred when \iftrue on line 3360 was incomplete)
(\end occurred when \iftrue on line 3360 was incomplete)
(\end occurred when \iftrue on line 3360 was incomplete)
(\end occurred when \iftrue on line 3360 was incomplete)
(\end occurred when \iftrue on line 3360 was incomplete)
(\end occurred when \ifx on line 3284 was incomplete)
(\end occurred when \ifx on line 3284 was incomplete)
(\end occurred when \iftrue on line 3284 was incomplete)
(\end occurred when \iftrue on line 3284 was incomplete)
(\end occurred when \iftrue on line 3284 was incomplete)
(\end occurred when \iftrue on line 3284 was incomplete)
(\end occurred when \iftrue on line 3284 was incomplete)
(\end occurred when \iftrue on line 3284 was incomplete)
(\end occurred when \ifx on line 3112 was incomplete)
(\end occurred when \ifx on line 3112 was incomplete)
(\end occurred when \iftrue on line 3112 was incomplete)
(\end occurred when \iftrue on line 3112 was incomplete)
(\end occurred when \iftrue on line 3112 was incomplete)
(\end occurred when \iftrue on line 3112 was incomplete)
(\end occurred when \iftrue on line 3112 was incomplete)
(\end occurred when \iftrue on line 3112 was incomplete)
(\end occurred when \ifx on line 3064 was incomplete)
(\end occurred when \ifx on line 3064 was incomplete)
(\end occurred when \iftrue on line 3064 was incomplete)
(\end occurred when \iftrue on line 3064 was incomplete)
(\end occurred when \iftrue on line 3064 was incomplete)
(\end occurred when \iftrue on line 3064 was incomplete)
(\end occurred when \iftrue on line 3064 was incomplete)
(\end occurred when \iftrue on line 3064 was incomplete)
(\end occurred when \ifx on line 2961 was incomplete)
(\end occurred when \ifx on line 2961 was incomplete)
(\end occurred when \iftrue on line 2961 was incomplete)
(\end occurred when \iftrue on line 2961 was incomplete)
(\end occurred when \iftrue on line 2961 was incomplete)
(\end occurred when \iftrue on line 2961 was incomplete)
(\end occurred when \iftrue on line 2961 was incomplete)
(\end occurred when \iftrue on line 2961 was incomplete)
(\end occurred when \ifx on line 2932 was incomplete)
(\end occurred when \ifx on line 2932 was incomplete)
(\end occurred when \iftrue on line 2932 was incomplete)
(\end occurred when \iftrue on line 2932 was incomplete)
(\end occurred when \iftrue on line 2932 was incomplete)
(\end occurred when \iftrue on line 2932 was incomplete)
(\end occurred when \iftrue on line 2932 was incomplete)
(\end occurred when \iftrue on line 2932 was incomplete)
(\end occurred when \ifx on line 2921 was incomplete)
(\end occurred when \ifx on line 2921 was incomplete)
(\end occurred when \iftrue on line 2921 was incomplete)
(\end occurred when \iftrue on line 2921 was incomplete)
(\end occurred when \iftrue on line 2921 was incomplete)
(\end occurred when \iftrue on line 2921 was incomplete)
(\end occurred when \iftrue on line 2921 was incomplete)
(\end occurred when \iftrue on line 2921 was incomplete)
(\end occurred when \ifx on line 2799 was incomplete)
(\end occurred when \ifx on line 2799 was incomplete)
(\end occurred when \iftrue on line 2799 was incomplete)
(\end occurred when \iftrue on line 2799 was incomplete)
(\end occurred when \iftrue on line 2799 was incomplete)
(\end occurred when \iftrue on line 2799 was incomplete)
(\end occurred when \iftrue on line 2799 was incomplete)
(\end occurred when \iftrue on line 2799 was incomplete)
(\end occurred when \ifx on line 2782 was incomplete)
(\end occurred when \ifx on line 2782 was incomplete)
(\end occurred when \iftrue on line 2782 was incomplete)
(\end occurred when \iftrue on line 2782 was incomplete)
(\end occurred when \iftrue on line 2782 was incomplete)
(\end occurred when \iftrue on line 2782 was incomplete)
(\end occurred when \iftrue on line 2782 was incomplete)
(\end occurred when \iftrue on line 2782 was incomplete)
(\end occurred when \ifx on line 2720 was incomplete)
(\end occurred when \ifx on line 2720 was incomplete)
(\end occurred when \iftrue on line 2720 was incomplete)
(\end occurred when \iftrue on line 2720 was incomplete)
(\end occurred when \iftrue on line 2720 was incomplete)
(\end occurred when \iftrue on line 2720 was incomplete)
(\end occurred when \iftrue on line 2720 was incomplete)
(\end occurred when \iftrue on line 2720 was incomplete)
(\end occurred when \ifx on line 2688 was incomplete)
(\end occurred when \ifx on line 2688 was incomplete)
(\end occurred when \iftrue on line 2688 was incomplete)
(\end occurred when \iftrue on line 2688 was incomplete)
(\end occurred when \iftrue on line 2688 was incomplete)
(\end occurred when \iftrue on line 2688 was incomplete)
(\end occurred when \iftrue on line 2688 was incomplete)
(\end occurred when \iftrue on line 2688 was incomplete)
(\end occurred when \ifx on line 2648 was incomplete)
(\end occurred when \ifx on line 2648 was incomplete)
(\end occurred when \iftrue on line 2648 was incomplete)
(\end occurred when \iftrue on line 2648 was incomplete)
(\end occurred when \iftrue on line 2648 was incomplete)
(\end occurred when \iftrue on line 2648 was incomplete)
(\end occurred when \iftrue on line 2648 was incomplete)
(\end occurred when \iftrue on line 2648 was incomplete)
(\end occurred when \ifx on line 2636 was incomplete)
(\end occurred when \ifx on line 2636 was incomplete)
(\end occurred when \iftrue on line 2636 was incomplete)
(\end occurred when \iftrue on line 2636 was incomplete)
(\end occurred when \iftrue on line 2636 was incomplete)
(\end occurred when \iftrue on line 2636 was incomplete)
(\end occurred when \iftrue on line 2636 was incomplete)
(\end occurred when \iftrue on line 2636 was incomplete)
(\end occurred when \ifx on line 2595 was incomplete)
(\end occurred when \ifx on line 2595 was incomplete)
(\end occurred when \iftrue on line 2595 was incomplete)
(\end occurred when \iftrue on line 2595 was incomplete)
(\end occurred when \iftrue on line 2595 was incomplete)
(\end occurred when \iftrue on line 2595 was incomplete)
(\end occurred when \iftrue on line 2595 was incomplete)
(\end occurred when \iftrue on line 2595 was incomplete)
(\end occurred when \ifx on line 2521 was incomplete)
(\end occurred when \ifx on line 2521 was incomplete)
(\end occurred when \iftrue on line 2521 was incomplete)
(\end occurred when \iftrue on line 2521 was incomplete)
(\end occurred when \iftrue on line 2521 was incomplete)
(\end occurred when \iftrue on line 2521 was incomplete)
(\end occurred when \iftrue on line 2521 was incomplete)
(\end occurred when \iftrue on line 2521 was incomplete)
(\end occurred when \ifx on line 2407 was incomplete)
(\end occurred when \ifx on line 2407 was incomplete)
(\end occurred when \iftrue on line 2407 was incomplete)
(\end occurred when \iftrue on line 2407 was incomplete)
(\end occurred when \iftrue on line 2407 was incomplete)
(\end occurred when \iftrue on line 2407 was incomplete)
(\end occurred when \iftrue on line 2407 was incomplete)
(\end occurred when \iftrue on line 2407 was incomplete)
(\end occurred when \ifx on line 2383 was incomplete)
(\end occurred when \ifx on line 2383 was incomplete)
(\end occurred when \iftrue on line 2383 was incomplete)
(\end occurred when \iftrue on line 2383 was incomplete)
(\end occurred when \iftrue on line 2383 was incomplete)
(\end occurred when \iftrue on line 2383 was incomplete)
(\end occurred when \iftrue on line 2383 was incomplete)
(\end occurred when \iftrue on line 2383 was incomplete)
(\end occurred when \ifx on line 2221 was incomplete)
(\end occurred when \ifx on line 2221 was incomplete)
(\end occurred when \iftrue on line 2221 was incomplete)
(\end occurred when \iftrue on line 2221 was incomplete)
(\end occurred when \iftrue on line 2221 was incomplete)
(\end occurred when \iftrue on line 2221 was incomplete)
(\end occurred when \iftrue on line 2221 was incomplete)
(\end occurred when \iftrue on line 2221 was incomplete)
(\end occurred when \ifx on line 2137 was incomplete)
(\end occurred when \ifx on line 2137 was incomplete)
(\end occurred when \iftrue on line 2137 was incomplete)
(\end occurred when \iftrue on line 2137 was incomplete)
(\end occurred when \iftrue on line 2137 was incomplete)
(\end occurred when \iftrue on line 2137 was incomplete)
(\end occurred when \iftrue on line 2137 was incomplete)
(\end occurred when \iftrue on line 2137 was incomplete)
(\end occurred when \ifx on line 2099 was incomplete)
(\end occurred when \ifx on line 2099 was incomplete)
(\end occurred when \iftrue on line 2099 was incomplete)
(\end occurred when \iftrue on line 2099 was incomplete)
(\end occurred when \iftrue on line 2099 was incomplete)
(\end occurred when \iftrue on line 2099 was incomplete)
(\end occurred when \iftrue on line 2099 was incomplete)
(\end occurred when \iftrue on line 2099 was incomplete)
(\end occurred when \ifx on line 2085 was incomplete)
(\end occurred when \ifx on line 2085 was incomplete)
(\end occurred when \iftrue on line 2085 was incomplete)
(\end occurred when \iftrue on line 2085 was incomplete)
(\end occurred when \iftrue on line 2085 was incomplete)
(\end occurred when \iftrue on line 2085 was incomplete)
(\end occurred when \iftrue on line 2085 was incomplete)
(\end occurred when \iftrue on line 2085 was incomplete)
(\end occurred when \ifx on line 1968 was incomplete)
(\end occurred when \ifx on line 1968 was incomplete)
(\end occurred when \iftrue on line 1968 was incomplete)
(\end occurred when \iftrue on line 1968 was incomplete)
(\end occurred when \iftrue on line 1968 was incomplete)
(\end occurred when \iftrue on line 1968 was incomplete)
(\end occurred when \iftrue on line 1968 was incomplete)
(\end occurred when \iftrue on line 1968 was incomplete)
(\end occurred when \ifx on line 1833 was incomplete)
(\end occurred when \ifx on line 1833 was incomplete)
(\end occurred when \iftrue on line 1833 was incomplete)
(\end occurred when \iftrue on line 1833 was incomplete)
(\end occurred when \iftrue on line 1833 was incomplete)
(\end occurred when \iftrue on line 1833 was incomplete)
(\end occurred when \iftrue on line 1833 was incomplete)
(\end occurred when \iftrue on line 1833 was incomplete)
(\end occurred when \ifx on line 1757 was incomplete)
(\end occurred when \ifx on line 1757 was incomplete)
(\end occurred when \iftrue on line 1757 was incomplete)
(\end occurred when \iftrue on line 1757 was incomplete)
(\end occurred when \iftrue on line 1757 was incomplete)
(\end occurred when \iftrue on line 1757 was incomplete)
(\end occurred when \iftrue on line 1757 was incomplete)
(\end occurred when \iftrue on line 1757 was incomplete)
(\end occurred when \ifx on line 1714 was incomplete)
(\end occurred when \ifx on line 1714 was incomplete)
(\end occurred when \iftrue on line 1714 was incomplete)
(\end occurred when \iftrue on line 1714 was incomplete)
(\end occurred when \iftrue on line 1714 was incomplete)
(\end occurred when \iftrue on line 1714 was incomplete)
(\end occurred when \iftrue on line 1714 was incomplete)
(\end occurred when \iftrue on line 1714 was incomplete)
(\end occurred when \ifx on line 1694 was incomplete)
(\end occurred when \ifx on line 1694 was incomplete)
(\end occurred when \iftrue on line 1694 was incomplete)
(\end occurred when \iftrue on line 1694 was incomplete)
(\end occurred when \iftrue on line 1694 was incomplete)
(\end occurred when \iftrue on line 1694 was incomplete)
(\end occurred when \iftrue on line 1694 was incomplete)
(\end occurred when \iftrue on line 1694 was incomplete)
(\end occurred when \ifx on line 1635 was incomplete)
(\end occurred when \ifx on line 1635 was incomplete)
(\end occurred when \iftrue on line 1635 was incomplete)
(\end occurred when \iftrue on line 1635 was incomplete)
(\end occurred when \iftrue on line 1635 was incomplete)
(\end occurred when \iftrue on line 1635 was incomplete)
(\end occurred when \iftrue on line 1635 was incomplete)
(\end occurred when \iftrue on line 1635 was incomplete)
(\end occurred when \ifx on line 1504 was incomplete)
(\end occurred when \ifx on line 1504 was incomplete)
(\end occurred when \iftrue on line 1504 was incomplete)
(\end occurred when \iftrue on line 1504 was incomplete)
(\end occurred when \iftrue on line 1504 was incomplete)
(\end occurred when \iftrue on line 1504 was incomplete)
(\end occurred when \iftrue on line 1504 was incomplete)
(\end occurred when \iftrue on line 1504 was incomplete)
(\end occurred when \ifx on line 1410 was incomplete)
(\end occurred when \ifx on line 1410 was incomplete)
(\end occurred when \iftrue on line 1410 was incomplete)
(\end occurred when \iftrue on line 1410 was incomplete)
(\end occurred when \iftrue on line 1410 was incomplete)
(\end occurred when \iftrue on line 1410 was incomplete)
(\end occurred when \iftrue on line 1410 was incomplete)
(\end occurred when \iftrue on line 1410 was incomplete)
(\end occurred when \ifx on line 1376 was incomplete)
(\end occurred when \ifx on line 1376 was incomplete)
(\end occurred when \iftrue on line 1376 was incomplete)
(\end occurred when \iftrue on line 1376 was incomplete)
(\end occurred when \iftrue on line 1376 was incomplete)
(\end occurred when \iftrue on line 1376 was incomplete)
(\end occurred when \iftrue on line 1376 was incomplete)
(\end occurred when \iftrue on line 1376 was incomplete)
(\end occurred when \ifx on line 1319 was incomplete)
(\end occurred when \ifx on line 1319 was incomplete)
(\end occurred when \iftrue on line 1319 was incomplete)
(\end occurred when \iftrue on line 1319 was incomplete)
(\end occurred when \iftrue on line 1319 was incomplete)
(\end occurred when \iftrue on line 1319 was incomplete)
(\end occurred when \iftrue on line 1319 was incomplete)
(\end occurred when \iftrue on line 1319 was incomplete)
(\end occurred when \ifx on line 1236 was incomplete)
(\end occurred when \ifx on line 1236 was incomplete)
(\end occurred when \iftrue on line 1236 was incomplete)
(\end occurred when \iftrue on line 1236 was incomplete)
(\end occurred when \iftrue on line 1236 was incomplete)
(\end occurred when \iftrue on line 1236 was incomplete)
(\end occurred when \iftrue on line 1236 was incomplete)
(\end occurred when \iftrue on line 1236 was incomplete)
(\end occurred when \ifx on line 1214 was incomplete)
(\end occurred when \ifx on line 1214 was incomplete)
(\end occurred when \iftrue on line 1214 was incomplete)
(\end occurred when \iftrue on line 1214 was incomplete)
(\end occurred when \iftrue on line 1214 was incomplete)
(\end occurred when \iftrue on line 1214 was incomplete)
(\end occurred when \iftrue on line 1214 was incomplete)
(\end occurred when \iftrue on line 1214 was incomplete)
(\end occurred when \ifx on line 1195 was incomplete)
(\end occurred when \ifx on line 1195 was incomplete)
(\end occurred when \iftrue on line 1195 was incomplete)
(\end occurred when \iftrue on line 1195 was incomplete)
(\end occurred when \iftrue on line 1195 was incomplete)
(\end occurred when \iftrue on line 1195 was incomplete)
(\end occurred when \iftrue on line 1195 was incomplete)
(\end occurred when \iftrue on line 1195 was incomplete)
(\end occurred when \ifx on line 1169 was incomplete)
(\end occurred when \ifx on line 1169 was incomplete)
(\end occurred when \iftrue on line 1169 was incomplete)
(\end occurred when \iftrue on line 1169 was incomplete)
(\end occurred when \iftrue on line 1169 was incomplete)
(\end occurred when \iftrue on line 1169 was incomplete)
(\end occurred when \iftrue on line 1169 was incomplete)
(\end occurred when \iftrue on line 1169 was incomplete)
(\end occurred when \ifx on line 1155 was incomplete)
(\end occurred when \ifx on line 1155 was incomplete)
(\end occurred when \iftrue on line 1155 was incomplete)
(\end occurred when \iftrue on line 1155 was incomplete)
(\end occurred when \iftrue on line 1155 was incomplete)
(\end occurred when \iftrue on line 1155 was incomplete)
(\end occurred when \iftrue on line 1155 was incomplete)
(\end occurred when \iftrue on line 1155 was incomplete)
(\end occurred when \ifx on line 1128 was incomplete)
(\end occurred when \ifx on line 1128 was incomplete)
(\end occurred when \iftrue on line 1128 was incomplete)
(\end occurred when \iftrue on line 1128 was incomplete)
(\end occurred when \iftrue on line 1128 was incomplete)
(\end occurred when \iftrue on line 1128 was incomplete)
(\end occurred when \iftrue on line 1128 was incomplete)
(\end occurred when \iftrue on line 1128 was incomplete)
(\end occurred when \ifx on line 1065 was incomplete)
(\end occurred when \ifx on line 1065 was incomplete)
(\end occurred when \iftrue on line 1065 was incomplete)
(\end occurred when \iftrue on line 1065 was incomplete)
(\end occurred when \iftrue on line 1065 was incomplete)
(\end occurred when \iftrue on line 1065 was incomplete)
(\end occurred when \iftrue on line 1065 was incomplete)
(\end occurred when \iftrue on line 1065 was incomplete)
(\end occurred when \ifx on line 1053 was incomplete)
(\end occurred when \ifx on line 1053 was incomplete)
(\end occurred when \iftrue on line 1053 was incomplete)
(\end occurred when \iftrue on line 1053 was incomplete)
(\end occurred when \iftrue on line 1053 was incomplete)
(\end occurred when \iftrue on line 1053 was incomplete)
(\end occurred when \iftrue on line 1053 was incomplete)
(\end occurred when \iftrue on line 1053 was incomplete)
(\end occurred when \ifx on line 995 was incomplete)
(\end occurred when \ifx on line 995 was incomplete)
(\end occurred when \iftrue on line 995 was incomplete)
(\end occurred when \iftrue on line 995 was incomplete)
(\end occurred when \iftrue on line 995 was incomplete)
(\end occurred when \iftrue on line 995 was incomplete)
(\end occurred when \iftrue on line 995 was incomplete)
(\end occurred when \iftrue on line 995 was incomplete)
(\end occurred when \ifx on line 979 was incomplete)
(\end occurred when \ifx on line 979 was incomplete)
(\end occurred when \iftrue on line 979 was incomplete)
(\end occurred when \iftrue on line 979 was incomplete)
(\end occurred when \iftrue on line 979 was incomplete)
(\end occurred when \iftrue on line 979 was incomplete)
(\end occurred when \iftrue on line 979 was incomplete)
(\end occurred when \iftrue on line 979 was incomplete)
(\end occurred when \ifx on line 948 was incomplete)
(\end occurred when \ifx on line 948 was incomplete)
(\end occurred when \iftrue on line 948 was incomplete)
(\end occurred when \iftrue on line 948 was incomplete)
(\end occurred when \iftrue on line 948 was incomplete)
(\end occurred when \iftrue on line 948 was incomplete)
(\end occurred when \iftrue on line 948 was incomplete)
(\end occurred when \iftrue on line 948 was incomplete)
(\end occurred when \ifx on line 931 was incomplete)
(\end occurred when \ifx on line 931 was incomplete)
(\end occurred when \iftrue on line 931 was incomplete)
(\end occurred when \iftrue on line 931 was incomplete)
(\end occurred when \iftrue on line 931 was incomplete)
(\end occurred when \iftrue on line 931 was incomplete)
(\end occurred when \iftrue on line 931 was incomplete)
(\end occurred when \iftrue on line 931 was incomplete)
(\end occurred when \ifx on line 897 was incomplete)
(\end occurred when \ifx on line 897 was incomplete)
(\end occurred when \iftrue on line 897 was incomplete)
(\end occurred when \iftrue on line 897 was incomplete)
(\end occurred when \iftrue on line 897 was incomplete)
(\end occurred when \iftrue on line 897 was incomplete)
(\end occurred when \iftrue on line 897 was incomplete)
(\end occurred when \iftrue on line 897 was incomplete)
(\end occurred when \ifx on line 877 was incomplete)
(\end occurred when \ifx on line 877 was incomplete)
(\end occurred when \iftrue on line 877 was incomplete)
(\end occurred when \iftrue on line 877 was incomplete)
(\end occurred when \iftrue on line 877 was incomplete)
(\end occurred when \iftrue on line 877 was incomplete)
(\end occurred when \iftrue on line 877 was incomplete)
(\end occurred when \iftrue on line 877 was incomplete)
(\end occurred when \ifx on line 865 was incomplete)
(\end occurred when \ifx on line 865 was incomplete)
(\end occurred when \iftrue on line 865 was incomplete)
(\end occurred when \iftrue on line 865 was incomplete)
(\end occurred when \iftrue on line 865 was incomplete)
(\end occurred when \iftrue on line 865 was incomplete)
(\end occurred when \iftrue on line 865 was incomplete)
(\end occurred when \iftrue on line 865 was incomplete)
(\end occurred when \ifx on line 854 was incomplete)
(\end occurred when \ifx on line 854 was incomplete)
(\end occurred when \iftrue on line 854 was incomplete)
(\end occurred when \iftrue on line 854 was incomplete)
(\end occurred when \iftrue on line 854 was incomplete)
(\end occurred when \iftrue on line 854 was incomplete)
(\end occurred when \iftrue on line 854 was incomplete)
(\end occurred when \iftrue on line 854 was incomplete)
(\end occurred when \ifx on line 833 was incomplete)
(\end occurred when \ifx on line 833 was incomplete)
(\end occurred when \iftrue on line 833 was incomplete)
(\end occurred when \iftrue on line 833 was incomplete)
(\end occurred when \iftrue on line 833 was incomplete)
(\end occurred when \iftrue on line 833 was incomplete)
(\end occurred when \iftrue on line 833 was incomplete)
(\end occurred when \iftrue on line 833 was incomplete)
(\end occurred when \ifx on line 781 was incomplete)
(\end occurred when \ifx on line 781 was incomplete)
(\end occurred when \iftrue on line 781 was incomplete)
(\end occurred when \iftrue on line 781 was incomplete)
(\end occurred when \iftrue on line 781 was incomplete)
(\end occurred when \iftrue on line 781 was incomplete)
(\end occurred when \iftrue on line 781 was incomplete)
(\end occurred when \iftrue on line 781 was incomplete)
(\end occurred when \ifx on line 771 was incomplete)
(\end occurred when \ifx on line 771 was incomplete)
(\end occurred when \iftrue on line 771 was incomplete)
(\end occurred when \iftrue on line 771 was incomplete)
(\end occurred when \iftrue on line 771 was incomplete)
(\end occurred when \iftrue on line 771 was incomplete)
(\end occurred when \iftrue on line 771 was incomplete)
(\end occurred when \iftrue on line 771 was incomplete)
(\end occurred when \ifx on line 758 was incomplete)
(\end occurred when \ifx on line 758 was incomplete)
(\end occurred when \iftrue on line 758 was incomplete)
(\end occurred when \iftrue on line 758 was incomplete)
(\end occurred when \iftrue on line 758 was incomplete)
(\end occurred when \iftrue on line 758 was incomplete)
(\end occurred when \iftrue on line 758 was incomplete)
(\end occurred when \iftrue on line 758 was incomplete)
(\end occurred when \ifx on line 736 was incomplete)
(\end occurred when \ifx on line 736 was incomplete)
(\end occurred when \iftrue on line 736 was incomplete)
(\end occurred when \iftrue on line 736 was incomplete)
(\end occurred when \iftrue on line 736 was incomplete)
(\end occurred when \iftrue on line 736 was incomplete)
(\end occurred when \iftrue on line 736 was incomplete)
(\end occurred when \iftrue on line 736 was incomplete)
(\end occurred when \ifx on line 679 was incomplete)
(\end occurred when \ifx on line 679 was incomplete)
(\end occurred when \iftrue on line 679 was incomplete)
(\end occurred when \iftrue on line 679 was incomplete)
(\end occurred when \iftrue on line 679 was incomplete)
(\end occurred when \iftrue on line 679 was incomplete)
(\end occurred when \iftrue on line 679 was incomplete)
(\end occurred when \iftrue on line 679 was incomplete)
(\end occurred when \ifx on line 632 was incomplete)
(\end occurred when \ifx on line 632 was incomplete)
(\end occurred when \iftrue on line 632 was incomplete)
(\end occurred when \iftrue on line 632 was incomplete)
(\end occurred when \iftrue on line 632 was incomplete)
(\end occurred when \iftrue on line 632 was incomplete)
(\end occurred when \iftrue on line 632 was incomplete)
(\end occurred when \iftrue on line 632 was incomplete)
(\end occurred when \ifx on line 616 was incomplete)
(\end occurred when \ifx on line 616 was incomplete)
(\end occurred when \iftrue on line 616 was incomplete)
(\end occurred when \iftrue on line 616 was incomplete)
(\end occurred when \iftrue on line 616 was incomplete)
(\end occurred when \iftrue on line 616 was incomplete)
(\end occurred when \iftrue on line 616 was incomplete)
(\end occurred when \iftrue on line 616 was incomplete)
(\end occurred when \ifx on line 592 was incomplete)
(\end occurred when \ifx on line 592 was incomplete)
(\end occurred when \iftrue on line 592 was incomplete)
(\end occurred when \iftrue on line 592 was incomplete)
(\end occurred when \iftrue on line 592 was incomplete)
(\end occurred when \iftrue on line 592 was incomplete)
(\end occurred when \iftrue on line 592 was incomplete)
(\end occurred when \iftrue on line 592 was incomplete)
(\end occurred when \ifx on line 572 was incomplete)
(\end occurred when \ifx on line 572 was incomplete)
(\end occurred when \iftrue on line 572 was incomplete)
(\end occurred when \iftrue on line 572 was incomplete)
(\end occurred when \iftrue on line 572 was incomplete)
(\end occurred when \iftrue on line 572 was incomplete)
(\end occurred when \iftrue on line 572 was incomplete)
(\end occurred when \iftrue on line 572 was incomplete)
(\end occurred when \ifx on line 443 was incomplete)
(\end occurred when \ifx on line 443 was incomplete)
(\end occurred when \iftrue on line 443 was incomplete)
(\end occurred when \iftrue on line 443 was incomplete)
(\end occurred when \iftrue on line 443 was incomplete)
(\end occurred when \iftrue on line 443 was incomplete)
(\end occurred when \iftrue on line 443 was incomplete)
(\end occurred when \iftrue on line 443 was incomplete)
(\end occurred when \ifx on line 404 was incomplete)
(\end occurred when \ifx on line 404 was incomplete)
(\end occurred when \iftrue on line 404 was incomplete)
(\end occurred when \iftrue on line 404 was incomplete)
(\end occurred when \iftrue on line 404 was incomplete)
(\end occurred when \iftrue on line 404 was incomplete)
(\end occurred when \iftrue on line 404 was incomplete)
(\end occurred when \iftrue on line 404 was incomplete)
(\end occurred when \ifx on line 346 was incomplete)
(\end occurred when \ifx on line 346 was incomplete)
(\end occurred when \iftrue on line 346 was incomplete)
(\end occurred when \iftrue on line 346 was incomplete)
(\end occurred when \iftrue on line 346 was incomplete)
(\end occurred when \iftrue on line 346 was incomplete)
(\end occurred when \iftrue on line 346 was incomplete)
(\end occurred when \iftrue on line 346 was incomplete)
(\end occurred when \ifx on line 264 was incomplete)
(\end occurred when \ifx on line 264 was incomplete)
(\end occurred when \iftrue on line 264 was incomplete)
(\end occurred when \iftrue on line 264 was incomplete)
(\end occurred when \iftrue on line 264 was incomplete)
(\end occurred when \iftrue on line 264 was incomplete)
(\end occurred when \iftrue on line 264 was incomplete)
(\end occurred when \iftrue on line 264 was incomplete) 
Here is how much of TeX's memory you used:
 19612 strings out of 494779
 351123 string characters out of 6179263
 504046 words of memory out of 5000000
 21941 multiletter control sequences out of 15000+600000
 23508 words of font info for 167 fonts, out of 8000000 for 9000
 346 hyphenation exceptions out of 8191
 55i,16n,54p,1008b,509s stack positions out of 5000i,500n,10000p,200000b,80000s
pdfTeX warning (dest): n
ame{cite.JANSON17} has been referenced but does not exist, replaced by a fixed 
one

pdfTeX warning (dest): name{cite.JANSON16} has been referenced but does not exi
st, replaced by a fixed one

pdfTeX warning (dest): name{cite.BCCH16} has been referenced but does not exist
, replaced by a fixed one

pdfTeX warning (dest): name{cite.BCCV17} has been referenced but does not exist
, replaced by a fixed one

</usr/share/texlive/texmf-dist/fonts/type1/public/amsfonts/cm/cmbx10.pfb></usr/
share/texlive/texmf-dist/fonts/type1/public/amsfonts/cm/cmex10.pfb></usr/share/
texlive/texmf-dist/fonts/type1/public/amsfonts/cmextra/cmex7.pfb></usr/share/te
xlive/texmf-dist/fonts/type1/public/amsfonts/cm/cmmi10.pfb></usr/share/texlive/
texmf-dist/fonts/type1/public/amsfonts/cm/cmmi5.pfb></usr/share/texlive/texmf-d
ist/fonts/type1/public/amsfonts/cm/cmmi7.pfb></usr/share/texlive/texmf-dist/fon
ts/type1/public/amsfonts/cm/cmr10.pfb></usr/share/texlive/texmf-dist/fonts/type
1/public/amsfonts/cm/cmr5.pfb></usr/share/texlive/texmf-dist/fonts/type1/public
/amsfonts/cm/cmr7.pfb></usr/share/texlive/texmf-dist/fonts/type1/public/amsfont
s/cm/cmsy10.pfb></usr/share/texlive/texmf-dist/fonts/type1/public/amsfonts/cm/c
msy5.pfb></usr/share/texlive/texmf-dist/fonts/type1/public/amsfonts/cm/cmsy7.pf
b></usr/share/texlive/texmf-dist/fonts/type1/public/amsfonts/cm/cmti10.pfb></us
r/share/texlive/texmf-dist/fonts/type1/public/amsfonts/symbols/msam7.pfb></usr/
share/texlive/texmf-dist/fonts/type1/public/amsfonts/symbols/msbm10.pfb></usr/s
hare/texlive/texmf-dist/fonts/type1/public/amsfonts/symbols/msbm5.pfb></usr/sha
re/texlive/texmf-dist/fonts/type1/public/amsfonts/symbols/msbm7.pfb></usr/share
/texlive/texmf-dist/fonts/type1/public/rsfs/rsfs10.pfb></usr/share/texlive/texm
f-dist/fonts/type1/public/rsfs/rsfs5.pfb></usr/share/texlive/texmf-dist/fonts/t
ype1/public/rsfs/rsfs7.pfb>
Output written on source_extraction/results/1804.03277.pdf (125 pages, 365924 b
ytes).
PDF statistics:
 881 PDF objects out of 1000 (max. 8388607)
 622 compressed objects within 7 object streams
 223 named destinations out of 1000 (max. 500000)
 17933 words of extra memory for PDF output out of 20736 (max. 10000000)

