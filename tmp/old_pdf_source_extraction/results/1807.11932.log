This is pdfTeX, Version 3.14159265-2.6-1.40.16 (TeX Live 2015/Debian) (preloaded format=pdflatex 2017.8.22)  14 OCT 2018 21:53
entering extended mode
 restricted \write18 enabled.
 %&-line parsing enabled.
**source_extraction/results/1807.11932.tex
(./source_extraction/results/1807.11932.tex
LaTeX2e <2016/02/01>
Babel <3.9q> and hyphenation patterns for 1 language(s) loaded.
(/usr/share/texlive/texmf-dist/tex/latex/amscls/amsart.cls
Document Class: amsart 2015/03/04 v2.20.2
\linespacing=\dimen102
\normalparindent=\dimen103
\normaltopskip=\skip41
(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amsmath.sty
Package: amsmath 2016/03/03 v2.15a AMS math features
\@mathmargin=\skip42

For additional information on amsmath, use the `?' option.
(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amstext.sty
Package: amstext 2000/06/29 v2.01 AMS text

(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amsgen.sty
File: amsgen.sty 1999/11/30 v2.0 generic functions
\@emptytoks=\toks14
\ex@=\dimen104
))
(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amsbsy.sty
Package: amsbsy 1999/11/29 v1.2d Bold Symbols
\pmbraise@=\dimen105
)
(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amsopn.sty
Package: amsopn 1999/12/14 v2.01 operator names
)
\inf@bad=\count79
LaTeX Info: Redefining \frac on input line 199.
\uproot@=\count80
\leftroot@=\count81
LaTeX Info: Redefining \overline on input line 297.
\classnum@=\count82
\DOTSCASE@=\count83
LaTeX Info: Redefining \ldots on input line 394.
LaTeX Info: Redefining \dots on input line 397.
LaTeX Info: Redefining \cdots on input line 518.
\Mathstrutbox@=\box26
\strutbox@=\box27
\big@size=\dimen106
LaTeX Font Info:    Redeclaring font encoding OML on input line 630.
LaTeX Font Info:    Redeclaring font encoding OMS on input line 631.
\macc@depth=\count84
\c@MaxMatrixCols=\count85
\dotsspace@=\muskip10
\c@parentequation=\count86
\dspbrk@lvl=\count87
\tag@help=\toks15
\row@=\count88
\column@=\count89
\maxfields@=\count90
\andhelp@=\toks16
\eqnshift@=\dimen107
\alignsep@=\dimen108
\tagshift@=\dimen109
\tagwidth@=\dimen110
\totwidth@=\dimen111
\lineht@=\dimen112
\@envbody=\toks17
\multlinegap=\skip43
\multlinetaggap=\skip44
\mathdisplay@stack=\toks18
LaTeX Info: Redefining \[ on input line 2735.
LaTeX Info: Redefining \] on input line 2736.
)
LaTeX Font Info:    Try loading font information for U+msa on input line 388.

(/usr/share/texlive/texmf-dist/tex/latex/amsfonts/umsa.fd
File: umsa.fd 2013/01/14 v3.01 AMS symbols A
)
(/usr/share/texlive/texmf-dist/tex/latex/amsfonts/amsfonts.sty
Package: amsfonts 2013/01/14 v3.01 Basic AMSFonts support
\symAMSa=\mathgroup4
\symAMSb=\mathgroup5
LaTeX Font Info:    Overwriting math alphabet `\mathfrak' in version `bold'
(Font)                  U/euf/m/n --> U/euf/b/n on input line 106.
)
\copyins=\insert199
\abstractbox=\box28
\listisep=\skip45
\c@part=\count91
\c@section=\count92
\c@subsection=\count93
\c@subsubsection=\count94
\c@paragraph=\count95
\c@subparagraph=\count96
\c@figure=\count97
\c@table=\count98
\abovecaptionskip=\skip46
\belowcaptionskip=\skip47
\captionindent=\dimen113
\thm@style=\toks19
\thm@bodyfont=\toks20
\thm@headfont=\toks21
\thm@notefont=\toks22
\thm@headpunct=\toks23
\thm@preskip=\skip48
\thm@postskip=\skip49
\thm@headsep=\skip50
\dth@everypar=\toks24
)
(/usr/share/texlive/texmf-dist/tex/latex/adjustbox/adjustbox.sty
Package: adjustbox 2012/05/21 v1.0 Adjusting TeX boxes (trim, clip, ...)

(/usr/share/texlive/texmf-dist/tex/latex/xkeyval/xkeyval.sty
Package: xkeyval 2014/12/03 v2.7a package option processing (HA)

(/usr/share/texlive/texmf-dist/tex/generic/xkeyval/xkeyval.tex
(/usr/share/texlive/texmf-dist/tex/generic/xkeyval/xkvutils.tex
\XKV@toks=\toks25
\XKV@tempa@toks=\toks26

(/usr/share/texlive/texmf-dist/tex/generic/xkeyval/keyval.tex))
\XKV@depth=\count99
File: xkeyval.tex 2014/12/03 v2.7a key=value parser (HA)
))
(/usr/share/texlive/texmf-dist/tex/latex/adjustbox/adjcalc.sty
Package: adjcalc 2012/05/16 v1.1 Provides advanced setlength with multiple back
-ends (calc, etex, pgfmath)
)
(/usr/share/texlive/texmf-dist/tex/latex/adjustbox/trimclip.sty
Package: trimclip 2012/05/16 v1.0 Trim and clip general TeX material

(/usr/share/texlive/texmf-dist/tex/latex/graphics/graphicx.sty
Package: graphicx 2014/10/28 v1.0g Enhanced LaTeX Graphics (DPC,SPQR)

(/usr/share/texlive/texmf-dist/tex/latex/graphics/graphics.sty
Package: graphics 2016/01/03 v1.0q Standard LaTeX Graphics (DPC,SPQR)

(/usr/share/texlive/texmf-dist/tex/latex/graphics/trig.sty
Package: trig 2016/01/03 v1.10 sin cos tan (DPC)
)
(/usr/share/texlive/texmf-dist/tex/latex/latexconfig/graphics.cfg
File: graphics.cfg 2010/04/23 v1.9 graphics configuration of TeX Live
)
Package graphics Info: Driver file: pdftex.def on input line 95.

(/usr/share/texlive/texmf-dist/tex/latex/pdftex-def/pdftex.def
File: pdftex.def 2011/05/27 v0.06d Graphics/color for pdfTeX

(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/infwarerr.sty
Package: infwarerr 2010/04/08 v1.3 Providing info/warning/error messages (HO)
)
(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/ltxcmds.sty
Package: ltxcmds 2011/11/09 v1.22 LaTeX kernel commands for general use (HO)
)
\Gread@gobject=\count100
))
\Gin@req@height=\dimen114
\Gin@req@width=\dimen115
)
(/usr/share/texlive/texmf-dist/tex/latex/collectbox/collectbox.sty
Package: collectbox 2012/05/17 v0.4b Collect macro arguments as boxes
\collectedbox=\box29
)
\tc@llx=\dimen116
\tc@lly=\dimen117
\tc@urx=\dimen118
\tc@ury=\dimen119
Package trimclip Info: Using driver 'tc-pdftex.def'.

(/usr/share/texlive/texmf-dist/tex/latex/adjustbox/tc-pdftex.def
File: tc-pdftex.def 2012/05/13 v1.0 Clipping driver for pdftex
))
\adjbox@Width=\dimen120
\adjbox@Height=\dimen121
\adjbox@Depth=\dimen122
\adjbox@Totalheight=\dimen123

(/usr/share/texlive/texmf-dist/tex/latex/ifoddpage/ifoddpage.sty
Package: ifoddpage 2011/09/13 v1.0 Conditionals for odd/even page detection
\c@checkoddpage=\count101
)
(/usr/share/texlive/texmf-dist/tex/latex/varwidth/varwidth.sty
Package: varwidth 2009/03/30 ver 0.92;  Variable-width minipages
\@vwid@box=\box30
\sift@deathcycles=\count102
\@vwid@loff=\dimen124
\@vwid@roff=\dimen125
))
(/usr/share/texlive/texmf-dist/tex/latex/amsfonts/amssymb.sty
Package: amssymb 2013/01/14 v3.01 AMS font symbols
)
(/usr/share/texlive/texmf-dist/tex/latex/jknapltx/mathrsfs.sty
Package: mathrsfs 1996/01/01 Math RSFS package v1.0 (jk)
\symrsfs=\mathgroup6
)
(/usr/share/texlive/texmf-dist/tex/latex/mathtools/mathtools.sty
Package: mathtools 2015/11/12 v1.18 mathematical typesetting tools

(/usr/share/texlive/texmf-dist/tex/latex/tools/calc.sty
Package: calc 2014/10/28 v4.3 Infix arithmetic (KKT,FJ)
\calc@Acount=\count103
\calc@Bcount=\count104
\calc@Adimen=\dimen126
\calc@Bdimen=\dimen127
\calc@Askip=\skip51
\calc@Bskip=\skip52
LaTeX Info: Redefining \setlength on input line 80.
LaTeX Info: Redefining \addtolength on input line 81.
\calc@Ccount=\count105
\calc@Cskip=\skip53
)
(/usr/share/texlive/texmf-dist/tex/latex/mathtools/mhsetup.sty
Package: mhsetup 2010/01/21 v1.2a programming setup (MH)
)
LaTeX Info: Thecontrolsequence`\('isalreadyrobust on input line 129.
LaTeX Info: Thecontrolsequence`\)'isalreadyrobust on input line 129.
LaTeX Info: Thecontrolsequence`\['isalreadyrobust on input line 129.
LaTeX Info: Thecontrolsequence`\]'isalreadyrobust on input line 129.
\g_MT_multlinerow_int=\count106
\l_MT_multwidth_dim=\dimen128
\origjot=\skip54
\l_MT_shortvdotswithinadjustabove_dim=\dimen129
\l_MT_shortvdotswithinadjustbelow_dim=\dimen130
\l_MT_above_intertext_sep=\dimen131
\l_MT_below_intertext_sep=\dimen132
\l_MT_above_shortintertext_sep=\dimen133
\l_MT_below_shortintertext_sep=\dimen134
)
(/usr/share/texlive/texmf-dist/tex/latex/microtype/microtype.sty
Package: microtype 2013/05/23 v2.5a Micro-typographical refinements (RS)
\MT@toks=\toks27
\MT@count=\count107
LaTeX Info: Redefining \textls on input line 766.
\MT@outer@kern=\dimen135
LaTeX Info: Redefining \textmicrotypecontext on input line 1285.
\MT@listname@count=\count108

(/usr/share/texlive/texmf-dist/tex/latex/microtype/microtype-pdftex.def
File: microtype-pdftex.def 2013/05/23 v2.5a Definitions specific to pdftex (RS)

LaTeX Info: Redefining \lsstyle on input line 915.
LaTeX Info: Redefining \lslig on input line 915.
\MT@outer@space=\skip55
)
Package microtype Info: Loading configuration file microtype.cfg.

(/usr/share/texlive/texmf-dist/tex/latex/microtype/microtype.cfg
File: microtype.cfg 2013/05/23 v2.5a microtype main configuration file (RS)
))
(/usr/share/texlive/texmf-dist/tex/latex/tikz-cd/tikz-cd.sty
Package: tikz-cd 2014/10/30 v0.9e Commutative diagrams with tikz

(/usr/share/texlive/texmf-dist/tex/latex/pgf/frontendlayer/tikz.sty
(/usr/share/texlive/texmf-dist/tex/latex/pgf/basiclayer/pgf.sty
(/usr/share/texlive/texmf-dist/tex/latex/pgf/utilities/pgfrcs.sty
(/usr/share/texlive/texmf-dist/tex/generic/pgf/utilities/pgfutil-common.tex
\pgfutil@everybye=\toks28
\pgfutil@tempdima=\dimen136
\pgfutil@tempdimb=\dimen137

(/usr/share/texlive/texmf-dist/tex/generic/pgf/utilities/pgfutil-common-lists.t
ex)) (/usr/share/texlive/texmf-dist/tex/generic/pgf/utilities/pgfutil-latex.def
\pgfutil@abb=\box31
(/usr/share/texlive/texmf-dist/tex/latex/ms/everyshi.sty
Package: everyshi 2001/05/15 v3.00 EveryShipout Package (MS)
))
(/usr/share/texlive/texmf-dist/tex/generic/pgf/utilities/pgfrcs.code.tex
Package: pgfrcs 2015/08/07 v3.0.1a (rcs-revision 1.31)
))
Package: pgf 2015/08/07 v3.0.1a (rcs-revision 1.15)

(/usr/share/texlive/texmf-dist/tex/latex/pgf/basiclayer/pgfcore.sty
(/usr/share/texlive/texmf-dist/tex/latex/pgf/systemlayer/pgfsys.sty
(/usr/share/texlive/texmf-dist/tex/generic/pgf/systemlayer/pgfsys.code.tex
Package: pgfsys 2014/07/09 v3.0.1a (rcs-revision 1.48)

(/usr/share/texlive/texmf-dist/tex/generic/pgf/utilities/pgfkeys.code.tex
\pgfkeys@pathtoks=\toks29
\pgfkeys@temptoks=\toks30

(/usr/share/texlive/texmf-dist/tex/generic/pgf/utilities/pgfkeysfiltered.code.t
ex
\pgfkeys@tmptoks=\toks31
))
\pgf@x=\dimen138
\pgf@y=\dimen139
\pgf@xa=\dimen140
\pgf@ya=\dimen141
\pgf@xb=\dimen142
\pgf@yb=\dimen143
\pgf@xc=\dimen144
\pgf@yc=\dimen145
\w@pgf@writea=\write3
\r@pgf@reada=\read1
\c@pgf@counta=\count109
\c@pgf@countb=\count110
\c@pgf@countc=\count111
\c@pgf@countd=\count112
\t@pgf@toka=\toks32
\t@pgf@tokb=\toks33
\t@pgf@tokc=\toks34
 (/usr/share/texlive/texmf-dist/tex/generic/pgf/systemlayer/pgf.cfg
File: pgf.cfg 2008/05/14  (rcs-revision 1.7)
)
Driver file for pgf: pgfsys-pdftex.def

(/usr/share/texlive/texmf-dist/tex/generic/pgf/systemlayer/pgfsys-pdftex.def
File: pgfsys-pdftex.def 2014/10/11  (rcs-revision 1.35)

(/usr/share/texlive/texmf-dist/tex/generic/pgf/systemlayer/pgfsys-common-pdf.de
f
File: pgfsys-common-pdf.def 2013/10/10  (rcs-revision 1.13)
)))
(/usr/share/texlive/texmf-dist/tex/generic/pgf/systemlayer/pgfsyssoftpath.code.
tex
File: pgfsyssoftpath.code.tex 2013/09/09  (rcs-revision 1.9)
\pgfsyssoftpath@smallbuffer@items=\count113
\pgfsyssoftpath@bigbuffer@items=\count114
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/systemlayer/pgfsysprotocol.code.
tex
File: pgfsysprotocol.code.tex 2006/10/16  (rcs-revision 1.4)
)) (/usr/share/texlive/texmf-dist/tex/latex/xcolor/xcolor.sty
Package: xcolor 2007/01/21 v2.11 LaTeX color extensions (UK)

(/usr/share/texlive/texmf-dist/tex/latex/latexconfig/color.cfg
File: color.cfg 2007/01/18 v1.5 color configuration of teTeX/TeXLive
)
Package xcolor Info: Driver file: pdftex.def on input line 225.
Package xcolor Info: Model `cmy' substituted by `cmy0' on input line 1337.
Package xcolor Info: Model `hsb' substituted by `rgb' on input line 1341.
Package xcolor Info: Model `RGB' extended on input line 1353.
Package xcolor Info: Model `HTML' substituted by `rgb' on input line 1355.
Package xcolor Info: Model `Hsb' substituted by `hsb' on input line 1356.
Package xcolor Info: Model `tHsb' substituted by `hsb' on input line 1357.
Package xcolor Info: Model `HSB' substituted by `hsb' on input line 1358.
Package xcolor Info: Model `Gray' substituted by `gray' on input line 1359.
Package xcolor Info: Model `wave' substituted by `hsb' on input line 1360.
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcore.code.tex
Package: pgfcore 2010/04/11 v3.0.1a (rcs-revision 1.7)

(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmath.code.tex
(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathcalc.code.tex
(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathutil.code.tex)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathparser.code.tex
\pgfmath@dimen=\dimen146
\pgfmath@count=\count115
\pgfmath@box=\box32
\pgfmath@toks=\toks35
\pgfmath@stack@operand=\toks36
\pgfmath@stack@operation=\toks37
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.code.tex
(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.basic.code
.tex)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.trigonomet
ric.code.tex)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.random.cod
e.tex)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.comparison
.code.tex)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.base.code.
tex)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.round.code
.tex)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.misc.code.
tex)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.integerari
thmetics.code.tex)))
(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathfloat.code.tex
\c@pgfmathroundto@lastzeros=\count116
))
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcorepoints.code.te
x
File: pgfcorepoints.code.tex 2013/10/07  (rcs-revision 1.27)
\pgf@picminx=\dimen147
\pgf@picmaxx=\dimen148
\pgf@picminy=\dimen149
\pgf@picmaxy=\dimen150
\pgf@pathminx=\dimen151
\pgf@pathmaxx=\dimen152
\pgf@pathminy=\dimen153
\pgf@pathmaxy=\dimen154
\pgf@xx=\dimen155
\pgf@xy=\dimen156
\pgf@yx=\dimen157
\pgf@yy=\dimen158
\pgf@zx=\dimen159
\pgf@zy=\dimen160
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcorepathconstruct.
code.tex
File: pgfcorepathconstruct.code.tex 2013/10/07  (rcs-revision 1.29)
\pgf@path@lastx=\dimen161
\pgf@path@lasty=\dimen162
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcorepathusage.code
.tex
File: pgfcorepathusage.code.tex 2014/11/02  (rcs-revision 1.24)
\pgf@shorten@end@additional=\dimen163
\pgf@shorten@start@additional=\dimen164
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcorescopes.code.te
x
File: pgfcorescopes.code.tex 2015/05/08  (rcs-revision 1.46)
\pgfpic=\box33
\pgf@hbox=\box34
\pgf@layerbox@main=\box35
\pgf@picture@serial@count=\count117
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcoregraphicstate.c
ode.tex
File: pgfcoregraphicstate.code.tex 2014/11/02  (rcs-revision 1.12)
\pgflinewidth=\dimen165
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcoretransformation
s.code.tex
File: pgfcoretransformations.code.tex 2015/08/07  (rcs-revision 1.20)
\pgf@pt@x=\dimen166
\pgf@pt@y=\dimen167
\pgf@pt@temp=\dimen168
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcorequick.code.tex
File: pgfcorequick.code.tex 2008/10/09  (rcs-revision 1.3)
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcoreobjects.code.t
ex
File: pgfcoreobjects.code.tex 2006/10/11  (rcs-revision 1.2)
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcorepathprocessing
.code.tex
File: pgfcorepathprocessing.code.tex 2013/09/09  (rcs-revision 1.9)
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcorearrows.code.te
x
File: pgfcorearrows.code.tex 2015/05/14  (rcs-revision 1.43)
\pgfarrowsep=\dimen169
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcoreshade.code.tex
File: pgfcoreshade.code.tex 2013/07/15  (rcs-revision 1.15)
\pgf@max=\dimen170
\pgf@sys@shading@range@num=\count118
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcoreimage.code.tex
File: pgfcoreimage.code.tex 2013/07/15  (rcs-revision 1.18)

(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcoreexternal.code.
tex
File: pgfcoreexternal.code.tex 2014/07/09  (rcs-revision 1.21)
\pgfexternal@startupbox=\box36
))
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcorelayers.code.te
x
File: pgfcorelayers.code.tex 2013/07/18  (rcs-revision 1.7)
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcoretransparency.c
ode.tex
File: pgfcoretransparency.code.tex 2013/09/30  (rcs-revision 1.5)
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcorepatterns.code.
tex
File: pgfcorepatterns.code.tex 2013/11/07  (rcs-revision 1.5)
)))
(/usr/share/texlive/texmf-dist/tex/generic/pgf/modules/pgfmoduleshapes.code.tex
File: pgfmoduleshapes.code.tex 2014/03/21  (rcs-revision 1.35)
\pgfnodeparttextbox=\box37
) (/usr/share/texlive/texmf-dist/tex/generic/pgf/modules/pgfmoduleplot.code.tex
File: pgfmoduleplot.code.tex 2015/08/03  (rcs-revision 1.13)
)
(/usr/share/texlive/texmf-dist/tex/latex/pgf/compatibility/pgfcomp-version-0-65
.sty
Package: pgfcomp-version-0-65 2007/07/03 v3.0.1a (rcs-revision 1.7)
\pgf@nodesepstart=\dimen171
\pgf@nodesepend=\dimen172
)
(/usr/share/texlive/texmf-dist/tex/latex/pgf/compatibility/pgfcomp-version-1-18
.sty
Package: pgfcomp-version-1-18 2007/07/23 v3.0.1a (rcs-revision 1.1)
)) (/usr/share/texlive/texmf-dist/tex/latex/pgf/utilities/pgffor.sty
(/usr/share/texlive/texmf-dist/tex/latex/pgf/utilities/pgfkeys.sty
(/usr/share/texlive/texmf-dist/tex/generic/pgf/utilities/pgfkeys.code.tex))
(/usr/share/texlive/texmf-dist/tex/latex/pgf/math/pgfmath.sty
(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmath.code.tex))
(/usr/share/texlive/texmf-dist/tex/generic/pgf/utilities/pgffor.code.tex
Package: pgffor 2013/12/13 v3.0.1a (rcs-revision 1.25)

(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmath.code.tex)
\pgffor@iter=\dimen173
\pgffor@skip=\dimen174
\pgffor@stack=\toks38
\pgffor@toks=\toks39
))
(/usr/share/texlive/texmf-dist/tex/generic/pgf/frontendlayer/tikz/tikz.code.tex
Package: tikz 2015/08/07 v3.0.1a (rcs-revision 1.151)

(/usr/share/texlive/texmf-dist/tex/generic/pgf/libraries/pgflibraryplothandlers
.code.tex
File: pgflibraryplothandlers.code.tex 2013/08/31 v3.0.1a (rcs-revision 1.20)
\pgf@plot@mark@count=\count119
\pgfplotmarksize=\dimen175
)
\tikz@lastx=\dimen176
\tikz@lasty=\dimen177
\tikz@lastxsaved=\dimen178
\tikz@lastysaved=\dimen179
\tikzleveldistance=\dimen180
\tikzsiblingdistance=\dimen181
\tikz@figbox=\box38
\tikz@figbox@bg=\box39
\tikz@tempbox=\box40
\tikz@tempbox@bg=\box41
\tikztreelevel=\count120
\tikznumberofchildren=\count121
\tikznumberofcurrentchild=\count122
\tikz@fig@count=\count123

(/usr/share/texlive/texmf-dist/tex/generic/pgf/modules/pgfmodulematrix.code.tex
File: pgfmodulematrix.code.tex 2013/09/17  (rcs-revision 1.8)
\pgfmatrixcurrentrow=\count124
\pgfmatrixcurrentcolumn=\count125
\pgf@matrix@numberofcolumns=\count126
)
\tikz@expandcount=\count127

(/usr/share/texlive/texmf-dist/tex/generic/pgf/frontendlayer/tikz/libraries/tik
zlibrarytopaths.code.tex
File: tikzlibrarytopaths.code.tex 2008/06/17 v3.0.1a (rcs-revision 1.2)
)))
(/usr/share/texlive/texmf-dist/tex/generic/tikz-cd/tikzlibrarycd.code.tex
(/usr/share/texlive/texmf-dist/tex/generic/pgf/frontendlayer/tikz/libraries/tik
zlibrarymatrix.code.tex
File: tikzlibrarymatrix.code.tex 2013/07/12 v3.0.1a (rcs-revision 1.4)
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/frontendlayer/tikz/libraries/tik
zlibraryquotes.code.tex
File: tikzlibraryquotes.code.tex 2014/03/21 v3.0.1a (rcs-revision 1.4)
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/libraries/pgflibraryarrows.meta.
code.tex
File: pgflibraryarrows.meta.code.tex 2015/05/13 v3.0.1a (rcs-revision 1.13)
\pgfarrowinset=\dimen182
\pgfarrowlength=\dimen183
\pgfarrowwidth=\dimen184
\pgfarrowlinewidth=\dimen185
))) (/usr/share/texlive/texmf-dist/tex/latex/base/fontenc.sty
Package: fontenc 2005/09/27 v1.99g Standard LaTeX package

(/usr/share/texlive/texmf-dist/tex/latex/base/t1enc.def
File: t1enc.def 2005/09/27 v1.99g Standard LaTeX file
LaTeX Font Info:    Redeclaring font encoding T1 on input line 48.
))
(/usr/share/texlive/texmf-dist/tex/latex/hyperref/hyperref.sty
Package: hyperref 2012/11/06 v6.83m Hypertext links for LaTeX

(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/hobsub-hyperref.sty
Package: hobsub-hyperref 2012/05/28 v1.13 Bundle oberdiek, subset hyperref (HO)


(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/hobsub-generic.sty
Package: hobsub-generic 2012/05/28 v1.13 Bundle oberdiek, subset generic (HO)
Package: hobsub 2012/05/28 v1.13 Construct package bundles (HO)
Package hobsub Info: Skipping package `infwarerr' (already loaded).
Package hobsub Info: Skipping package `ltxcmds' (already loaded).
Package: ifluatex 2010/03/01 v1.3 Provides the ifluatex switch (HO)
Package ifluatex Info: LuaTeX not detected.
Package: ifvtex 2010/03/01 v1.5 Detect VTeX and its facilities (HO)
Package ifvtex Info: VTeX not detected.
Package: intcalc 2007/09/27 v1.1 Expandable calculations with integers (HO)
Package: ifpdf 2011/01/30 v2.3 Provides the ifpdf switch (HO)
Package ifpdf Info: pdfTeX in PDF mode is detected.
Package: etexcmds 2011/02/16 v1.5 Avoid name clashes with e-TeX commands (HO)
Package etexcmds Info: Could not find \expanded.
(etexcmds)             That can mean that you are not using pdfTeX 1.50 or
(etexcmds)             that some package has redefined \expanded.
(etexcmds)             In the latter case, load this package earlier.
Package: kvsetkeys 2012/04/25 v1.16 Key value parser (HO)
Package: kvdefinekeys 2011/04/07 v1.3 Define keys (HO)
Package: pdftexcmds 2011/11/29 v0.20 Utility functions of pdfTeX for LuaTeX (HO
)
Package pdftexcmds Info: LuaTeX not detected.
Package pdftexcmds Info: \pdf@primitive is available.
Package pdftexcmds Info: \pdf@ifprimitive is available.
Package pdftexcmds Info: \pdfdraftmode found.
Package: pdfescape 2011/11/25 v1.13 Implements pdfTeX's escape features (HO)
Package: bigintcalc 2012/04/08 v1.3 Expandable calculations on big integers (HO
)
Package: bitset 2011/01/30 v1.1 Handle bit-vector datatype (HO)
Package: uniquecounter 2011/01/30 v1.2 Provide unlimited unique counter (HO)
)
Package hobsub Info: Skipping package `hobsub' (already loaded).
Package: letltxmacro 2010/09/02 v1.4 Let assignment for LaTeX macros (HO)
Package: hopatch 2012/05/28 v1.2 Wrapper for package hooks (HO)
Package: xcolor-patch 2011/01/30 xcolor patch
Package: atveryend 2011/06/30 v1.8 Hooks at the very end of document (HO)
Package atveryend Info: \enddocument detected (standard20110627).
Package: atbegshi 2011/10/05 v1.16 At begin shipout hook (HO)
Package: refcount 2011/10/16 v3.4 Data extraction from label references (HO)
Package: hycolor 2011/01/30 v1.7 Color options for hyperref/bookmark (HO)
)
(/usr/share/texlive/texmf-dist/tex/generic/ifxetex/ifxetex.sty
Package: ifxetex 2010/09/12 v0.6 Provides ifxetex conditional
)
(/usr/share/texlive/texmf-dist/tex/latex/oberdiek/auxhook.sty
Package: auxhook 2011/03/04 v1.3 Hooks for auxiliary files (HO)
)
(/usr/share/texlive/texmf-dist/tex/latex/oberdiek/kvoptions.sty
Package: kvoptions 2011/06/30 v3.11 Key value format for package options (HO)
)
\@linkdim=\dimen186
\Hy@linkcounter=\count128
\Hy@pagecounter=\count129

(/usr/share/texlive/texmf-dist/tex/latex/hyperref/pd1enc.def
File: pd1enc.def 2012/11/06 v6.83m Hyperref: PDFDocEncoding definition (HO)
)
\Hy@SavedSpaceFactor=\count130

(/usr/share/texlive/texmf-dist/tex/latex/latexconfig/hyperref.cfg
File: hyperref.cfg 2002/06/06 v1.2 hyperref configuration of TeXLive
)
Package hyperref Info: Option `colorlinks' set `true' on input line 4319.
Package hyperref Info: Hyper figures OFF on input line 4443.
Package hyperref Info: Link nesting OFF on input line 4448.
Package hyperref Info: Hyper index ON on input line 4451.
Package hyperref Info: Plain pages OFF on input line 4458.
Package hyperref Info: Backreferencing OFF on input line 4463.
Package hyperref Info: Implicit mode ON; LaTeX internals redefined.
Package hyperref Info: Bookmarks ON on input line 4688.
\c@Hy@tempcnt=\count131

(/usr/share/texlive/texmf-dist/tex/latex/url/url.sty
\Urlmuskip=\muskip11
Package: url 2013/09/16  ver 3.4  Verb mode for urls, etc.
)
LaTeX Info: Redefining \url on input line 5041.
\XeTeXLinkMargin=\dimen187
\Fld@menulength=\count132
\Field@Width=\dimen188
\Fld@charsize=\dimen189
Package hyperref Info: Hyper figures OFF on input line 6295.
Package hyperref Info: Link nesting OFF on input line 6300.
Package hyperref Info: Hyper index ON on input line 6303.
Package hyperref Info: backreferencing OFF on input line 6310.
Package hyperref Info: Link coloring ON on input line 6313.
Package hyperref Info: Link coloring with OCG OFF on input line 6320.
Package hyperref Info: PDF/A mode OFF on input line 6325.
LaTeX Info: Redefining \ref on input line 6365.
LaTeX Info: Redefining \pageref on input line 6369.
\Hy@abspage=\count133
\c@Item=\count134
\c@Hfootnote=\count135
)

Package hyperref Message: Driver (autodetected): hpdftex.

(/usr/share/texlive/texmf-dist/tex/latex/hyperref/hpdftex.def
File: hpdftex.def 2012/11/06 v6.83m Hyperref driver for pdfTeX
\Fld@listcount=\count136
\c@bookmark@seq@number=\count137

(/usr/share/texlive/texmf-dist/tex/latex/oberdiek/rerunfilecheck.sty
Package: rerunfilecheck 2011/04/15 v1.7 Rerun checks for auxiliary files (HO)
Package uniquecounter Info: New unique counter `rerunfilecheck' on input line 2
82.
)
\Hy@SectionHShift=\skip56
)
(/usr/share/texlive/texmf-dist/tex/latex/cleveref/cleveref.sty
Package: cleveref 2013/12/28 v0.19 Intelligent cross-referencing
Package cleveref Info: `hyperref' support loaded on input line 2230.
LaTeX Info: Redefining \cref on input line 2230.
LaTeX Info: Redefining \Cref on input line 2230.
LaTeX Info: Redefining \crefrange on input line 2230.
LaTeX Info: Redefining \Crefrange on input line 2230.
LaTeX Info: Redefining \cpageref on input line 2230.
LaTeX Info: Redefining \Cpageref on input line 2230.
LaTeX Info: Redefining \cpagerefrange on input line 2230.
LaTeX Info: Redefining \Cpagerefrange on input line 2230.
LaTeX Info: Redefining \labelcref on input line 2230.
LaTeX Info: Redefining \labelcpageref on input line 2230.
Package cleveref Info: `amsthm' support loaded on input line 2858.
Package cleveref Info: always capitalise cross-reference names on input line 74
65.
Package cleveref Info: always capitalise cross-reference names on input line 74
93.
)
(/usr/share/texlive/texmf-dist/tex/latex/geometry/geometry.sty
Package: geometry 2010/09/12 v5.6 Page Geometry
\Gm@cnth=\count138
\Gm@cntv=\count139
\c@Gm@tempcnt=\count140
\Gm@bindingoffset=\dimen190
\Gm@wd@mp=\dimen191
\Gm@odd@mp=\dimen192
\Gm@even@mp=\dimen193
\Gm@layoutwidth=\dimen194
\Gm@layoutheight=\dimen195
\Gm@layouthoffset=\dimen196
\Gm@layoutvoffset=\dimen197
\Gm@dimlist=\toks40
)
(/usr/share/texlive/texmf-dist/tex/latex/setspace/setspace.sty
Package: setspace 2011/12/19 v6.7a set line spacing
) (./extract.sty
(/usr/share/texlive/texmf-dist/tex/latex/environ/environ.sty
Package: environ 2014/05/04 v0.3 A new way to define environments

(/usr/share/texlive/texmf-dist/tex/latex/trimspaces/trimspaces.sty
Package: trimspaces 2009/09/17 v1.1 Trim spaces around a token list
))
(/usr/share/texlive/texmf-dist/tex/latex/etextools/etextools.sty
Package: etextools 2010/12/07 v3.1415926 e-TeX more useful tools for LaTeX pack
age writers

(/usr/share/texlive/texmf-dist/tex/latex/etex-pkg/etex.sty
Package: etex 2016/01/11 v2.6 eTeX basic definition package (PEB,DPC)
\et@xins=\count141
)
(/usr/share/texlive/texmf-dist/tex/latex/etoolbox/etoolbox.sty
Package: etoolbox 2015/08/02 v2.2a e-TeX tools for LaTeX (JAW)
\etb@tempcnta=\count142
)
\ettl@fter=\count143
\ettl@for@nested=\count277
)
(/usr/share/texmf/tex/latex/preview/preview.sty
Package: preview 2010/02/14 11.88 (AUCTeX/preview-latex)

(/usr/share/texmf/tex/latex/preview/prtightpage.def
\PreviewBorder=\dimen198
)
\pr@snippet=\count144
\pr@box=\box42
\pr@output=\toks41
)
\c@propcounter=\count145
\mybox=\box43
)
\c@thm=\count146

(source_extraction/results/1807.11932.aux)
\openout1 = `1807.11932.aux'.

LaTeX Font Info:    Checking defaults for OML/cmm/m/it on input line 53.
LaTeX Font Info:    ... okay on input line 53.
LaTeX Font Info:    Checking defaults for T1/cmr/m/n on input line 53.
LaTeX Font Info:    ... okay on input line 53.
LaTeX Font Info:    Checking defaults for OT1/cmr/m/n on input line 53.
LaTeX Font Info:    ... okay on input line 53.
LaTeX Font Info:    Checking defaults for OMS/cmsy/m/n on input line 53.
LaTeX Font Info:    ... okay on input line 53.
LaTeX Font Info:    Checking defaults for OMX/cmex/m/n on input line 53.
LaTeX Font Info:    ... okay on input line 53.
LaTeX Font Info:    Checking defaults for U/cmr/m/n on input line 53.
LaTeX Font Info:    ... okay on input line 53.
LaTeX Font Info:    Checking defaults for PD1/pdf/m/n on input line 53.
LaTeX Font Info:    ... okay on input line 53.
LaTeX Font Info:    Try loading font information for U+msa on input line 53.

(/usr/share/texlive/texmf-dist/tex/latex/amsfonts/umsa.fd
File: umsa.fd 2013/01/14 v3.01 AMS symbols A
)
LaTeX Font Info:    Try loading font information for U+msb on input line 53.

(/usr/share/texlive/texmf-dist/tex/latex/amsfonts/umsb.fd
File: umsb.fd 2013/01/14 v3.01 AMS symbols B
)
LaTeX Font Info:    Try loading font information for U+rsfs on input line 53.

(/usr/share/texlive/texmf-dist/tex/latex/jknapltx/ursfs.fd
File: ursfs.fd 1998/03/24 rsfs font definition file (jk)
)
(/usr/share/texlive/texmf-dist/tex/context/base/supp-pdf.mkii
[Loading MPS to PDF converter (version 2006.09.02).]
\scratchcounter=\count147
Normal \dimen register pool exhausted, switching to extended pool.
\scratchdimen=\dimen256
\scratchbox=\box44
\nofMPsegments=\count148
\nofMParguments=\count149
\everyMPshowfont=\toks42
\MPscratchCnt=\count150
\MPscratchDim=\dimen257
\MPnumerator=\count151
\makeMPintoPDFobject=\count152
\everyMPtoPDFconversion=\toks43
) (/usr/share/texlive/texmf-dist/tex/latex/oberdiek/epstopdf-base.sty
Package: epstopdf-base 2010/02/09 v2.5 Base part for package epstopdf

(/usr/share/texlive/texmf-dist/tex/latex/oberdiek/grfext.sty
Package: grfext 2010/08/19 v1.1 Manage graphics extensions (HO)
)
Package grfext Info: Graphics extension search list:
(grfext)             [.png,.pdf,.jpg,.mps,.jpeg,.jbig2,.jb2,.PNG,.PDF,.JPG,.JPE
G,.JBIG2,.JB2,.eps]
(grfext)             \AppendGraphicsExtensions on input line 452.

(/usr/share/texlive/texmf-dist/tex/latex/latexconfig/epstopdf-sys.cfg
File: epstopdf-sys.cfg 2010/07/13 v1.3 Configuration of (r)epstopdf for TeX Liv
e
))
LaTeX Info: Redefining \microtypecontext on input line 53.
Package microtype Info: Generating PDF output.
Package microtype Info: Character protrusion enabled (level 2).
Package microtype Info: Using default protrusion set `alltext'.
Package microtype Info: Automatic font expansion enabled (level 2),
(microtype)             stretch: 20, shrink: 20, step: 1, non-selected.
Package microtype Info: Using default expansion set `basictext'.
Package microtype Info: No adjustment of tracking.
Package microtype Info: No adjustment of interword spacing.
Package microtype Info: No adjustment of character kerning.

(/usr/share/texlive/texmf-dist/tex/latex/microtype/mt-cmr.cfg
File: mt-cmr.cfg 2013/05/19 v2.2 microtype config. file: Computer Modern Roman 
(RS)
)
ABD: EveryShipout initializing macros
\AtBeginShipoutBox=\box45
Package hyperref Info: Link coloring ON on input line 53.

(/usr/share/texlive/texmf-dist/tex/latex/hyperref/nameref.sty
Package: nameref 2012/10/27 v2.43 Cross-referencing by name of section

(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/gettitlestring.sty
Package: gettitlestring 2010/12/03 v1.4 Cleanup title references (HO)
)
\c@section@level=\count153
)
LaTeX Info: Redefining \ref on input line 53.
LaTeX Info: Redefining \pageref on input line 53.
LaTeX Info: Redefining \nameref on input line 53.

(source_extraction/results/1807.11932.out)
(source_extraction/results/1807.11932.out)
\@outlinefile=\write4
\openout4 = `1807.11932.out'.


*geometry* driver: auto-detecting
*geometry* detected driver: pdftex
*geometry* verbose mode - [ preamble ] result:
* driver: pdftex
* paper: a4paper
* layout: <same size as paper>
* layoutoffset:(h,v)=(0.0pt,0.0pt)
* modes: twoside 
* h-part:(L,W,R)=(99.58464pt, 398.3386pt, 99.58464pt)
* v-part:(T,H,B)=(92.47145pt, 660.10394pt, 92.47145pt)
* \paperwidth=597.50787pt
* \paperheight=845.04684pt
* \textwidth=398.3386pt
* \textheight=660.10394pt
* \oddsidemargin=27.31465pt
* \evensidemargin=27.31465pt
* \topmargin=-1.79854pt
* \headheight=8.0pt
* \headsep=14.0pt
* \topskip=10.0pt
* \footskip=12.0pt
* \marginparwidth=90.0pt
* \marginparsep=11.0pt
* \columnsep=10.0pt
* \skip\footins=7.0pt plus 11.0pt
* \hoffset=0.0pt
* \voffset=0.0pt
* \mag=1000
* \@twocolumnfalse
* \@twosidetrue
* \@mparswitchtrue
* \@reversemarginfalse
* (1in=72.27pt=25.4mm, 1cm=28.453pt)

Preview: Fontsize 10pt
Preview: PDFoutput 1
\extractedfile=\write5
\openout5 = `propositions.txt'.

(/usr/share/texlive/texmf-dist/tex/latex/microtype/mt-msa.cfg
File: mt-msa.cfg 2006/02/04 v1.1 microtype config. file: AMS symbols (a) (RS)
)
(/usr/share/texlive/texmf-dist/tex/latex/microtype/mt-msb.cfg
File: mt-msb.cfg 2005/06/01 v1.0 microtype config. file: AMS symbols (b) (RS)
)

LaTeX Warning: Reference `prelim' on page 1 undefined on input line 73.


LaTeX Warning: Reference `gauge_left_dgla' on page 1 undefined on input line 76
.


LaTeX Warning: Reference `left_cdga' on page 1 undefined on input line 80.


LaTeX Warning: Reference `gauge_formulae' on page 1 undefined on input line 81.



LaTeX Warning: Reference `application' on page 1 undefined on input line 82.


LaTeX Warning: Reference `prelim' on page 1 undefined on input line 99.


Package hyperref Warning: Token not allowed in a PDF string (PDFDocEncoding):
(hyperref)                removing `math shift' on input line 107.


Package hyperref Warning: Token not allowed in a PDF string (PDFDocEncoding):
(hyperref)                removing `subscript' on input line 107.


Package hyperref Warning: Token not allowed in a PDF string (PDFDocEncoding):
(hyperref)                removing `\infty' on input line 107.


Package hyperref Warning: Token not allowed in a PDF string (PDFDocEncoding):
(hyperref)                removing `math shift' on input line 107.


Package hyperref Warning: Token not allowed in a PDF string (PDFDocEncoding):
(hyperref)                removing `math shift' on input line 107.


Package hyperref Warning: Token not allowed in a PDF string (PDFDocEncoding):
(hyperref)                removing `subscript' on input line 107.


Package hyperref Warning: Token not allowed in a PDF string (PDFDocEncoding):
(hyperref)                removing `\infty' on input line 107.


Package hyperref Warning: Token not allowed in a PDF string (PDFDocEncoding):
(hyperref)                removing `math shift' on input line 107.

Preview: Tightpage -32891 -32891 32891 32891
[1{/var/lib/texmf/fonts/map/pdftex/updmap/pdftex.map}pdfTeX warning (ext4): des
tination with the same identifier (name{thm.2.1}) has been already used, duplic
ate ignored

\@EveryShipout@Output ...@Org@Shipout \box \@cclv 
                                                  
l.129 \end{defn}
                ]
Overfull \hbox (12.0pt too wide) in paragraph at lines 129--129
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.129 \end{defn}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.129 \end{defn}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.129 \end{defn}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.129 \end{defn}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.129 \end{defn}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.129 \end{defn}
                
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.129 \end{defn}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\T1/cmr/m/it/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.129 \end{defn}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.129 \end{defn}
                
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.129 \end{defn}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.129 \end{defn}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[2pdfTeX warning (ext4): destination with the same identifier (name{thm.2.2}) h
as been already used, duplicate ignored

\@EveryShipout@Output ...@Org@Shipout \box \@cclv 
                                                  
l.161 \end{defn}
                ]
Overfull \hbox (12.0pt too wide) in paragraph at lines 161--161
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.161 \end{defn}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.161 \end{defn}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.161 \end{defn}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.161 \end{defn}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.161 \end{defn}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.161 \end{defn}
                
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.161 \end{defn}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\T1/cmr/m/it/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.161 \end{defn}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.161 \end{defn}
                
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.161 \end{defn}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.161 \end{defn}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[3pdfTeX warning (ext4): destination with the same identifier (name{thm.2.3}) h
as been already used, duplicate ignored

\@EveryShipout@Output ...@Org@Shipout \box \@cclv 
                                                  
l.181 \end{defn}
                ]
Overfull \hbox (12.0pt too wide) in paragraph at lines 181--181
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.181 \end{defn}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.181 \end{defn}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.181 \end{defn}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.181 \end{defn}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.181 \end{defn}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.181 \end{defn}
                
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.181 \end{defn}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\T1/cmr/m/it/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.181 \end{defn}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.181 \end{defn}
                
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.181 \end{defn}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.181 \end{defn}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[4pdfTeX warning (ext4): destination with the same identifier (name{thm.2.4}) h
as been already used, duplicate ignored

\@EveryShipout@Output ...@Org@Shipout \box \@cclv 
                                                  
l.198 \end{defn}
                ]
Overfull \hbox (12.0pt too wide) in paragraph at lines 198--198
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.198 \end{defn}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.198 \end{defn}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.198 \end{defn}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.198 \end{defn}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.198 \end{defn}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.198 \end{defn}
                
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.198 \end{defn}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\T1/cmr/m/it/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.198 \end{defn}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.198 \end{defn}
                
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.198 \end{defn}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.198 \end{defn}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Underfull \vbox (badness 10000) has occurred while \output is active []

 [5pdfTeX warning (ext4): destination with the same identifier (name{thm.2.5}) 
has been already used, duplicate ignored

\@EveryShipout@Output ...@Org@Shipout \box \@cclv 
                                                  
l.215 \end{prop}
                ]
Overfull \hbox (12.0pt too wide) in paragraph at lines 215--215
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.215 \end{prop}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.215 \end{prop}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.215 \end{prop}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.215 \end{prop}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.215 \end{prop}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.215 \end{prop}
                
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.215 \end{prop}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\T1/cmr/m/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.215 \end{prop}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.215 \end{prop}
                
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.215 \end{prop}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.215 \end{prop}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

Missing character: There is no A in font nullfont!
Missing character: There is no [ in font nullfont!
Missing character: There is no t in font nullfont!
Missing character: There is no , in font nullfont!
Missing character: There is no d in font nullfont!
Missing character: There is no t in font nullfont!
Missing character: There is no ] in font nullfont!

! Package pgf Error: Single ampersand used with wrong catcode.

See the pgf package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.225 \end{proof}
                 
This error message was generated by an \errmessage
command, so I can't give any explicit help.
Pretend that you're Hercule Poirot: Examine all clues,
and deduce the truth by order and method.

[6pdfTeX warning (ext4): destination with the same identifier (name{thm.2.6}) h
as been already used, duplicate ignored

\@EveryShipout@Output ...@Org@Shipout \box \@cclv 
                                                  
l.242 \end{defn}
                ]
Overfull \hbox (12.0pt too wide) in paragraph at lines 242--242
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.242 \end{defn}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.242 \end{defn}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.242 \end{defn}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.242 \end{defn}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.242 \end{defn}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.242 \end{defn}
                
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.242 \end{defn}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\T1/cmr/m/it/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.242 \end{defn}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.242 \end{defn}
                
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.242 \end{defn}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.242 \end{defn}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[7pdfTeX warning (ext4): destination with the same identifier (name{thm.2.7}) h
as been already used, duplicate ignored

\@EveryShipout@Output ...@Org@Shipout \box \@cclv 
                                                  
l.252 \end{defn}
                ]
Overfull \hbox (12.0pt too wide) in paragraph at lines 252--252
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.252 \end{defn}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.252 \end{defn}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.252 \end{defn}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.252 \end{defn}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.252 \end{defn}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.252 \end{defn}
                
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.252 \end{defn}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\T1/cmr/m/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.252 \end{defn}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.252 \end{defn}
                
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.252 \end{defn}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.252 \end{defn}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

LaTeX Font Info:    Try loading font information for U+euf on input line 271.
(/usr/share/texlive/texmf-dist/tex/latex/amsfonts/ueuf.fd
File: ueuf.fd 2013/01/14 v3.01 Euler Fraktur
)
(/usr/share/texlive/texmf-dist/tex/latex/microtype/mt-euf.cfg
File: mt-euf.cfg 2006/07/03 v1.1 microtype config. file: AMS Euler Fraktur (RS)

)

! LaTeX Error: \mathfrak allowed only in math mode.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.290 \end{prop}
                
You're in trouble here.  Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

Missing character: There is no L in font nullfont!

! Package pgf Error: Single ampersand used with wrong catcode.

See the pgf package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.290 \end{prop}
                
(That was another \errmessage.)

[8pdfTeX warning (ext4): destination with the same identifier (name{thm.3.1}) h
as been already used, duplicate ignored

\@EveryShipout@Output ...@Org@Shipout \box \@cclv 
                                                  
l.290 \end{prop}
                ]
Overfull \hbox (12.0pt too wide) in paragraph at lines 290--290
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.290 \end{prop}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.290 \end{prop}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.290 \end{prop}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.290 \end{prop}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.290 \end{prop}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.290 \end{prop}
                
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.290 \end{prop}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\T1/cmr/m/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.290 \end{prop}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.290 \end{prop}
                
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.290 \end{prop}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.290 \end{prop}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[9pdfTeX warning (ext4): destination with the same identifier (name{thm.3.2}) h
as been already used, duplicate ignored

\@EveryShipout@Output ...@Org@Shipout \box \@cclv 
                                                  
l.297 \end{prop}
                ]
Overfull \hbox (12.0pt too wide) in paragraph at lines 297--297
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.297 \end{prop}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.297 \end{prop}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.297 \end{prop}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.297 \end{prop}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.297 \end{prop}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.297 \end{prop}
                
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.297 \end{prop}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\T1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.297 \end{prop}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.297 \end{prop}
                
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.297 \end{prop}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.297 \end{prop}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[10pdfTeX warning (ext4): destination with the same identifier (name{thm.4.1}) 
has been already used, duplicate ignored

\@EveryShipout@Output ...@Org@Shipout \box \@cclv 
                                                  
l.325 \end{defn}
                ]
Overfull \hbox (12.0pt too wide) in paragraph at lines 325--325
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.325 \end{defn}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.325 \end{defn}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.325 \end{defn}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.325 \end{defn}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.325 \end{defn}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.325 \end{defn}
                
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.325 \end{defn}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\T1/cmr/m/it/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.325 \end{defn}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.325 \end{defn}
                
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.325 \end{defn}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.325 \end{defn}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Underfull \vbox (badness 1460) has occurred while \output is active []

Missing character: There is no C in font nullfont!
Missing character: There is no ( in font nullfont!
Missing character: There is no S in font nullfont!
Missing character: There is no V in font nullfont!
Missing character: There is no ) in font nullfont!


! Package pgf Error: Single ampersand used with wrong catcode.

See the pgf package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.370 \end{prop}
                
(That was another \errmessage.)

Missing character: There is no C in font nullfont!
Missing character: There is no ( in font nullfont!
Missing character: There is no T in font nullfont!
Missing character: There is no V in font nullfont!
Missing character: There is no ) in font nullfont!
Missing character: There is no = in font nullfont!
Missing character: There is no ( in font nullfont!
Missing character: There is no T in font nullfont!
Missing character: There is no ( in font nullfont!
Missing character: There is no V in font nullfont!
! Missing $ inserted.
<inserted text> 
                $
l.370 \end{prop}
                
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


! Package pgf Error: Single ampersand used with wrong catcode.

See the pgf package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.370 \end{prop}
                
(That was another \errmessage.)

! Missing $ inserted.
<inserted text> 
                $
l.370 \end{prop}
                
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

[11pdfTeX warning (ext4): destination with the same identifier (name{thm.4.2}) 
has been already used, duplicate ignored

\@EveryShipout@Output ...@Org@Shipout \box \@cclv 
                                                  
l.370 \end{prop}
                ]
Overfull \hbox (12.0pt too wide) in paragraph at lines 370--370
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.370 \end{prop}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.370 \end{prop}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.370 \end{prop}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.370 \end{prop}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.370 \end{prop}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.370 \end{prop}
                
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.370 \end{prop}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\T1/cmr/m/it/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.370 \end{prop}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.370 \end{prop}
                
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.370 \end{prop}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.370 \end{prop}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Underfull \vbox (badness 1210) has occurred while \output is active []

 [12]
Overfull \hbox (12.0pt too wide) in paragraph at lines 412--412
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.412 \end{thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.412 \end{thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.412 \end{thm}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.412 \end{thm}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.412 \end{thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.412 \end{thm}
               
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.412 \end{thm}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\T1/cmr/m/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.412 \end{thm}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.412 \end{thm}
               
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.412 \end{thm}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.412 \end{thm}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Underfull \vbox (badness 1924) has occurred while \output is active []

 [13pdfTeX warning (ext4): destination with the same identifier (name{thm.4.4})
 has been already used, duplicate ignored

\@EveryShipout@Output ...@Org@Shipout \box \@cclv 
                                                  
l.474 \end{exmp}
                ]
Overfull \hbox (12.0pt too wide) in paragraph at lines 474--474
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.474 \end{exmp}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.474 \end{exmp}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.474 \end{exmp}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.474 \end{exmp}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.474 \end{exmp}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.474 \end{exmp}
                
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.474 \end{exmp}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\T1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.474 \end{exmp}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.474 \end{exmp}
                
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.474 \end{exmp}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.474 \end{exmp}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[14pdfTeX warning (ext4): destination with the same identifier (name{thm.4.5}) 
has been already used, duplicate ignored

\@EveryShipout@Output ...@Org@Shipout \box \@cclv 
                                                  
l.493 \end{lem}
               ]
Overfull \hbox (12.0pt too wide) in paragraph at lines 493--493
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.493 \end{lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.493 \end{lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.493 \end{lem}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.493 \end{lem}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.493 \end{lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.493 \end{lem}
               
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.493 \end{lem}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\T1/cmr/m/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.493 \end{lem}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.493 \end{lem}
               
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.493 \end{lem}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.493 \end{lem}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Underfull \vbox (badness 1527) has occurred while \output is active []

 [15pdfTeX warning (ext4): destination with the same identifier (name{thm.4.6})
 has been already used, duplicate ignored

\@EveryShipout@Output ...@Org@Shipout \box \@cclv 
                                                  
l.516 \end{lem}
               ]
Overfull \hbox (12.0pt too wide) in paragraph at lines 516--516
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.516 \end{lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.516 \end{lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.516 \end{lem}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.516 \end{lem}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.516 \end{lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.516 \end{lem}
               
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.516 \end{lem}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\T1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.516 \end{lem}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.516 \end{lem}
               
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.516 \end{lem}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.516 \end{lem}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[16]
Overfull \hbox (12.0pt too wide) in paragraph at lines 543--543
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.543 \end{thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.543 \end{thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.543 \end{thm}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.543 \end{thm}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.543 \end{thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.543 \end{thm}
               
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.543 \end{thm}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\T1/cmr/m/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.543 \end{thm}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.543 \end{thm}
               
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.543 \end{thm}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.543 \end{thm}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

Missing character: There is no k in font nullfont!

! Package pgf Error: Single ampersand used with wrong catcode.

See the pgf package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.564 \end{proof}
                 
(That was another \errmessage.)


! Package pgf Error: Single ampersand used with wrong catcode.

See the pgf package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.564 \end{proof}
                 
(That was another \errmessage.)


Underfull \vbox (badness 7832) has occurred while \output is active []

 [17]
Overfull \hbox (12.0pt too wide) in paragraph at lines 582--582
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.582 \end{thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.582 \end{thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.582 \end{thm}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.582 \end{thm}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.582 \end{thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.582 \end{thm}
               
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.582 \end{thm}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\T1/cmr/m/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.582 \end{thm}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.582 \end{thm}
               
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.582 \end{thm}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.582 \end{thm}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[18]
Overfull \hbox (12.0pt too wide) in paragraph at lines 603--603
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.603 \end{thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.603 \end{thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.603 \end{thm}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.603 \end{thm}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.603 \end{thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.603 \end{thm}
               
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.603 \end{thm}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\T1/cmr/m/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.603 \end{thm}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.603 \end{thm}
               
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.603 \end{thm}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.603 \end{thm}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `eq:exptheta' on page 10 undefined on input line 633.

[19]
Overfull \hbox (12.0pt too wide) in paragraph at lines 652--652
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.652 \end{thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.652 \end{thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.652 \end{thm}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.652 \end{thm}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.652 \end{thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.652 \end{thm}
               
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.652 \end{thm}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\T1/cmr/m/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.652 \end{thm}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.652 \end{thm}
               
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.652 \end{thm}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.652 \end{thm}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[20pdfTeX warning (ext4): destination with the same identifier (name{thm.5.4}) 
has been already used, duplicate ignored

\@EveryShipout@Output ...@Org@Shipout \box \@cclv 
                                                  
l.668 \end{rem}
               ]
Overfull \hbox (12.0pt too wide) in paragraph at lines 668--668
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.668 \end{rem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.668 \end{rem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.668 \end{rem}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.668 \end{rem}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.668 \end{rem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.668 \end{rem}
               
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.668 \end{rem}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\T1/cmr/m/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.668 \end{rem}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.668 \end{rem}
               
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.668 \end{rem}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.668 \end{rem}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Underfull \vbox (badness 1616) has occurred while \output is active []

 [21]
Overfull \hbox (12.0pt too wide) in paragraph at lines 680--680
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.680 \end{thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.680 \end{thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.680 \end{thm}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.680 \end{thm}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.680 \end{thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.680 \end{thm}
               
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.680 \end{thm}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\U/rsfs/m/n/5 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.680 \end{thm}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.680 \end{thm}
               
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.680 \end{thm}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.680 \end{thm}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[22]
Overfull \hbox (12.0pt too wide) in paragraph at lines 688--688
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.688 \end{thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.688 \end{thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.688 \end{thm}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.688 \end{thm}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.688 \end{thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.688 \end{thm}
               
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \MT@res@a has an extra }.
<inserted text> 
                \par 
l.688 \end{thm}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
##1,\T1/cmr/bx/n/10 ,##2##3\@nnil {\ifx ##2\@empty \MT@inlist@false \else \ETC.
! Paragraph ended before \MT@res@a was complete.
<to be read again> 
                   \par 
l.688 \end{thm}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Extra \else.
\@setref ... page \thepage \space undefined}\else 
                                                  \expandafter #2#1 \fi 
l.688 \end{thm}
               
I'm ignoring this; it doesn't match any \if.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.688 \end{thm}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.688 \end{thm}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

LaTeX Font Info:    Try loading font information for T1+cmtt on input line 703.

(/usr/share/texlive/texmf-dist/tex/latex/base/t1cmtt.fd
File: t1cmtt.fd 2014/09/29 v2.5h Standard LaTeX font definitions
)
Package microtype Info: Loading generic settings for font family
(microtype)             `cmtt' (encoding: T1).
(microtype)             For optimal results, create family-specific settings.
(microtype)             See the microtype manual for details.
Package atveryend Info: Empty hook `BeforeClearDocument' on input line 833.
Package atveryend Info: Empty hook `AfterLastShipout' on input line 833.

(source_extraction/results/1807.11932.aux)
Package atveryend Info: Executing hook `AtVeryEndDocument' on input line 833.
Package atveryend Info: Executing hook `AtEndAfterFileList' on input line 833.
Package rerunfilecheck Info: File `1807.11932.out' has not changed.
(rerunfilecheck)             Checksum: <no file>.


LaTeX Warning: There were undefined references.

Package atveryend Info: Empty hook `AtVeryVeryEnd' on input line 833.
 )
(\end occurred when \ifx on line 688 was incomplete)
(\end occurred when \ifx on line 688 was incomplete)
(\end occurred when \iftrue on line 688 was incomplete)
(\end occurred when \iftrue on line 688 was incomplete)
(\end occurred when \iftrue on line 688 was incomplete)
(\end occurred when \iftrue on line 688 was incomplete)
(\end occurred when \iftrue on line 688 was incomplete)
(\end occurred when \iftrue on line 688 was incomplete)
(\end occurred when \ifx on line 680 was incomplete)
(\end occurred when \ifx on line 680 was incomplete)
(\end occurred when \iftrue on line 680 was incomplete)
(\end occurred when \iftrue on line 680 was incomplete)
(\end occurred when \iftrue on line 680 was incomplete)
(\end occurred when \iftrue on line 680 was incomplete)
(\end occurred when \iftrue on line 680 was incomplete)
(\end occurred when \iftrue on line 680 was incomplete)
(\end occurred when \ifx on line 668 was incomplete)
(\end occurred when \ifx on line 668 was incomplete)
(\end occurred when \iftrue on line 668 was incomplete)
(\end occurred when \iftrue on line 668 was incomplete)
(\end occurred when \iftrue on line 668 was incomplete)
(\end occurred when \iftrue on line 668 was incomplete)
(\end occurred when \iftrue on line 668 was incomplete)
(\end occurred when \iftrue on line 668 was incomplete)
(\end occurred when \ifx on line 652 was incomplete)
(\end occurred when \ifx on line 652 was incomplete)
(\end occurred when \iftrue on line 652 was incomplete)
(\end occurred when \iftrue on line 652 was incomplete)
(\end occurred when \iftrue on line 652 was incomplete)
(\end occurred when \iftrue on line 652 was incomplete)
(\end occurred when \iftrue on line 652 was incomplete)
(\end occurred when \iftrue on line 652 was incomplete)
(\end occurred when \ifx on line 603 was incomplete)
(\end occurred when \ifx on line 603 was incomplete)
(\end occurred when \iftrue on line 603 was incomplete)
(\end occurred when \iftrue on line 603 was incomplete)
(\end occurred when \iftrue on line 603 was incomplete)
(\end occurred when \iftrue on line 603 was incomplete)
(\end occurred when \iftrue on line 603 was incomplete)
(\end occurred when \iftrue on line 603 was incomplete)
(\end occurred when \ifx on line 582 was incomplete)
(\end occurred when \ifx on line 582 was incomplete)
(\end occurred when \iftrue on line 582 was incomplete)
(\end occurred when \iftrue on line 582 was incomplete)
(\end occurred when \iftrue on line 582 was incomplete)
(\end occurred when \iftrue on line 582 was incomplete)
(\end occurred when \iftrue on line 582 was incomplete)
(\end occurred when \iftrue on line 582 was incomplete)
(\end occurred when \ifx on line 543 was incomplete)
(\end occurred when \ifx on line 543 was incomplete)
(\end occurred when \iftrue on line 543 was incomplete)
(\end occurred when \iftrue on line 543 was incomplete)
(\end occurred when \iftrue on line 543 was incomplete)
(\end occurred when \iftrue on line 543 was incomplete)
(\end occurred when \iftrue on line 543 was incomplete)
(\end occurred when \iftrue on line 543 was incomplete)
(\end occurred when \ifx on line 516 was incomplete)
(\end occurred when \ifx on line 516 was incomplete)
(\end occurred when \iftrue on line 516 was incomplete)
(\end occurred when \iftrue on line 516 was incomplete)
(\end occurred when \iftrue on line 516 was incomplete)
(\end occurred when \iftrue on line 516 was incomplete)
(\end occurred when \iftrue on line 516 was incomplete)
(\end occurred when \iftrue on line 516 was incomplete)
(\end occurred when \ifx on line 493 was incomplete)
(\end occurred when \ifx on line 493 was incomplete)
(\end occurred when \iftrue on line 493 was incomplete)
(\end occurred when \iftrue on line 493 was incomplete)
(\end occurred when \iftrue on line 493 was incomplete)
(\end occurred when \iftrue on line 493 was incomplete)
(\end occurred when \iftrue on line 493 was incomplete)
(\end occurred when \iftrue on line 493 was incomplete)
(\end occurred when \ifx on line 474 was incomplete)
(\end occurred when \ifx on line 474 was incomplete)
(\end occurred when \iftrue on line 474 was incomplete)
(\end occurred when \iftrue on line 474 was incomplete)
(\end occurred when \iftrue on line 474 was incomplete)
(\end occurred when \iftrue on line 474 was incomplete)
(\end occurred when \iftrue on line 474 was incomplete)
(\end occurred when \iftrue on line 474 was incomplete)
(\end occurred when \ifx on line 412 was incomplete)
(\end occurred when \ifx on line 412 was incomplete)
(\end occurred when \iftrue on line 412 was incomplete)
(\end occurred when \iftrue on line 412 was incomplete)
(\end occurred when \iftrue on line 412 was incomplete)
(\end occurred when \iftrue on line 412 was incomplete)
(\end occurred when \iftrue on line 412 was incomplete)
(\end occurred when \iftrue on line 412 was incomplete)
(\end occurred when \ifx on line 370 was incomplete)
(\end occurred when \ifx on line 370 was incomplete)
(\end occurred when \iftrue on line 370 was incomplete)
(\end occurred when \iftrue on line 370 was incomplete)
(\end occurred when \iftrue on line 370 was incomplete)
(\end occurred when \iftrue on line 370 was incomplete)
(\end occurred when \iftrue on line 370 was incomplete)
(\end occurred when \iftrue on line 370 was incomplete)
(\end occurred when \ifx on line 325 was incomplete)
(\end occurred when \ifx on line 325 was incomplete)
(\end occurred when \iftrue on line 325 was incomplete)
(\end occurred when \iftrue on line 325 was incomplete)
(\end occurred when \iftrue on line 325 was incomplete)
(\end occurred when \iftrue on line 325 was incomplete)
(\end occurred when \iftrue on line 325 was incomplete)
(\end occurred when \iftrue on line 325 was incomplete)
(\end occurred when \ifx on line 297 was incomplete)
(\end occurred when \ifx on line 297 was incomplete)
(\end occurred when \iftrue on line 297 was incomplete)
(\end occurred when \iftrue on line 297 was incomplete)
(\end occurred when \iftrue on line 297 was incomplete)
(\end occurred when \iftrue on line 297 was incomplete)
(\end occurred when \iftrue on line 297 was incomplete)
(\end occurred when \iftrue on line 297 was incomplete)
(\end occurred when \ifx on line 290 was incomplete)
(\end occurred when \ifx on line 290 was incomplete)
(\end occurred when \iftrue on line 290 was incomplete)
(\end occurred when \iftrue on line 290 was incomplete)
(\end occurred when \iftrue on line 290 was incomplete)
(\end occurred when \iftrue on line 290 was incomplete)
(\end occurred when \iftrue on line 290 was incomplete)
(\end occurred when \iftrue on line 290 was incomplete)
(\end occurred when \ifx on line 252 was incomplete)
(\end occurred when \ifx on line 252 was incomplete)
(\end occurred when \iftrue on line 252 was incomplete)
(\end occurred when \iftrue on line 252 was incomplete)
(\end occurred when \iftrue on line 252 was incomplete)
(\end occurred when \iftrue on line 252 was incomplete)
(\end occurred when \iftrue on line 252 was incomplete)
(\end occurred when \iftrue on line 252 was incomplete)
(\end occurred when \ifx on line 242 was incomplete)
(\end occurred when \ifx on line 242 was incomplete)
(\end occurred when \iftrue on line 242 was incomplete)
(\end occurred when \iftrue on line 242 was incomplete)
(\end occurred when \iftrue on line 242 was incomplete)
(\end occurred when \iftrue on line 242 was incomplete)
(\end occurred when \iftrue on line 242 was incomplete)
(\end occurred when \iftrue on line 242 was incomplete)
(\end occurred when \ifx on line 215 was incomplete)
(\end occurred when \ifx on line 215 was incomplete)
(\end occurred when \iftrue on line 215 was incomplete)
(\end occurred when \iftrue on line 215 was incomplete)
(\end occurred when \iftrue on line 215 was incomplete)
(\end occurred when \iftrue on line 215 was incomplete)
(\end occurred when \iftrue on line 215 was incomplete)
(\end occurred when \iftrue on line 215 was incomplete)
(\end occurred when \ifx on line 198 was incomplete)
(\end occurred when \ifx on line 198 was incomplete)
(\end occurred when \iftrue on line 198 was incomplete)
(\end occurred when \iftrue on line 198 was incomplete)
(\end occurred when \iftrue on line 198 was incomplete)
(\end occurred when \iftrue on line 198 was incomplete)
(\end occurred when \iftrue on line 198 was incomplete)
(\end occurred when \iftrue on line 198 was incomplete)
(\end occurred when \ifx on line 181 was incomplete)
(\end occurred when \ifx on line 181 was incomplete)
(\end occurred when \iftrue on line 181 was incomplete)
(\end occurred when \iftrue on line 181 was incomplete)
(\end occurred when \iftrue on line 181 was incomplete)
(\end occurred when \iftrue on line 181 was incomplete)
(\end occurred when \iftrue on line 181 was incomplete)
(\end occurred when \iftrue on line 181 was incomplete)
(\end occurred when \ifx on line 161 was incomplete)
(\end occurred when \ifx on line 161 was incomplete)
(\end occurred when \iftrue on line 161 was incomplete)
(\end occurred when \iftrue on line 161 was incomplete)
(\end occurred when \iftrue on line 161 was incomplete)
(\end occurred when \iftrue on line 161 was incomplete)
(\end occurred when \iftrue on line 161 was incomplete)
(\end occurred when \iftrue on line 161 was incomplete)
(\end occurred when \ifx on line 129 was incomplete)
(\end occurred when \ifx on line 129 was incomplete)
(\end occurred when \iftrue on line 129 was incomplete)
(\end occurred when \iftrue on line 129 was incomplete)
(\end occurred when \iftrue on line 129 was incomplete)
(\end occurred when \iftrue on line 129 was incomplete)
(\end occurred when \iftrue on line 129 was incomplete)
(\end occurred when \iftrue on line 129 was incomplete) 
Here is how much of TeX's memory you used:
 23666 strings out of 494779
 445004 string characters out of 6179263
 566488 words of memory out of 5000000
 26099 multiletter control sequences out of 15000+600000
 26250 words of font info for 163 fonts, out of 8000000 for 9000
 346 hyphenation exceptions out of 8191
 61i,16n,82p,1017b,1089s stack positions out of 5000i,500n,10000p,200000b,80000s
pdfTeX warning (dest): n
ame{cite.cl11} has been referenced but does not exist, replaced by a fixed one

{/usr/share/texmf/fonts/enc/dvips/cm-super/cm-super-t1.enc}</usr/share/texlive/
texmf-dist/fonts/type1/public/amsfonts/cm/cmex10.pfb></usr/share/texlive/texmf-
dist/fonts/type1/public/amsfonts/cm/cmmi10.pfb></usr/share/texlive/texmf-dist/f
onts/type1/public/amsfonts/cm/cmmi5.pfb></usr/share/texlive/texmf-dist/fonts/ty
pe1/public/amsfonts/cm/cmmi7.pfb></usr/share/texlive/texmf-dist/fonts/type1/pub
lic/amsfonts/cm/cmr10.pfb></usr/share/texlive/texmf-dist/fonts/type1/public/ams
fonts/cm/cmr5.pfb></usr/share/texlive/texmf-dist/fonts/type1/public/amsfonts/cm
/cmr7.pfb></usr/share/texlive/texmf-dist/fonts/type1/public/amsfonts/cm/cmsy10.
pfb></usr/share/texlive/texmf-dist/fonts/type1/public/amsfonts/cm/cmsy5.pfb></u
sr/share/texlive/texmf-dist/fonts/type1/public/amsfonts/cm/cmsy7.pfb></usr/shar
e/texlive/texmf-dist/fonts/type1/public/amsfonts/euler/eufm10.pfb></usr/share/t
exlive/texmf-dist/fonts/type1/public/amsfonts/symbols/msbm10.pfb></usr/share/te
xlive/texmf-dist/fonts/type1/public/rsfs/rsfs10.pfb></usr/share/texmf/fonts/typ
e1/public/cm-super/sfbx1000.pfb></usr/share/texmf/fonts/type1/public/cm-super/s
frm1000.pfb></usr/share/texmf/fonts/type1/public/cm-super/sfti1000.pfb>
Output written on source_extraction/results/1807.11932.pdf (22 pages, 188979 by
tes).
PDF statistics:
 272 PDF objects out of 1000 (max. 8388607)
 168 compressed objects within 2 object streams
 49 named destinations out of 1000 (max. 500000)
 22541 words of extra memory for PDF output out of 24883 (max. 10000000)

