This is pdfTeX, Version 3.14159265-2.6-1.40.16 (TeX Live 2015/Debian) (preloaded format=pdflatex 2017.8.22)  14 OCT 2018 21:53
entering extended mode
 restricted \write18 enabled.
 %&-line parsing enabled.
**source_extraction/results/1709.09042.tex
(./source_extraction/results/1709.09042.tex
LaTeX2e <2016/02/01>
Babel <3.9q> and hyphenation patterns for 1 language(s) loaded.
(/usr/share/texlive/texmf-dist/tex/latex/amscls/amsart.cls
Document Class: amsart 2015/03/04 v2.20.2
\linespacing=\dimen102
\normalparindent=\dimen103
\normaltopskip=\skip41
(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amsmath.sty
Package: amsmath 2016/03/03 v2.15a AMS math features
\@mathmargin=\skip42

For additional information on amsmath, use the `?' option.
(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amstext.sty
Package: amstext 2000/06/29 v2.01 AMS text

(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amsgen.sty
File: amsgen.sty 1999/11/30 v2.0 generic functions
\@emptytoks=\toks14
\ex@=\dimen104
))
(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amsbsy.sty
Package: amsbsy 1999/11/29 v1.2d Bold Symbols
\pmbraise@=\dimen105
)
(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amsopn.sty
Package: amsopn 1999/12/14 v2.01 operator names
)
\inf@bad=\count79
LaTeX Info: Redefining \frac on input line 199.
\uproot@=\count80
\leftroot@=\count81
LaTeX Info: Redefining \overline on input line 297.
\classnum@=\count82
\DOTSCASE@=\count83
LaTeX Info: Redefining \ldots on input line 394.
LaTeX Info: Redefining \dots on input line 397.
LaTeX Info: Redefining \cdots on input line 518.
\Mathstrutbox@=\box26
\strutbox@=\box27
\big@size=\dimen106
LaTeX Font Info:    Redeclaring font encoding OML on input line 630.
LaTeX Font Info:    Redeclaring font encoding OMS on input line 631.
\macc@depth=\count84
\c@MaxMatrixCols=\count85
\dotsspace@=\muskip10
\c@parentequation=\count86
\dspbrk@lvl=\count87
\tag@help=\toks15
\row@=\count88
\column@=\count89
\maxfields@=\count90
\andhelp@=\toks16
\eqnshift@=\dimen107
\alignsep@=\dimen108
\tagshift@=\dimen109
\tagwidth@=\dimen110
\totwidth@=\dimen111
\lineht@=\dimen112
\@envbody=\toks17
\multlinegap=\skip43
\multlinetaggap=\skip44
\mathdisplay@stack=\toks18
LaTeX Info: Redefining \[ on input line 2735.
LaTeX Info: Redefining \] on input line 2736.
)
LaTeX Font Info:    Try loading font information for U+msa on input line 388.

(/usr/share/texlive/texmf-dist/tex/latex/amsfonts/umsa.fd
File: umsa.fd 2013/01/14 v3.01 AMS symbols A
)
(/usr/share/texlive/texmf-dist/tex/latex/amsfonts/amsfonts.sty
Package: amsfonts 2013/01/14 v3.01 Basic AMSFonts support
\symAMSa=\mathgroup4
\symAMSb=\mathgroup5
LaTeX Font Info:    Overwriting math alphabet `\mathfrak' in version `bold'
(Font)                  U/euf/m/n --> U/euf/b/n on input line 106.
)
\copyins=\insert199
\abstractbox=\box28
\listisep=\skip45
\c@part=\count91
\c@section=\count92
\c@subsection=\count93
\c@subsubsection=\count94
\c@paragraph=\count95
\c@subparagraph=\count96
\c@figure=\count97
\c@table=\count98
\abovecaptionskip=\skip46
\belowcaptionskip=\skip47
\captionindent=\dimen113
\thm@style=\toks19
\thm@bodyfont=\toks20
\thm@headfont=\toks21
\thm@notefont=\toks22
\thm@headpunct=\toks23
\thm@preskip=\skip48
\thm@postskip=\skip49
\thm@headsep=\skip50
\dth@everypar=\toks24
)
(/usr/share/texlive/texmf-dist/tex/latex/natbib/natbib.sty
Package: natbib 2010/09/13 8.31b (PWD, AO)
\bibhang=\skip51
\bibsep=\skip52
LaTeX Info: Redefining \cite on input line 694.
\c@NAT@ctr=\count99
)
(/usr/share/texlive/texmf-dist/tex/latex/psnfss/mathptmx.sty
Package: mathptmx 2005/04/12 PSNFSS-v9.2a Times w/ Math, improved (SPQR, WaS) 
LaTeX Font Info:    Redeclaring symbol font `operators' on input line 28.
LaTeX Font Info:    Overwriting symbol font `operators' in version `normal'
(Font)                  OT1/cmr/m/n --> OT1/ztmcm/m/n on input line 28.
LaTeX Font Info:    Overwriting symbol font `operators' in version `bold'
(Font)                  OT1/cmr/bx/n --> OT1/ztmcm/m/n on input line 28.
LaTeX Font Info:    Redeclaring symbol font `letters' on input line 29.
LaTeX Font Info:    Overwriting symbol font `letters' in version `normal'
(Font)                  OML/cmm/m/it --> OML/ztmcm/m/it on input line 29.
LaTeX Font Info:    Overwriting symbol font `letters' in version `bold'
(Font)                  OML/cmm/b/it --> OML/ztmcm/m/it on input line 29.
LaTeX Font Info:    Redeclaring symbol font `symbols' on input line 30.
LaTeX Font Info:    Overwriting symbol font `symbols' in version `normal'
(Font)                  OMS/cmsy/m/n --> OMS/ztmcm/m/n on input line 30.
LaTeX Font Info:    Overwriting symbol font `symbols' in version `bold'
(Font)                  OMS/cmsy/b/n --> OMS/ztmcm/m/n on input line 30.
LaTeX Font Info:    Redeclaring symbol font `largesymbols' on input line 31.
LaTeX Font Info:    Overwriting symbol font `largesymbols' in version `normal'
(Font)                  OMX/cmex/m/n --> OMX/ztmcm/m/n on input line 31.
LaTeX Font Info:    Overwriting symbol font `largesymbols' in version `bold'
(Font)                  OMX/cmex/m/n --> OMX/ztmcm/m/n on input line 31.
\symbold=\mathgroup6
\symitalic=\mathgroup7
LaTeX Font Info:    Redeclaring math alphabet \mathbf on input line 34.
LaTeX Font Info:    Overwriting math alphabet `\mathbf' in version `normal'
(Font)                  OT1/cmr/bx/n --> OT1/ptm/bx/n on input line 34.
LaTeX Font Info:    Overwriting math alphabet `\mathbf' in version `bold'
(Font)                  OT1/cmr/bx/n --> OT1/ptm/bx/n on input line 34.
LaTeX Font Info:    Redeclaring math alphabet \mathit on input line 35.
LaTeX Font Info:    Overwriting math alphabet `\mathit' in version `normal'
(Font)                  OT1/cmr/m/it --> OT1/ptm/m/it on input line 35.
LaTeX Font Info:    Overwriting math alphabet `\mathit' in version `bold'
(Font)                  OT1/cmr/bx/it --> OT1/ptm/m/it on input line 35.
LaTeX Info: Redefining \hbar on input line 50.
)
(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amscd.sty
Package: amscd 1999/11/29 v2.0 AMS Commutatitive Diagrams
\athelp@=\toks25
\minaw@=\dimen114
\bigaw@=\dimen115
\minCDarrowwidth=\dimen116
)
(/usr/share/texlive/texmf-dist/tex/latex/amsfonts/amssymb.sty
Package: amssymb 2013/01/14 v3.01 AMS font symbols
)
(/usr/share/texlive/texmf-dist/tex/latex/tools/enumerate.sty
Package: enumerate 2015/07/23 v3.00 enumerate extensions (DPC)
\@enLab=\toks26
)
(/usr/share/texlive/texmf-dist/tex/latex/tools/xspace.sty
Package: xspace 2014/10/28 v1.13 Space after command names (DPC,MH)
)
(/usr/share/texlive/texmf-dist/tex/generic/xypic/xy.sty
(/usr/share/texlive/texmf-dist/tex/generic/xypic/xy.tex Bootstrap'ing:
catcodes, docmode, (/usr/share/texlive/texmf-dist/tex/generic/xypic/xyrecat.tex
) (/usr/share/texlive/texmf-dist/tex/generic/xypic/xyidioms.tex)

 Xy-pic version 3.8.9 <2013/10/06>
 Copyright (c) 1991-2013 by Kristoffer H. Rose <krisrose@tug.org> and others
 Xy-pic is free software: see the User's Guide for details.

Loading kernel: messages; fonts; allocations: state,
\X@c=\dimen117
\Y@c=\dimen118
\U@c=\dimen119
\D@c=\dimen120
\L@c=\dimen121
\R@c=\dimen122
\Edge@c=\toks27
\X@p=\dimen123
\Y@p=\dimen124
\U@p=\dimen125
\D@p=\dimen126
\L@p=\dimen127
\R@p=\dimen128
\Edge@p=\toks28
\X@origin=\dimen129
\Y@origin=\dimen130
\X@xbase=\dimen131
\Y@xbase=\dimen132
\X@ybase=\dimen133
\Y@ybase=\dimen134
\X@min=\dimen135
\Y@min=\dimen136
\X@max=\dimen137
\Y@max=\dimen138
\lastobjectbox@=\box29
\zerodotbox@=\box30
\almostz@=\dimen139
 direction,
\d@X=\dimen140
\d@Y=\dimen141
\K@=\count100
\KK@=\count101
\Direction=\count102
\K@dXdY=\dimen142
\K@dYdX=\dimen143
\xyread@=\read1
\xywrite@=\write3
\csp@=\count103
\quotPTK@=\dimen144

utility macros; pictures: \xy, positions,
\swaptoks@@=\toks29
\connectobjectbox@@=\box31
 objects,
\styletoks@=\toks30
 decorations;
kernel objects: directionals, circles, text; options; algorithms: directions,
edges, connections;  Xy-pic loaded)
(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/ifpdf.sty
Package: ifpdf 2011/01/30 v2.3 Provides the ifpdf switch (HO)
Package ifpdf Info: pdfTeX in PDF mode is detected.
)
Package: xy 2013/10/06 Xy-pic version 3.8.9

(/usr/share/texlive/texmf-dist/tex/generic/xypic/xyall.tex
 Xy-pic option: All features v.3.8
(/usr/share/texlive/texmf-dist/tex/generic/xypic/xycurve.tex
 Xy-pic option: Curve and Spline extension v.3.12 curve,
\crv@cnt@=\count104
\crvpts@=\toks31
\splinebox@=\box32
\splineval@=\dimen145
\splinedepth@=\dimen146
\splinetol@=\dimen147
\splinelength@=\dimen148
 circles,
\L@=\dimen149
 loaded)
(/usr/share/texlive/texmf-dist/tex/generic/xypic/xyframe.tex
 Xy-pic option: Frame and Bracket extension v.3.14 loaded)
(/usr/share/texlive/texmf-dist/tex/generic/xypic/xycmtip.tex
 Xy-pic option: Computer Modern tip extension v.3.7
(/usr/share/texlive/texmf-dist/tex/generic/xypic/xytips.tex
 Xy-pic option: More Tips extension v.3.11 loaded) loaded)
(/usr/share/texlive/texmf-dist/tex/generic/xypic/xyline.tex
 Xy-pic option: Line styles extension v.3.10
\xylinethick@=\dimen150
 loaded)
(/usr/share/texlive/texmf-dist/tex/generic/xypic/xyrotate.tex
 Xy-pic option: Rotate and Scale extension v.3.8 loaded)
(/usr/share/texlive/texmf-dist/tex/generic/xypic/xycolor.tex
 Xy-pic option: Colour extension v.3.11 loaded)
(/usr/share/texlive/texmf-dist/tex/generic/xypic/xymatrix.tex
 Xy-pic option: Matrix feature v.3.14
\Row=\count105
\Col=\count106
\queue@=\toks32
\queue@@=\toks33
\qcount@=\count107
\qcount@@=\count108
\matrixsize@=\count109
 loaded)
(/usr/share/texlive/texmf-dist/tex/generic/xypic/xyarrow.tex
 Xy-pic option: Arrow and Path feature v.3.9 path, \ar, loaded)
(/usr/share/texlive/texmf-dist/tex/generic/xypic/xygraph.tex
 Xy-pic option: Graph feature v.3.11 loaded) loaded)
(/usr/share/texlive/texmf-dist/tex/generic/xypic/xytips.tex
 Xy-pic option: More Tips extension v.3.11 not reloaded)
(/usr/share/texlive/texmf-dist/tex/generic/xypic/xypdf.tex
 Xy-pic option: PDF driver v.1.7 Xy-pic pdf driver: `color' extension support
(/usr/share/texlive/texmf-dist/tex/generic/xypic/xypdf-co.tex loaded)
Xy-pic pdf driver: `curve' extension support
(/usr/share/texlive/texmf-dist/tex/generic/xypic/xypdf-cu.tex loaded)
Xy-pic pdf driver: `frame' extension support
(/usr/share/texlive/texmf-dist/tex/generic/xypic/xypdf-fr.tex loaded)
Xy-pic pdf driver: `line' extension support
(/usr/share/texlive/texmf-dist/tex/generic/xypic/xypdf-li.tex loaded)
Xy-pic pdf driver: `rotate' extension support
(/usr/share/texlive/texmf-dist/tex/generic/xypic/xypdf-ro.tex loaded) loaded))
(/usr/share/texlive/texmf-dist/tex/latex/graphics/graphicx.sty
Package: graphicx 2014/10/28 v1.0g Enhanced LaTeX Graphics (DPC,SPQR)

(/usr/share/texlive/texmf-dist/tex/latex/graphics/keyval.sty
Package: keyval 2014/10/28 v1.15 key=value parser (DPC)
\KV@toks@=\toks34
)
(/usr/share/texlive/texmf-dist/tex/latex/graphics/graphics.sty
Package: graphics 2016/01/03 v1.0q Standard LaTeX Graphics (DPC,SPQR)

(/usr/share/texlive/texmf-dist/tex/latex/graphics/trig.sty
Package: trig 2016/01/03 v1.10 sin cos tan (DPC)
)
(/usr/share/texlive/texmf-dist/tex/latex/latexconfig/graphics.cfg
File: graphics.cfg 2010/04/23 v1.9 graphics configuration of TeX Live
)
Package graphics Info: Driver file: dvips.def on input line 95.

(/usr/share/texlive/texmf-dist/tex/latex/graphics/dvips.def
File: dvips.def 2015/12/30 v3.0k Driver-dependent file (DPC,SPQR)
))
\Gin@req@height=\dimen151
\Gin@req@width=\dimen152
)
(/usr/share/texlive/texmf-dist/tex/latex/tools/verbatim.sty
Package: verbatim 2014/10/28 v1.5q LaTeX2e package for verbatim enhancements
\every@verbatim=\toks35
\verbatim@line=\toks36
\verbatim@in@stream=\read2
)
(/usr/share/texlive/texmf-dist/tex/latex/base/syntonly.sty
Package: syntonly 1999/09/17 v2.1e Standard LaTeX2e package
)
(/usr/share/texlive/texmf-dist/tex/latex/hyperref/hyperref.sty
Package: hyperref 2012/11/06 v6.83m Hypertext links for LaTeX

(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/hobsub-hyperref.sty
Package: hobsub-hyperref 2012/05/28 v1.13 Bundle oberdiek, subset hyperref (HO)


(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/hobsub-generic.sty
Package: hobsub-generic 2012/05/28 v1.13 Bundle oberdiek, subset generic (HO)
Package: hobsub 2012/05/28 v1.13 Construct package bundles (HO)
Package: infwarerr 2010/04/08 v1.3 Providing info/warning/error messages (HO)
Package: ltxcmds 2011/11/09 v1.22 LaTeX kernel commands for general use (HO)
Package: ifluatex 2010/03/01 v1.3 Provides the ifluatex switch (HO)
Package ifluatex Info: LuaTeX not detected.
Package: ifvtex 2010/03/01 v1.5 Detect VTeX and its facilities (HO)
Package ifvtex Info: VTeX not detected.
Package: intcalc 2007/09/27 v1.1 Expandable calculations with integers (HO)
Package hobsub Info: Skipping package `ifpdf' (already loaded).
Package: etexcmds 2011/02/16 v1.5 Avoid name clashes with e-TeX commands (HO)
Package etexcmds Info: Could not find \expanded.
(etexcmds)             That can mean that you are not using pdfTeX 1.50 or
(etexcmds)             that some package has redefined \expanded.
(etexcmds)             In the latter case, load this package earlier.
Package: kvsetkeys 2012/04/25 v1.16 Key value parser (HO)
Package: kvdefinekeys 2011/04/07 v1.3 Define keys (HO)
Package: pdftexcmds 2011/11/29 v0.20 Utility functions of pdfTeX for LuaTeX (HO
)
Package pdftexcmds Info: LuaTeX not detected.
Package pdftexcmds Info: \pdf@primitive is available.
Package pdftexcmds Info: \pdf@ifprimitive is available.
Package pdftexcmds Info: \pdfdraftmode found.
Package: pdfescape 2011/11/25 v1.13 Implements pdfTeX's escape features (HO)
Package: bigintcalc 2012/04/08 v1.3 Expandable calculations on big integers (HO
)
Package: bitset 2011/01/30 v1.1 Handle bit-vector datatype (HO)
Package: uniquecounter 2011/01/30 v1.2 Provide unlimited unique counter (HO)
)
Package hobsub Info: Skipping package `hobsub' (already loaded).
Package: letltxmacro 2010/09/02 v1.4 Let assignment for LaTeX macros (HO)
Package: hopatch 2012/05/28 v1.2 Wrapper for package hooks (HO)
Package: xcolor-patch 2011/01/30 xcolor patch
Package: atveryend 2011/06/30 v1.8 Hooks at the very end of document (HO)
Package atveryend Info: \enddocument detected (standard20110627).
Package: atbegshi 2011/10/05 v1.16 At begin shipout hook (HO)
Package: refcount 2011/10/16 v3.4 Data extraction from label references (HO)
Package: hycolor 2011/01/30 v1.7 Color options for hyperref/bookmark (HO)
)
(/usr/share/texlive/texmf-dist/tex/generic/ifxetex/ifxetex.sty
Package: ifxetex 2010/09/12 v0.6 Provides ifxetex conditional
)
(/usr/share/texlive/texmf-dist/tex/latex/oberdiek/auxhook.sty
Package: auxhook 2011/03/04 v1.3 Hooks for auxiliary files (HO)
)
(/usr/share/texlive/texmf-dist/tex/latex/oberdiek/kvoptions.sty
Package: kvoptions 2011/06/30 v3.11 Key value format for package options (HO)
)
\@linkdim=\dimen153
\Hy@linkcounter=\count110
\Hy@pagecounter=\count111

(/usr/share/texlive/texmf-dist/tex/latex/hyperref/pd1enc.def
File: pd1enc.def 2012/11/06 v6.83m Hyperref: PDFDocEncoding definition (HO)
)
\Hy@SavedSpaceFactor=\count112

(/usr/share/texlive/texmf-dist/tex/latex/latexconfig/hyperref.cfg
File: hyperref.cfg 2002/06/06 v1.2 hyperref configuration of TeXLive
)
Package hyperref Info: Hyper figures OFF on input line 4443.
Package hyperref Info: Link nesting OFF on input line 4448.
Package hyperref Info: Hyper index ON on input line 4451.
Package hyperref Info: Plain pages OFF on input line 4458.
Package hyperref Info: Backreferencing OFF on input line 4463.
Package hyperref Info: Implicit mode ON; LaTeX internals redefined.
Package hyperref Info: Bookmarks ON on input line 4688.
\c@Hy@tempcnt=\count113

(/usr/share/texlive/texmf-dist/tex/latex/url/url.sty
\Urlmuskip=\muskip11
Package: url 2013/09/16  ver 3.4  Verb mode for urls, etc.
)
LaTeX Info: Redefining \url on input line 5041.
\XeTeXLinkMargin=\dimen154
\Fld@menulength=\count114
\Field@Width=\dimen155
\Fld@charsize=\dimen156
Package hyperref Info: Hyper figures OFF on input line 6295.
Package hyperref Info: Link nesting OFF on input line 6300.
Package hyperref Info: Hyper index ON on input line 6303.
Package hyperref Info: backreferencing OFF on input line 6310.
Package hyperref Info: Link coloring OFF on input line 6315.
Package hyperref Info: Link coloring with OCG OFF on input line 6320.
Package hyperref Info: PDF/A mode OFF on input line 6325.
LaTeX Info: Redefining \ref on input line 6365.
LaTeX Info: Redefining \pageref on input line 6369.
\Hy@abspage=\count115
\c@Item=\count116
\c@Hfootnote=\count117
)

Package hyperref Message: Driver (autodetected): hpdftex.

(/usr/share/texlive/texmf-dist/tex/latex/hyperref/hpdftex.def
File: hpdftex.def 2012/11/06 v6.83m Hyperref driver for pdfTeX
\Fld@listcount=\count118
\c@bookmark@seq@number=\count119

(/usr/share/texlive/texmf-dist/tex/latex/oberdiek/rerunfilecheck.sty
Package: rerunfilecheck 2011/04/15 v1.7 Rerun checks for auxiliary files (HO)
Package uniquecounter Info: New unique counter `rerunfilecheck' on input line 2
82.
)
\Hy@SectionHShift=\skip53
)
(/usr/share/texlive/texmf-dist/tex/latex/preprint/fullpage.sty
Package: fullpage 1999/02/23 1.1 (PWD)
\FP@margin=\skip54
)
(/usr/share/texlive/texmf-dist/tex/latex/graphics/color.sty
Package: color 2016/01/03 v1.1b Standard LaTeX Color (DPC)

(/usr/share/texlive/texmf-dist/tex/latex/latexconfig/color.cfg
File: color.cfg 2007/01/18 v1.5 color configuration of teTeX/TeXLive
)
Package color Info: Driver file: pdftex.def on input line 143.

(/usr/share/texlive/texmf-dist/tex/latex/pdftex-def/pdftex.def
File: pdftex.def 2011/05/27 v0.06d Graphics/color for pdfTeX
\Gread@gobject=\count120
))
(/usr/share/texlive/texmf-dist/tex/latex/graphics/epsfig.sty
Package: epsfig 1999/02/16 v1.7a (e)psfig emulation (SPQR)
\epsfxsize=\dimen157
\epsfysize=\dimen158
)
(/usr/share/texlive/texmf-dist/tex/latex/tools/indentfirst.sty
Package: indentfirst 1995/11/23 v1.03 Indent first paragraph (DPC)
)
(/usr/share/texlive/texmf-dist/tex/latex/soul/soul.sty
Package: soul 2003/11/17 v2.4 letterspacing/underlining (mf)
\SOUL@word=\toks37
\SOUL@lasttoken=\toks38
\SOUL@cmds=\toks39
\SOUL@buffer=\toks40
\SOUL@token=\toks41
\SOUL@spaceskip=\skip55
\SOUL@ttwidth=\dimen159
\SOUL@uldp=\dimen160
\SOUL@ulht=\dimen161
)
(/usr/share/texlive/texmf-dist/tex/latex/amsaddr/amsaddr.sty
\c@g@author=\count121
)
(/usr/share/texlive/texmf-dist/tex/latex/esint/esint.sty
Package: esint 
\symlargesymbolsA=\mathgroup8
) (./extract.sty
(/usr/share/texlive/texmf-dist/tex/latex/environ/environ.sty
Package: environ 2014/05/04 v0.3 A new way to define environments

(/usr/share/texlive/texmf-dist/tex/latex/trimspaces/trimspaces.sty
Package: trimspaces 2009/09/17 v1.1 Trim spaces around a token list
))
(/usr/share/texlive/texmf-dist/tex/latex/etextools/etextools.sty
Package: etextools 2010/12/07 v3.1415926 e-TeX more useful tools for LaTeX pack
age writers

(/usr/share/texlive/texmf-dist/tex/latex/etex-pkg/etex.sty
Package: etex 2016/01/11 v2.6 eTeX basic definition package (PEB,DPC)
\et@xins=\count122
)
(/usr/share/texlive/texmf-dist/tex/latex/etoolbox/etoolbox.sty
Package: etoolbox 2015/08/02 v2.2a e-TeX tools for LaTeX (JAW)
\etb@tempcnta=\count123
)
\ettl@fter=\count124
\ettl@for@nested=\count277
)
(/usr/share/texmf/tex/latex/preview/preview.sty
Package: preview 2010/02/14 11.88 (AUCTeX/preview-latex)

(/usr/share/texmf/tex/latex/preview/prtightpage.def
\PreviewBorder=\dimen162
)
\pr@snippet=\count125
\pr@box=\box33
\pr@output=\toks42
)
\c@propcounter=\count126
\mybox=\box34
)
\c@thm=\count127
\c@lem=\count128
\c@prop=\count129
\c@defn=\count130
\c@cor=\count131
\c@conj=\count132
\c@clm=\count133

(source_extraction/results/1709.09042.aux)
\openout1 = `1709.09042.aux'.

LaTeX Font Info:    Checking defaults for OML/cmm/m/it on input line 182.
LaTeX Font Info:    ... okay on input line 182.
LaTeX Font Info:    Checking defaults for T1/cmr/m/n on input line 182.
LaTeX Font Info:    ... okay on input line 182.
LaTeX Font Info:    Checking defaults for OT1/cmr/m/n on input line 182.
LaTeX Font Info:    ... okay on input line 182.
LaTeX Font Info:    Checking defaults for OMS/cmsy/m/n on input line 182.
LaTeX Font Info:    ... okay on input line 182.
LaTeX Font Info:    Checking defaults for OMX/cmex/m/n on input line 182.
LaTeX Font Info:    ... okay on input line 182.
LaTeX Font Info:    Checking defaults for U/cmr/m/n on input line 182.
LaTeX Font Info:    ... okay on input line 182.
LaTeX Font Info:    Checking defaults for PD1/pdf/m/n on input line 182.
LaTeX Font Info:    ... okay on input line 182.
LaTeX Font Info:    Try loading font information for OT1+ptm on input line 182.


(/usr/share/texlive/texmf-dist/tex/latex/psnfss/ot1ptm.fd
File: ot1ptm.fd 2001/06/04 font definitions for OT1/ptm.
)
LaTeX Font Info:    Try loading font information for OT1+ztmcm on input line 18
2.

(/usr/share/texlive/texmf-dist/tex/latex/psnfss/ot1ztmcm.fd
File: ot1ztmcm.fd 2000/01/03 Fontinst v1.801 font definitions for OT1/ztmcm.
)
LaTeX Font Info:    Try loading font information for OML+ztmcm on input line 18
2.

(/usr/share/texlive/texmf-dist/tex/latex/psnfss/omlztmcm.fd
File: omlztmcm.fd 2000/01/03 Fontinst v1.801 font definitions for OML/ztmcm.
)
LaTeX Font Info:    Try loading font information for OMS+ztmcm on input line 18
2.

(/usr/share/texlive/texmf-dist/tex/latex/psnfss/omsztmcm.fd
File: omsztmcm.fd 2000/01/03 Fontinst v1.801 font definitions for OMS/ztmcm.
)
LaTeX Font Info:    Try loading font information for OMX+ztmcm on input line 18
2.

(/usr/share/texlive/texmf-dist/tex/latex/psnfss/omxztmcm.fd
File: omxztmcm.fd 2000/01/03 Fontinst v1.801 font definitions for OMX/ztmcm.
)
LaTeX Font Info:    Try loading font information for U+msa on input line 182.

(/usr/share/texlive/texmf-dist/tex/latex/amsfonts/umsa.fd
File: umsa.fd 2013/01/14 v3.01 AMS symbols A
)
LaTeX Font Info:    Try loading font information for U+msb on input line 182.

(/usr/share/texlive/texmf-dist/tex/latex/amsfonts/umsb.fd
File: umsb.fd 2013/01/14 v3.01 AMS symbols B
)
LaTeX Font Info:    Font shape `OT1/ptm/bx/n' in size <10> not available
(Font)              Font shape `OT1/ptm/b/n' tried instead on input line 182.
LaTeX Font Info:    Font shape `OT1/ptm/bx/n' in size <7.4> not available
(Font)              Font shape `OT1/ptm/b/n' tried instead on input line 182.
LaTeX Font Info:    Font shape `OT1/ptm/bx/n' in size <6> not available
(Font)              Font shape `OT1/ptm/b/n' tried instead on input line 182.
LaTeX Font Info:    Try loading font information for U+esint on input line 182.


(/usr/share/texlive/texmf-dist/tex/latex/esint/uesint.fd
File: uesint.fd 
)
LaTeX Font Info:    Font shape `OT1/ptm/bx/n' in size <12> not available
(Font)              Font shape `OT1/ptm/b/n' tried instead on input line 182.
LaTeX Font Info:    Font shape `OT1/ptm/bx/n' in size <9> not available
(Font)              Font shape `OT1/ptm/b/n' tried instead on input line 182.
LaTeX Font Info:    Font shape `OT1/ptm/bx/n' in size <7> not available
(Font)              Font shape `OT1/ptm/b/n' tried instead on input line 182.
Package xypdf Info: Line width: 0.47987pt on input line 182.

(/usr/share/texlive/texmf-dist/tex/latex/oberdiek/epstopdf-base.sty
Package: epstopdf-base 2010/02/09 v2.5 Base part for package epstopdf

(/usr/share/texlive/texmf-dist/tex/latex/oberdiek/grfext.sty
Package: grfext 2010/08/19 v1.1 Manage graphics extensions (HO)
)
Package epstopdf-base Info: Redefining graphics rule for `.eps' on input line 4
34.
Package grfext Info: Graphics extension search list:
(grfext)             [.png,.pdf,.jpg,.mps,.jpeg,.jbig2,.jb2,.PNG,.PDF,.JPG,.JPE
G,.JBIG2,.JB2,.eps]
(grfext)             \AppendGraphicsExtensions on input line 452.

(/usr/share/texlive/texmf-dist/tex/latex/latexconfig/epstopdf-sys.cfg
File: epstopdf-sys.cfg 2010/07/13 v1.3 Configuration of (r)epstopdf for TeX Liv
e
))
\AtBeginShipoutBox=\box35
Package hyperref Info: Link coloring OFF on input line 182.

(/usr/share/texlive/texmf-dist/tex/latex/hyperref/nameref.sty
Package: nameref 2012/10/27 v2.43 Cross-referencing by name of section

(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/gettitlestring.sty
Package: gettitlestring 2010/12/03 v1.4 Cleanup title references (HO)
)
\c@section@level=\count134
)
LaTeX Info: Redefining \ref on input line 182.
LaTeX Info: Redefining \pageref on input line 182.
LaTeX Info: Redefining \nameref on input line 182.

(source_extraction/results/1709.09042.out)
(source_extraction/results/1709.09042.out)
\@outlinefile=\write4
\openout4 = `1709.09042.out'.


(/usr/share/texlive/texmf-dist/tex/context/base/supp-pdf.mkii
[Loading MPS to PDF converter (version 2006.09.02).]
\scratchcounter=\count135
\scratchdimen=\dimen163
\scratchbox=\box36
\nofMPsegments=\count136
\nofMParguments=\count137
\everyMPshowfont=\toks43
\MPscratchCnt=\count138
\MPscratchDim=\dimen164
\MPnumerator=\count139
\makeMPintoPDFobject=\count140
\everyMPtoPDFconversion=\toks44
)
Preview: Fontsize 12pt
Preview: PDFoutput 1
\extractedfile=\write5
\openout5 = `propositions.txt'.


Underfull \hbox (badness 10000) in paragraph at lines 208--213

 []

LaTeX Font Info:    Font shape `OT1/ptm/bx/n' in size <10.95> not available
(Font)              Font shape `OT1/ptm/b/n' tried instead on input line 214.

Overfull \hbox (9.59096pt too wide) in paragraph at lines 214--215
\OT1/ptm/b/n/10.95 Keywords\OT1/ptm/m/n/10.95 : Landis' conjecture; quantitativ
e unique continuation; order of vanishing; Beltrami
 []


Underfull \hbox (badness 10000) in paragraph at lines 214--215

 []


Overfull \hbox (12.68358pt too wide) in paragraph at lines 231--235
\OT1/ptm/m/n/12 For real-valued $\OML/ztmcm/m/it/12 W[]; W[]; V$ \OT1/ptm/m/n/1
2 belonging to appropriate Lebesgue spaces, we study the unique continuation
 []


LaTeX Warning: Reference `epde' on page 2 undefined on input line 242.


LaTeX Warning: Reference `drho' on page 2 undefined on input line 242.


LaTeX Warning: Reference `bsigma' on page 2 undefined on input line 243.


LaTeX Warning: Reference `btsigma' on page 2 undefined on input line 243.


LaTeX Warning: Reference `epde' on page 2 undefined on input line 246.


LaTeX Warning: Reference `ellip' on page 2 undefined on input line 272.


LaTeX Warning: Reference `ABd' on page 2 undefined on input line 272.


LaTeX Warning: Reference `epde' on page 2 undefined on input line 272.

Preview: Tightpage -32891 -32891 32891 32891
[1{/var/lib/texmf/fonts/map/pdftex/updmap/pdftex.map}]
Overfull \hbox (12.0pt too wide) in paragraph at lines 272--272
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.272 \end{thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.272 \end{thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.272 \end{thm}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.272 \end{thm}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.272 \end{thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.272 \end{thm}
               
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.272 \end{thm}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.272 \end{thm}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `ellip' on page 2 undefined on input line 289.


LaTeX Warning: Reference `ABd' on page 2 undefined on input line 289.

[2]
Overfull \hbox (12.0pt too wide) in paragraph at lines 289--289
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.289 \end{thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.289 \end{thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.289 \end{thm}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.289 \end{thm}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.289 \end{thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.289 \end{thm}
               
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.289 \end{thm}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.289 \end{thm}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `ellip' on page 3 undefined on input line 318.


LaTeX Warning: Reference `ABd' on page 3 undefined on input line 318.

[3]
Overfull \hbox (12.0pt too wide) in paragraph at lines 318--318
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.318 \end{thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.318 \end{thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.318 \end{thm}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.318 \end{thm}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.318 \end{thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.318 \end{thm}
               
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.318 \end{thm}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.318 \end{thm}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `ellip' on page 3 undefined on input line 333.


LaTeX Warning: Reference `ABd' on page 3 undefined on input line 333.


LaTeX Warning: Reference `epde' on page 3 undefined on input line 333.

[4]
Overfull \hbox (12.0pt too wide) in paragraph at lines 333--333
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.333 \end{thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.333 \end{thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.333 \end{thm}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.333 \end{thm}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.333 \end{thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.333 \end{thm}
               
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.333 \end{thm}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.333 \end{thm}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `ellip' on page 3 undefined on input line 355.


LaTeX Warning: Reference `ABd' on page 3 undefined on input line 355.

[5]
Overfull \hbox (12.0pt too wide) in paragraph at lines 355--355
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.355 \end{thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.355 \end{thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.355 \end{thm}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.355 \end{thm}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.355 \end{thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.355 \end{thm}
               
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.355 \end{thm}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.355 \end{thm}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `ellip' on page 3 undefined on input line 371.


LaTeX Warning: Reference `ABd' on page 3 undefined on input line 371.


Underfull \vbox (badness 10000) has occurred while \output is active []

 [6]
Overfull \hbox (12.0pt too wide) in paragraph at lines 371--371
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.371 \end{thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.371 \end{thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.371 \end{thm}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.371 \end{thm}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.371 \end{thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.371 \end{thm}
               
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.371 \end{thm}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.371 \end{thm}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `ellip' on page 4 undefined on input line 382.


LaTeX Warning: Reference `ABd' on page 4 undefined on input line 382.


LaTeX Warning: Reference `epde' on page 4 undefined on input line 382.

[7]
Overfull \hbox (12.0pt too wide) in paragraph at lines 382--382
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.382 \end{thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.382 \end{thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.382 \end{thm}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.382 \end{thm}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.382 \end{thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.382 \end{thm}
               
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.382 \end{thm}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.382 \end{thm}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `epde' on page 6 undefined on input line 446.


LaTeX Warning: Reference `S2' on page 6 undefined on input line 452.


LaTeX Warning: Reference `S3' on page 6 undefined on input line 454.


LaTeX Warning: Reference `S4' on page 6 undefined on input line 456.


LaTeX Warning: Reference `S5' on page 6 undefined on input line 458.


LaTeX Warning: Reference `S6' on page 6 undefined on input line 459.


LaTeX Warning: Reference `S7' on page 6 undefined on input line 459.


LaTeX Warning: Reference `S8' on page 6 undefined on input line 459.


LaTeX Warning: Reference `S9' on page 6 undefined on input line 460.


Overfull \hbox (12.51988pt too wide) in paragraph at lines 451--461
\OT1/ptm/m/n/12 a positive multiplier, prove that it has appropriate pointwise 
bounds, satisfies generalized Caccioppoli-
 []


LaTeX Warning: Reference `AppA' on page 6 undefined on input line 463.


LaTeX Warning: Reference `AppB' on page 6 undefined on input line 464.


LaTeX Warning: Reference `S2' on page 6 undefined on input line 467.


Underfull \hbox (badness 10000) in paragraph at lines 462--468

 []


LaTeX Warning: Reference `ellip' on page 6 undefined on input line 479.


LaTeX Warning: Reference `ABd' on page 6 undefined on input line 479.

[8]
Overfull \hbox (12.0pt too wide) in paragraph at lines 491--491
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.491 \end{defn}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.491 \end{defn}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.491 \end{defn}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.491 \end{defn}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.491 \end{defn}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.491 \end{defn}
                
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.491 \end{defn}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.491 \end{defn}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Underfull \vbox (badness 4792) has occurred while \output is active []

 [9]
Overfull \hbox (12.0pt too wide) in paragraph at lines 501--501
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.501 \end{lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.501 \end{lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.501 \end{lem}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.501 \end{lem}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.501 \end{lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.501 \end{lem}
               
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.501 \end{lem}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.501 \end{lem}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[10]
Overfull \hbox (12.0pt too wide) in paragraph at lines 520--520
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.520 \end{defn}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.520 \end{defn}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.520 \end{defn}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.520 \end{defn}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.520 \end{defn}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.520 \end{defn}
                
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.520 \end{defn}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.520 \end{defn}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[11]
Overfull \hbox (12.0pt too wide) in paragraph at lines 533--533
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.533 \end{lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.533 \end{lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.533 \end{lem}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.533 \end{lem}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.533 \end{lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.533 \end{lem}
               
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.533 \end{lem}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.533 \end{lem}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[12]
Overfull \hbox (12.0pt too wide) in paragraph at lines 544--544
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.544 \end{defn}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.544 \end{defn}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.544 \end{defn}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.544 \end{defn}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.544 \end{defn}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.544 \end{defn}
                
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.544 \end{defn}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.544 \end{defn}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Underfull \vbox (badness 10000) has occurred while \output is active []

 [13]
Overfull \hbox (12.0pt too wide) in paragraph at lines 548--548
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.548 \end{rem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.548 \end{rem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.548 \end{rem}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.548 \end{rem}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.548 \end{rem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.548 \end{rem}
               
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.548 \end{rem}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.548 \end{rem}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `ellip' on page 8 undefined on input line 570.


LaTeX Warning: Reference `ABd' on page 8 undefined on input line 570.


LaTeX Warning: Reference `ellip' on page 8 undefined on input line 571.


LaTeX Warning: Reference `ABd' on page 8 undefined on input line 571.


LaTeX Warning: Reference `biForm' on page 8 undefined on input line 595.

[14]
Overfull \hbox (12.0pt too wide) in paragraph at lines 595--595
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.595 \end{lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.595 \end{lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.595 \end{lem}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.595 \end{lem}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.595 \end{lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.595 \end{lem}
               
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.595 \end{lem}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.595 \end{lem}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `BVP*' on page 9 undefined on input line 637.


LaTeX Warning: Reference `functional' on page 9 undefined on input line 637.


LaTeX Warning: Reference `weakForm' on page 9 undefined on input line 637.


LaTeX Warning: Reference `BVP*' on page 9 undefined on input line 637.


Overfull \hbox (9.557pt too wide) in paragraph at lines 639--641
[]\OT1/ptm/m/n/12 Using the lemma above, we now prove that a general positive m
ultiplier exists. With an appropriate
 []


LaTeX Warning: Reference `ellip' on page 9 undefined on input line 655.


LaTeX Warning: Reference `ABd' on page 9 undefined on input line 655.

[15]
Overfull \hbox (12.0pt too wide) in paragraph at lines 655--655
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.655 \end{lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.655 \end{lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.655 \end{lem}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.655 \end{lem}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.655 \end{lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.655 \end{lem}
               
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.655 \end{lem}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.655 \end{lem}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `BVP2' on page 10 undefined on input line 740.


LaTeX Warning: Reference `ABd' on page 10 undefined on input line 740.


LaTeX Warning: Reference `ellip' on page 10 undefined on input line 740.


LaTeX Warning: Reference `BVP2' on page 11 undefined on input line 740.


LaTeX Warning: Reference `ellip' on page 11 undefined on input line 740.


LaTeX Warning: Reference `AppB' on page 11 undefined on input line 740.


LaTeX Warning: Reference `AppB' on page 11 undefined on input line 740.


LaTeX Warning: Reference `BVP4' on page 11 undefined on input line 740.


Overfull \hbox (2.68295pt too wide) in paragraph at lines 740--740
\OT1/ptm/m/n/12 denote the Green's function for the adjoint operator $\OMS/ztmc
m/m/n/12 ^^@ [] [] \OT1/ztmcm/m/n/12 + \OML/ztmcm/m/it/12 W[] \OMS/ztmcm/m/n/12
 ^^A r$ \OT1/ptm/m/n/12 in $\OML/ztmcm/m/it/12 B[]$\OT1/ptm/m/n/12 . Note that 
$\OT1/ztmcm/m/n/12 ^^@[](\OML/ztmcm/m/it/12 ^^P; z\OT1/ztmcm/m/n/12 ) =
 []


Overfull \hbox (14.08727pt too wide) in paragraph at lines 740--740
\OT1/ptm/m/n/12 since $\OML/ztmcm/m/it/12 p > \OT1/ztmcm/m/n/12 1$\OT1/ptm/m/n/
12 , then $\OML/ztmcm/m/it/12 p[] \OMS/ztmcm/m/n/12 2 []$\OT1/ptm/m/n/12 , so i
t follows from [] in Theorem 10  that $[] [][] \OT1/ztmcm/m/n/12 =
 []


LaTeX Warning: Reference `epde' on page 12 undefined on input line 742.


LaTeX Warning: Reference `epde' on page 12 undefined on input line 763.

[16]
Overfull \hbox (12.0pt too wide) in paragraph at lines 763--763
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.763 \end{lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.763 \end{lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.763 \end{lem}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.763 \end{lem}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.763 \end{lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.763 \end{lem}
               
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.763 \end{lem}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.763 \end{lem}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `ellip' on page 12 undefined on input line 813.


Overfull \hbox (25.71165pt too wide) in paragraph at lines 813--813
[] 
 []

[17]
Overfull \hbox (12.0pt too wide) in paragraph at lines 829--829
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.829 \end{lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.829 \end{lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.829 \end{lem}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.829 \end{lem}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.829 \end{lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.829 \end{lem}
               
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.829 \end{lem}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.829 \end{lem}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `phiPDE' on page 13 undefined on input line 851.

[18]
Overfull \hbox (12.0pt too wide) in paragraph at lines 859--859
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.859 \end{lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.859 \end{lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.859 \end{lem}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.859 \end{lem}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.859 \end{lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.859 \end{lem}
               
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.859 \end{lem}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.859 \end{lem}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `phiPDE' on page 14 undefined on input line 1025.


LaTeX Warning: Reference `phiPDE' on page 14 undefined on input line 1025.

[19]
Overfull \hbox (12.0pt too wide) in paragraph at lines 1025--1025
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1025 \end{proof}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1025 \end{proof}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1025 \end{proof}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1025 \end{proof}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1025 \end{proof}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1025 \end{proof}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1025 \end{proof}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1025 \end{proof}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `vpPDE' on page 14 undefined on input line 1025.


LaTeX Warning: Reference `scaleBds' on page 14 undefined on input line 1025.


Underfull \vbox (badness 2735) has occurred while \output is active []



LaTeX Warning: Reference `DivThmRes' on page 15 undefined on input line 1025.


LaTeX Warning: Reference `IIIBd' on page 15 undefined on input line 1025.


LaTeX Warning: Reference `scaleBds' on page 15 undefined on input line 1025.


LaTeX Warning: Reference `combinedEst' on page 15 undefined on input line 1025.



LaTeX Warning: Reference `vpPDE' on page 16 undefined on input line 1025.


Overfull \hbox (1.24965pt too wide) in paragraph at lines 1025--1025
[] 
 []

[20]
Overfull \hbox (12.0pt too wide) in paragraph at lines 1033--1033
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1033 \end{lem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1033 \end{lem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1033 \end{lem}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1033 \end{lem}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1033 \end{lem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1033 \end{lem}
                
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1033 \end{lem}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1033 \end{lem}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[21]
Overfull \hbox (12.0pt too wide) in paragraph at lines 1064--1064
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1064 \end{cor}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1064 \end{cor}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1064 \end{cor}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1064 \end{cor}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1064 \end{cor}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1064 \end{cor}
                
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1064 \end{cor}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1064 \end{cor}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[22]
Overfull \hbox (12.0pt too wide) in paragraph at lines 1089--1089
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1089 \end{lem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1089 \end{lem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1089 \end{lem}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1089 \end{lem}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1089 \end{lem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1089 \end{lem}
                
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1089 \end{lem}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1089 \end{lem}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `ellip' on page 18 undefined on input line 1091.


LaTeX Warning: Reference `ellip' on page 18 undefined on input line 1112.


LaTeX Warning: Reference `etaDef' on page 18 undefined on input line 1131.


LaTeX Warning: Reference `nuDef' on page 18 undefined on input line 1131.


LaTeX Warning: Reference `ellip' on page 19 undefined on input line 1166.


LaTeX Warning: Reference `ABd' on page 19 undefined on input line 1166.


LaTeX Warning: Reference `DDef' on page 19 undefined on input line 1171.


LaTeX Warning: Reference `DwDef' on page 19 undefined on input line 1171.

[23]
Overfull \hbox (12.0pt too wide) in paragraph at lines 1171--1171
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1171 \end{rem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1171 \end{rem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1171 \end{rem}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1171 \end{rem}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1171 \end{rem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1171 \end{rem}
                
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1171 \end{rem}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1171 \end{rem}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[24]
Overfull \hbox (12.0pt too wide) in paragraph at lines 1188--1188
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1188 \end{lem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1188 \end{lem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1188 \end{lem}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1188 \end{lem}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1188 \end{lem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1188 \end{lem}
                
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1188 \end{lem}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1188 \end{lem}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[25]
Overfull \hbox (12.0pt too wide) in paragraph at lines 1197--1197
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1197 \end{lem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1197 \end{lem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1197 \end{lem}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1197 \end{lem}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1197 \end{lem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1197 \end{lem}
                
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1197 \end{lem}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1197 \end{lem}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[26]
Overfull \hbox (417.41618pt too wide) in paragraph at lines 1199--1210
\OT1/ptm/m/n/12 Alessandrini and Escauriaza in [[]], see Propositions 1, 2, usi
ng quasi-regular mappings. [] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1210 \end{thm}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1210 \end{thm}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1210 \end{thm}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1210 \end{thm}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1210 \end{thm}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1210 \end{thm}
                
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1210 \end{thm}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1210 \end{thm}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (6.64642pt too wide) in paragraph at lines 1259--1259
[] 
 []

[27]
Overfull \hbox (12.0pt too wide) in paragraph at lines 1272--1272
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1272 \end{cor}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1272 \end{cor}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1272 \end{cor}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1272 \end{cor}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1272 \end{cor}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1272 \end{cor}
                
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1272 \end{cor}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1272 \end{cor}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[28]
Overfull \hbox (12.0pt too wide) in paragraph at lines 1275--1275
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1275 \end{rem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1275 \end{rem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1275 \end{rem}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1275 \end{rem}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1275 \end{rem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1275 \end{rem}
                
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1275 \end{rem}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1275 \end{rem}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[29]
Overfull \hbox (12.0pt too wide) in paragraph at lines 1300--1300
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1300 \end{lem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1300 \end{lem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1300 \end{lem}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1300 \end{lem}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1300 \end{lem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1300 \end{lem}
                
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1300 \end{lem}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1300 \end{lem}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[30]
Overfull \hbox (12.0pt too wide) in paragraph at lines 1334--1334
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1334 \end{lem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1334 \end{lem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1334 \end{lem}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1334 \end{lem}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1334 \end{lem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1334 \end{lem}
                
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1334 \end{lem}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1334 \end{lem}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[31]
Overfull \hbox (12.0pt too wide) in paragraph at lines 1378--1378
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1378 \end{cor}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1378 \end{cor}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1378 \end{cor}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1378 \end{cor}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1378 \end{cor}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1378 \end{cor}
                
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1378 \end{cor}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1378 \end{cor}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Underfull \vbox (badness 2556) has occurred while \output is active []



LaTeX Warning: Reference `epde' on page 23 undefined on input line 1395.


LaTeX Warning: Reference `tildev' on page 23 undefined on input line 1417.

[32]
Overfull \hbox (12.0pt too wide) in paragraph at lines 1452--1452
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1452 \end{lem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1452 \end{lem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1452 \end{lem}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1452 \end{lem}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1452 \end{lem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1452 \end{lem}
                
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1452 \end{lem}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1452 \end{lem}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (1.75723pt too wide) in paragraph at lines 1504--1504
\OT1/ptm/m/n/12 Since $\OML/ztmcm/m/it/12 ^^\[] > \OT1/ztmcm/m/n/12 2$\OT1/ptm/
m/n/12 , then $[][] \OML/ztmcm/m/it/12 t[]dt$ \OT1/ptm/m/n/12 converges and $[]
[] [][] [] \OML/ztmcm/m/it/12 dtdz \OMS/ztmcm/m/n/12 ^^T \OML/ztmcm/m/it/12 Cr[
] [][] :$ \OT1/ptm/m/n/12 A similar
 []


LaTeX Warning: Reference `ABd' on page 25 undefined on input line 1504.


LaTeX Warning: Reference `DDef' on page 25 undefined on input line 1506.


Underfull \vbox (badness 2538) has occurred while \output is active []



LaTeX Warning: Reference `ABd' on page 26 undefined on input line 1534.


LaTeX Warning: Reference `diffEq' on page 26 undefined on input line 1543.


LaTeX Warning: Reference `threeBall' on page 27 undefined on input line 1572.


LaTeX Warning: Reference `gBnd' on page 27 undefined on input line 1572.


LaTeX Warning: Reference `3balls2' on page 27 undefined on input line 1594.


Package hyperref Warning: Token not allowed in a PDF string (PDFDocEncoding):
(hyperref)                removing `math shift' on input line 1620.


Package hyperref Warning: Token not allowed in a PDF string (PDFDocEncoding):
(hyperref)                removing `math shift' on input line 1620.


LaTeX Warning: Reference `alDef' on page 28 undefined on input line 1622.


LaTeX Warning: Reference `gBnd' on page 28 undefined on input line 1622.


Package hyperref Warning: Token not allowed in a PDF string (PDFDocEncoding):
(hyperref)                removing `math shift' on input line 1627.


Package hyperref Warning: Token not allowed in a PDF string (PDFDocEncoding):
(hyperref)                removing `math shift' on input line 1627.

[33]
Overfull \hbox (12.0pt too wide) in paragraph at lines 1635--1635
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1635 \end{defn}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1635 \end{defn}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1635 \end{defn}
                 
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1635 \end{defn}
                 
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1635 \end{defn}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1635 \end{defn}
                 
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1635 \end{defn}
                 
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1635 \end{defn}
                 
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `DDef' on page 28 undefined on input line 1643.


LaTeX Warning: Reference `ellip' on page 28 undefined on input line 1653.


LaTeX Warning: Reference `ABd' on page 28 undefined on input line 1653.

[34]
Overfull \hbox (12.0pt too wide) in paragraph at lines 1677--1677
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1677 \end{lem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1677 \end{lem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1677 \end{lem}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1677 \end{lem}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1677 \end{lem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1677 \end{lem}
                
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1677 \end{lem}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1677 \end{lem}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `threeBall' on page 29 undefined on input line 1680.


LaTeX Warning: Reference `3ballw' on page 29 undefined on input line 1698.


LaTeX Warning: Reference `ABd' on page 29 undefined on input line 1721.


LaTeX Warning: Reference `1ballEst' on page 30 undefined on input line 1742.


LaTeX Warning: Reference `3ballw' on page 30 undefined on input line 1742.


LaTeX Warning: Reference `r3Est' on page 30 undefined on input line 1742.


LaTeX Warning: Reference `RHSEst' on page 30 undefined on input line 1747.


LaTeX Warning: Reference `L2vEst0' on page 30 undefined on input line 1747.


LaTeX Warning: Reference `L2vEst' on page 30 undefined on input line 1747.


LaTeX Warning: Reference `ellip' on page 30 undefined on input line 1770.


LaTeX Warning: Reference `ABd' on page 30 undefined on input line 1770.


LaTeX Warning: Reference `nuDef' on page 30 undefined on input line 1774.

[35]
Overfull \hbox (12.0pt too wide) in paragraph at lines 1798--1798
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1798 \end{lem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1798 \end{lem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1798 \end{lem}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1798 \end{lem}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1798 \end{lem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1798 \end{lem}
                
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1798 \end{lem}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1798 \end{lem}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[36]
Overfull \hbox (12.0pt too wide) in paragraph at lines 1811--1811
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1811 \end{lem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1811 \end{lem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1811 \end{lem}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1811 \end{lem}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1811 \end{lem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1811 \end{lem}
                
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1811 \end{lem}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1811 \end{lem}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `diffEq2' on page 32 undefined on input line 1852.


Package hyperref Warning: Token not allowed in a PDF string (PDFDocEncoding):
(hyperref)                removing `math shift' on input line 1864.


Package hyperref Warning: Token not allowed in a PDF string (PDFDocEncoding):
(hyperref)                removing `math shift' on input line 1864.


LaTeX Warning: Reference `3balls22' on page 32 undefined on input line 1885.


LaTeX Warning: Reference `3bgrLHS' on page 33 undefined on input line 1904.


Package hyperref Warning: Token not allowed in a PDF string (PDFDocEncoding):
(hyperref)                removing `math shift' on input line 1909.


Package hyperref Warning: Token not allowed in a PDF string (PDFDocEncoding):
(hyperref)                removing `math shift' on input line 1909.


LaTeX Warning: Reference `threeBall' on page 33 undefined on input line 1917.


Package hyperref Warning: Token not allowed in a PDF string (PDFDocEncoding):
(hyperref)                removing `math shift' on input line 1965.


Package hyperref Warning: Token not allowed in a PDF string (PDFDocEncoding):
(hyperref)                removing `math shift' on input line 1965.


Package hyperref Warning: Token not allowed in a PDF string (PDFDocEncoding):
(hyperref)                removing `math shift' on input line 1965.


Package hyperref Warning: Token not allowed in a PDF string (PDFDocEncoding):
(hyperref)                removing `\infty' on input line 1965.


Package hyperref Warning: Token not allowed in a PDF string (PDFDocEncoding):
(hyperref)                removing `math shift' on input line 1965.


LaTeX Warning: Reference `epde' on page 34 undefined on input line 1966.


LaTeX Warning: Reference `adjPDE' on page 34 undefined on input line 1983.


LaTeX Warning: Reference `phiBd1' on page 36 undefined on input line 2071.


LaTeX Warning: Reference `wUpper' on page 36 undefined on input line 2080.


Package hyperref Warning: Token not allowed in a PDF string (PDFDocEncoding):
(hyperref)                removing `math shift' on input line 2086.


Package hyperref Warning: Token not allowed in a PDF string (PDFDocEncoding):
(hyperref)                removing `subscript' on input line 2086.


Package hyperref Warning: Token not allowed in a PDF string (PDFDocEncoding):
(hyperref)                removing `\equiv' on input line 2086.


Package hyperref Warning: Token not allowed in a PDF string (PDFDocEncoding):
(hyperref)                removing `math shift' on input line 2086.


LaTeX Warning: Reference `epde' on page 36 undefined on input line 2086.


LaTeX Warning: Reference `ellip' on page 36 undefined on input line 2089.


LaTeX Warning: Reference `uRUpperBd' on page 37 undefined on input line 2160.


LaTeX Warning: Reference `uRLowerBd' on page 37 undefined on input line 2160.


LaTeX Warning: Reference `uRUpperBd' on page 38 undefined on input line 2192.


LaTeX Warning: Reference `uRLowerBd' on page 38 undefined on input line 2192.


LaTeX Warning: Reference `curlCor' on page 38 undefined on input line 2200.


LaTeX Warning: Reference `ellip' on page 38 undefined on input line 2214.


LaTeX Warning: Reference `ABd' on page 38 undefined on input line 2214.

[37]
Overfull \hbox (12.0pt too wide) in paragraph at lines 2224--2224
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2224 \end{thm}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2224 \end{thm}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.2224 \end{thm}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.2224 \end{thm}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2224 \end{thm}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.2224 \end{thm}
                
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.2224 \end{thm}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.2224 \end{thm}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (4.09569pt too wide) in paragraph at lines 2283--2283
\OT1/ptm/m/n/12 In the case where $[][] \OT1/ztmcm/m/n/12 = 0$ \OT1/ptm/m/n/12 
and $[][] \OT1/ztmcm/m/n/12 = 0$\OT1/ptm/m/n/12 , set $\OML/ztmcm/m/it/12 l \OT
1/ztmcm/m/n/12 = [] \OML/ztmcm/m/it/12 u[]$ \OT1/ptm/m/n/12 and define $\OML/zt
mcm/m/it/12 v \OT1/ztmcm/m/n/12 = [] [] =
 []


LaTeX Warning: Reference `eqB.1' on page 40 undefined on input line 2320.


LaTeX Warning: Reference `ellip' on page 40 undefined on input line 2324.


LaTeX Warning: Reference `ABd' on page 40 undefined on input line 2324.


LaTeX Warning: Reference `ABd' on page 41 undefined on input line 2372.


LaTeX Warning: Reference `ellip' on page 41 undefined on input line 2372.

[38]
Overfull \hbox (12.0pt too wide) in paragraph at lines 2372--2372
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2372 \end{rem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2372 \end{rem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.2372 \end{rem}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.2372 \end{rem}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2372 \end{rem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.2372 \end{rem}
                
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.2372 \end{rem}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.2372 \end{rem}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[39]
Overfull \hbox (12.0pt too wide) in paragraph at lines 2393--2393
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2393 \end{lem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2393 \end{lem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.2393 \end{lem}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.2393 \end{lem}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2393 \end{lem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.2393 \end{lem}
                
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.2393 \end{lem}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.2393 \end{lem}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Underfull \vbox (badness 1577) has occurred while \output is active []

 [40]
Overfull \hbox (12.0pt too wide) in paragraph at lines 2397--2397
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2397 \end{rem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2397 \end{rem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.2397 \end{rem}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.2397 \end{rem}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2397 \end{rem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.2397 \end{rem}
                
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.2397 \end{rem}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.2397 \end{rem}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[41]
Overfull \hbox (12.0pt too wide) in paragraph at lines 2409--2409
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2409 \end{lem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2409 \end{lem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.2409 \end{lem}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.2409 \end{lem}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2409 \end{lem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.2409 \end{lem}
                
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.2409 \end{lem}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.2409 \end{lem}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[42]
Overfull \hbox (12.0pt too wide) in paragraph at lines 2421--2421
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2421 \end{lem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2421 \end{lem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.2421 \end{lem}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.2421 \end{lem}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2421 \end{lem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.2421 \end{lem}
                
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.2421 \end{lem}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.2421 \end{lem}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

LaTeX Font Info:    Font shape `OT1/ptm/bx/it' in size <12> not available
(Font)              Font shape `OT1/ptm/b/it' tried instead on input line 2461.

[43]
Overfull \hbox (12.0pt too wide) in paragraph at lines 2461--2461
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2461 \end{defn}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2461 \end{defn}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.2461 \end{defn}
                 
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.2461 \end{defn}
                 
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2461 \end{defn}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.2461 \end{defn}
                 
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.2461 \end{defn}
                 
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.2461 \end{defn}
                 
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Underfull \vbox (badness 10000) has occurred while \output is active []

 [44]
Overfull \hbox (12.0pt too wide) in paragraph at lines 2534--2534
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2534 \end{thm}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2534 \end{thm}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.2534 \end{thm}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.2534 \end{thm}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.2534 \end{thm}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.2534 \end{thm}
                
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.2534 \end{thm}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.2534 \end{thm}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


! LaTeX Error: \begin{proof} on input line 2536 ended by \end{pf}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.3117 \end{pf}
               
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.


Underfull \vbox (badness 4647) has occurred while \output is active []



LaTeX Warning: Reference `eqB.24' on page 44 undefined on input line 3117.


LaTeX Warning: Reference `eqB.29' on page 45 undefined on input line 3117.


LaTeX Warning: Reference `eqB.27' on page 45 undefined on input line 3117.


LaTeX Warning: Reference `eqB.30' on page 45 undefined on input line 3117.


LaTeX Warning: Reference `eqB.28' on page 45 undefined on input line 3117.


LaTeX Warning: Reference `eqB.29' on page 45 undefined on input line 3117.


LaTeX Warning: Reference `eqB.30' on page 45 undefined on input line 3117.


LaTeX Warning: Reference `eqB.29' on page 46 undefined on input line 3117.


LaTeX Warning: Reference `eqB.30' on page 46 undefined on input line 3117.


LaTeX Warning: Reference `eqB.31' on page 46 undefined on input line 3117.


LaTeX Warning: Reference `eqB.32' on page 46 undefined on input line 3117.


LaTeX Warning: Reference `eqB.33' on page 46 undefined on input line 3117.


LaTeX Warning: Reference `eqB.36' on page 46 undefined on input line 3117.


LaTeX Warning: Reference `eqB.38' on page 46 undefined on input line 3117.


LaTeX Warning: Reference `eqB.42' on page 47 undefined on input line 3117.


LaTeX Warning: Reference `eqB.40' on page 47 undefined on input line 3117.


LaTeX Warning: Reference `eqB.43' on page 47 undefined on input line 3117.


LaTeX Warning: Reference `eqB.26' on page 47 undefined on input line 3117.


LaTeX Warning: Reference `eqB.44' on page 47 undefined on input line 3117.


LaTeX Warning: Reference `eqB.41' on page 47 undefined on input line 3117.


LaTeX Warning: Reference `eqB.43' on page 47 undefined on input line 3117.


LaTeX Warning: Reference `eqB.26' on page 47 undefined on input line 3117.


LaTeX Warning: Reference `eqB.46' on page 47 undefined on input line 3117.


LaTeX Warning: Reference `eqB.47' on page 48 undefined on input line 3117.


LaTeX Warning: Reference `eqB.45' on page 48 undefined on input line 3117.


LaTeX Warning: Reference `eqB.47' on page 48 undefined on input line 3117.


LaTeX Warning: Reference `eqB.45' on page 48 undefined on input line 3117.


LaTeX Warning: Reference `eqB.48' on page 48 undefined on input line 3117.


LaTeX Warning: Reference `eqB.49' on page 48 undefined on input line 3117.


LaTeX Warning: Reference `eqB.44' on page 49 undefined on input line 3117.


LaTeX Warning: Reference `eqB.46' on page 49 undefined on input line 3117.


LaTeX Warning: Reference `eqB.25' on page 49 undefined on input line 3117.


LaTeX Warning: Reference `ABd' on page 49 undefined on input line 3117.


LaTeX Warning: Reference `eqB.52' on page 49 undefined on input line 3117.


LaTeX Warning: Reference `eqB.25' on page 49 undefined on input line 3117.


LaTeX Warning: Reference `ABd' on page 49 undefined on input line 3117.


LaTeX Warning: Reference `eqB.53' on page 49 undefined on input line 3117.


LaTeX Warning: Reference `eqB.54' on page 49 undefined on input line 3117.


LaTeX Warning: Reference `eqB.55' on page 49 undefined on input line 3117.


LaTeX Warning: Reference `eqB.29' on page 50 undefined on input line 3117.


LaTeX Warning: Reference `eqB.30' on page 50 undefined on input line 3117.


LaTeX Warning: Reference `eqB.33' on page 50 undefined on input line 3117.


LaTeX Warning: Reference `eqB.35' on page 50 undefined on input line 3117.


LaTeX Warning: Reference `eqB.53' on page 50 undefined on input line 3117.


LaTeX Warning: Reference `eqB.52' on page 50 undefined on input line 3117.


LaTeX Warning: Reference `eqB.52' on page 50 undefined on input line 3117.


LaTeX Warning: Reference `eqB.52' on page 50 undefined on input line 3117.


LaTeX Warning: Reference `eqB.53' on page 50 undefined on input line 3117.


LaTeX Warning: Reference `eqB.56' on page 50 undefined on input line 3117.


LaTeX Warning: Reference `eqB.49' on page 50 undefined on input line 3117.


LaTeX Warning: Reference `eqB.48' on page 50 undefined on input line 3117.


LaTeX Warning: Reference `eqB.44' on page 50 undefined on input line 3117.


LaTeX Warning: Reference `eqB.46' on page 50 undefined on input line 3117.


LaTeX Warning: Reference `eqB.45' on page 50 undefined on input line 3117.


LaTeX Warning: Reference `eqB.47' on page 50 undefined on input line 3117.


LaTeX Warning: Reference `eqB.52' on page 51 undefined on input line 3117.


LaTeX Warning: Reference `eqB.40' on page 51 undefined on input line 3117.


LaTeX Warning: Reference `eqB.57' on page 51 undefined on input line 3117.


LaTeX Warning: Reference `eqB.53' on page 51 undefined on input line 3117.


Overfull \hbox (2.69713pt too wide) in paragraph at lines 3117--3117
[]\OT1/ptm/m/n/12 By the same arguments used for $\OT1/ztmcm/m/n/12 ^^@[]$\OT1/
ptm/m/n/12 , we obtain a sequence $[][]$, $\OML/ztmcm/m/it/12 ^^[[] \OMS/ztmcm/
m/n/12 ! \OT1/ztmcm/m/n/12 0$\OT1/ptm/m/n/12 , such that $[] [] \OT1/ztmcm/m/n/
12 =
 []


LaTeX Warning: Reference `eqB.25' on page 52 undefined on input line 3117.


LaTeX Warning: Reference `eqB.58' on page 52 undefined on input line 3117.


LaTeX Warning: Reference `eqB.52' on page 52 undefined on input line 3117.


LaTeX Warning: Reference `eqB.59' on page 53 undefined on input line 3135.


LaTeX Warning: Reference `eqB.60' on page 53 undefined on input line 3135.

[45]
Overfull \hbox (12.0pt too wide) in paragraph at lines 3135--3135
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3135 \end{rem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3135 \end{rem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.3135 \end{rem}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.3135 \end{rem}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.3135 \end{rem}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.3135 \end{rem}
                
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.3135 \end{rem}
                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.3135 \end{rem}
                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


! LaTeX Error: \begin{pf} on input line 2536 ended by \end{appendix}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.3137 \end{appendix}
                     
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.


! LaTeX Error: \begin{appendix} on input line 2202 ended by \end{document}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.3250 \end{document}
                     
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

Package atveryend Info: Empty hook `BeforeClearDocument' on input line 3250.
Package atveryend Info: Empty hook `AfterLastShipout' on input line 3250.
(source_extraction/results/1709.09042.aux)
Package atveryend Info: Executing hook `AtVeryEndDocument' on input line 3250.
Package atveryend Info: Executing hook `AtEndAfterFileList' on input line 3250.

Package rerunfilecheck Info: File `1709.09042.out' has not changed.
(rerunfilecheck)             Checksum: <no file>.


LaTeX Warning: There were undefined references.

Package atveryend Info: Empty hook `AtVeryVeryEnd' on input line 3250.
 )
(\end occurred inside a group at level 1)

### semi simple group (level 1) entered at line 2202 (\begingroup)
### bottom level
(\end occurred when \iftrue on line 3135 was incomplete)
(\end occurred when \iftrue on line 3135 was incomplete)
(\end occurred when \iftrue on line 3135 was incomplete)
(\end occurred when \iftrue on line 3135 was incomplete)
(\end occurred when \iftrue on line 3135 was incomplete)
(\end occurred when \iftrue on line 3135 was incomplete)
(\end occurred when \iftrue on line 2534 was incomplete)
(\end occurred when \iftrue on line 2534 was incomplete)
(\end occurred when \iftrue on line 2534 was incomplete)
(\end occurred when \iftrue on line 2534 was incomplete)
(\end occurred when \iftrue on line 2534 was incomplete)
(\end occurred when \iftrue on line 2534 was incomplete)
(\end occurred when \iftrue on line 2461 was incomplete)
(\end occurred when \iftrue on line 2461 was incomplete)
(\end occurred when \iftrue on line 2461 was incomplete)
(\end occurred when \iftrue on line 2461 was incomplete)
(\end occurred when \iftrue on line 2461 was incomplete)
(\end occurred when \iftrue on line 2461 was incomplete)
(\end occurred when \iftrue on line 2421 was incomplete)
(\end occurred when \iftrue on line 2421 was incomplete)
(\end occurred when \iftrue on line 2421 was incomplete)
(\end occurred when \iftrue on line 2421 was incomplete)
(\end occurred when \iftrue on line 2421 was incomplete)
(\end occurred when \iftrue on line 2421 was incomplete)
(\end occurred when \iftrue on line 2409 was incomplete)
(\end occurred when \iftrue on line 2409 was incomplete)
(\end occurred when \iftrue on line 2409 was incomplete)
(\end occurred when \iftrue on line 2409 was incomplete)
(\end occurred when \iftrue on line 2409 was incomplete)
(\end occurred when \iftrue on line 2409 was incomplete)
(\end occurred when \iftrue on line 2397 was incomplete)
(\end occurred when \iftrue on line 2397 was incomplete)
(\end occurred when \iftrue on line 2397 was incomplete)
(\end occurred when \iftrue on line 2397 was incomplete)
(\end occurred when \iftrue on line 2397 was incomplete)
(\end occurred when \iftrue on line 2397 was incomplete)
(\end occurred when \iftrue on line 2393 was incomplete)
(\end occurred when \iftrue on line 2393 was incomplete)
(\end occurred when \iftrue on line 2393 was incomplete)
(\end occurred when \iftrue on line 2393 was incomplete)
(\end occurred when \iftrue on line 2393 was incomplete)
(\end occurred when \iftrue on line 2393 was incomplete)
(\end occurred when \iftrue on line 2372 was incomplete)
(\end occurred when \iftrue on line 2372 was incomplete)
(\end occurred when \iftrue on line 2372 was incomplete)
(\end occurred when \iftrue on line 2372 was incomplete)
(\end occurred when \iftrue on line 2372 was incomplete)
(\end occurred when \iftrue on line 2372 was incomplete)
(\end occurred when \iftrue on line 2224 was incomplete)
(\end occurred when \iftrue on line 2224 was incomplete)
(\end occurred when \iftrue on line 2224 was incomplete)
(\end occurred when \iftrue on line 2224 was incomplete)
(\end occurred when \iftrue on line 2224 was incomplete)
(\end occurred when \iftrue on line 2224 was incomplete)
(\end occurred when \iftrue on line 1811 was incomplete)
(\end occurred when \iftrue on line 1811 was incomplete)
(\end occurred when \iftrue on line 1811 was incomplete)
(\end occurred when \iftrue on line 1811 was incomplete)
(\end occurred when \iftrue on line 1811 was incomplete)
(\end occurred when \iftrue on line 1811 was incomplete)
(\end occurred when \iftrue on line 1798 was incomplete)
(\end occurred when \iftrue on line 1798 was incomplete)
(\end occurred when \iftrue on line 1798 was incomplete)
(\end occurred when \iftrue on line 1798 was incomplete)
(\end occurred when \iftrue on line 1798 was incomplete)
(\end occurred when \iftrue on line 1798 was incomplete)
(\end occurred when \iftrue on line 1677 was incomplete)
(\end occurred when \iftrue on line 1677 was incomplete)
(\end occurred when \iftrue on line 1677 was incomplete)
(\end occurred when \iftrue on line 1677 was incomplete)
(\end occurred when \iftrue on line 1677 was incomplete)
(\end occurred when \iftrue on line 1677 was incomplete)
(\end occurred when \iftrue on line 1635 was incomplete)
(\end occurred when \iftrue on line 1635 was incomplete)
(\end occurred when \iftrue on line 1635 was incomplete)
(\end occurred when \iftrue on line 1635 was incomplete)
(\end occurred when \iftrue on line 1635 was incomplete)
(\end occurred when \iftrue on line 1635 was incomplete)
(\end occurred when \iftrue on line 1452 was incomplete)
(\end occurred when \iftrue on line 1452 was incomplete)
(\end occurred when \iftrue on line 1452 was incomplete)
(\end occurred when \iftrue on line 1452 was incomplete)
(\end occurred when \iftrue on line 1452 was incomplete)
(\end occurred when \iftrue on line 1452 was incomplete)
(\end occurred when \iftrue on line 1378 was incomplete)
(\end occurred when \iftrue on line 1378 was incomplete)
(\end occurred when \iftrue on line 1378 was incomplete)
(\end occurred when \iftrue on line 1378 was incomplete)
(\end occurred when \iftrue on line 1378 was incomplete)
(\end occurred when \iftrue on line 1378 was incomplete)
(\end occurred when \iftrue on line 1334 was incomplete)
(\end occurred when \iftrue on line 1334 was incomplete)
(\end occurred when \iftrue on line 1334 was incomplete)
(\end occurred when \iftrue on line 1334 was incomplete)
(\end occurred when \iftrue on line 1334 was incomplete)
(\end occurred when \iftrue on line 1334 was incomplete)
(\end occurred when \iftrue on line 1300 was incomplete)
(\end occurred when \iftrue on line 1300 was incomplete)
(\end occurred when \iftrue on line 1300 was incomplete)
(\end occurred when \iftrue on line 1300 was incomplete)
(\end occurred when \iftrue on line 1300 was incomplete)
(\end occurred when \iftrue on line 1300 was incomplete)
(\end occurred when \iftrue on line 1275 was incomplete)
(\end occurred when \iftrue on line 1275 was incomplete)
(\end occurred when \iftrue on line 1275 was incomplete)
(\end occurred when \iftrue on line 1275 was incomplete)
(\end occurred when \iftrue on line 1275 was incomplete)
(\end occurred when \iftrue on line 1275 was incomplete)
(\end occurred when \iftrue on line 1272 was incomplete)
(\end occurred when \iftrue on line 1272 was incomplete)
(\end occurred when \iftrue on line 1272 was incomplete)
(\end occurred when \iftrue on line 1272 was incomplete)
(\end occurred when \iftrue on line 1272 was incomplete)
(\end occurred when \iftrue on line 1272 was incomplete)
(\end occurred when \iftrue on line 1210 was incomplete)
(\end occurred when \iftrue on line 1210 was incomplete)
(\end occurred when \iftrue on line 1210 was incomplete)
(\end occurred when \iftrue on line 1210 was incomplete)
(\end occurred when \iftrue on line 1210 was incomplete)
(\end occurred when \iftrue on line 1210 was incomplete)
(\end occurred when \iftrue on line 1197 was incomplete)
(\end occurred when \iftrue on line 1197 was incomplete)
(\end occurred when \iftrue on line 1197 was incomplete)
(\end occurred when \iftrue on line 1197 was incomplete)
(\end occurred when \iftrue on line 1197 was incomplete)
(\end occurred when \iftrue on line 1197 was incomplete)
(\end occurred when \iftrue on line 1188 was incomplete)
(\end occurred when \iftrue on line 1188 was incomplete)
(\end occurred when \iftrue on line 1188 was incomplete)
(\end occurred when \iftrue on line 1188 was incomplete)
(\end occurred when \iftrue on line 1188 was incomplete)
(\end occurred when \iftrue on line 1188 was incomplete)
(\end occurred when \iftrue on line 1171 was incomplete)
(\end occurred when \iftrue on line 1171 was incomplete)
(\end occurred when \iftrue on line 1171 was incomplete)
(\end occurred when \iftrue on line 1171 was incomplete)
(\end occurred when \iftrue on line 1171 was incomplete)
(\end occurred when \iftrue on line 1171 was incomplete)
(\end occurred when \iftrue on line 1089 was incomplete)
(\end occurred when \iftrue on line 1089 was incomplete)
(\end occurred when \iftrue on line 1089 was incomplete)
(\end occurred when \iftrue on line 1089 was incomplete)
(\end occurred when \iftrue on line 1089 was incomplete)
(\end occurred when \iftrue on line 1089 was incomplete)
(\end occurred when \iftrue on line 1064 was incomplete)
(\end occurred when \iftrue on line 1064 was incomplete)
(\end occurred when \iftrue on line 1064 was incomplete)
(\end occurred when \iftrue on line 1064 was incomplete)
(\end occurred when \iftrue on line 1064 was incomplete)
(\end occurred when \iftrue on line 1064 was incomplete)
(\end occurred when \iftrue on line 1033 was incomplete)
(\end occurred when \iftrue on line 1033 was incomplete)
(\end occurred when \iftrue on line 1033 was incomplete)
(\end occurred when \iftrue on line 1033 was incomplete)
(\end occurred when \iftrue on line 1033 was incomplete)
(\end occurred when \iftrue on line 1033 was incomplete)
(\end occurred when \iftrue on line 1025 was incomplete)
(\end occurred when \iftrue on line 1025 was incomplete)
(\end occurred when \iftrue on line 1025 was incomplete)
(\end occurred when \iftrue on line 1025 was incomplete)
(\end occurred when \iftrue on line 1025 was incomplete)
(\end occurred when \iftrue on line 1025 was incomplete)
(\end occurred when \iftrue on line 859 was incomplete)
(\end occurred when \iftrue on line 859 was incomplete)
(\end occurred when \iftrue on line 859 was incomplete)
(\end occurred when \iftrue on line 859 was incomplete)
(\end occurred when \iftrue on line 859 was incomplete)
(\end occurred when \iftrue on line 859 was incomplete)
(\end occurred when \iftrue on line 829 was incomplete)
(\end occurred when \iftrue on line 829 was incomplete)
(\end occurred when \iftrue on line 829 was incomplete)
(\end occurred when \iftrue on line 829 was incomplete)
(\end occurred when \iftrue on line 829 was incomplete)
(\end occurred when \iftrue on line 829 was incomplete)
(\end occurred when \iftrue on line 763 was incomplete)
(\end occurred when \iftrue on line 763 was incomplete)
(\end occurred when \iftrue on line 763 was incomplete)
(\end occurred when \iftrue on line 763 was incomplete)
(\end occurred when \iftrue on line 763 was incomplete)
(\end occurred when \iftrue on line 763 was incomplete)
(\end occurred when \iftrue on line 655 was incomplete)
(\end occurred when \iftrue on line 655 was incomplete)
(\end occurred when \iftrue on line 655 was incomplete)
(\end occurred when \iftrue on line 655 was incomplete)
(\end occurred when \iftrue on line 655 was incomplete)
(\end occurred when \iftrue on line 655 was incomplete)
(\end occurred when \iftrue on line 595 was incomplete)
(\end occurred when \iftrue on line 595 was incomplete)
(\end occurred when \iftrue on line 595 was incomplete)
(\end occurred when \iftrue on line 595 was incomplete)
(\end occurred when \iftrue on line 595 was incomplete)
(\end occurred when \iftrue on line 595 was incomplete)
(\end occurred when \iftrue on line 548 was incomplete)
(\end occurred when \iftrue on line 548 was incomplete)
(\end occurred when \iftrue on line 548 was incomplete)
(\end occurred when \iftrue on line 548 was incomplete)
(\end occurred when \iftrue on line 548 was incomplete)
(\end occurred when \iftrue on line 548 was incomplete)
(\end occurred when \iftrue on line 544 was incomplete)
(\end occurred when \iftrue on line 544 was incomplete)
(\end occurred when \iftrue on line 544 was incomplete)
(\end occurred when \iftrue on line 544 was incomplete)
(\end occurred when \iftrue on line 544 was incomplete)
(\end occurred when \iftrue on line 544 was incomplete)
(\end occurred when \iftrue on line 533 was incomplete)
(\end occurred when \iftrue on line 533 was incomplete)
(\end occurred when \iftrue on line 533 was incomplete)
(\end occurred when \iftrue on line 533 was incomplete)
(\end occurred when \iftrue on line 533 was incomplete)
(\end occurred when \iftrue on line 533 was incomplete)
(\end occurred when \iftrue on line 520 was incomplete)
(\end occurred when \iftrue on line 520 was incomplete)
(\end occurred when \iftrue on line 520 was incomplete)
(\end occurred when \iftrue on line 520 was incomplete)
(\end occurred when \iftrue on line 520 was incomplete)
(\end occurred when \iftrue on line 520 was incomplete)
(\end occurred when \iftrue on line 501 was incomplete)
(\end occurred when \iftrue on line 501 was incomplete)
(\end occurred when \iftrue on line 501 was incomplete)
(\end occurred when \iftrue on line 501 was incomplete)
(\end occurred when \iftrue on line 501 was incomplete)
(\end occurred when \iftrue on line 501 was incomplete)
(\end occurred when \iftrue on line 491 was incomplete)
(\end occurred when \iftrue on line 491 was incomplete)
(\end occurred when \iftrue on line 491 was incomplete)
(\end occurred when \iftrue on line 491 was incomplete)
(\end occurred when \iftrue on line 491 was incomplete)
(\end occurred when \iftrue on line 491 was incomplete)
(\end occurred when \iftrue on line 382 was incomplete)
(\end occurred when \iftrue on line 382 was incomplete)
(\end occurred when \iftrue on line 382 was incomplete)
(\end occurred when \iftrue on line 382 was incomplete)
(\end occurred when \iftrue on line 382 was incomplete)
(\end occurred when \iftrue on line 382 was incomplete)
(\end occurred when \iftrue on line 371 was incomplete)
(\end occurred when \iftrue on line 371 was incomplete)
(\end occurred when \iftrue on line 371 was incomplete)
(\end occurred when \iftrue on line 371 was incomplete)
(\end occurred when \iftrue on line 371 was incomplete)
(\end occurred when \iftrue on line 371 was incomplete)
(\end occurred when \iftrue on line 355 was incomplete)
(\end occurred when \iftrue on line 355 was incomplete)
(\end occurred when \iftrue on line 355 was incomplete)
(\end occurred when \iftrue on line 355 was incomplete)
(\end occurred when \iftrue on line 355 was incomplete)
(\end occurred when \iftrue on line 355 was incomplete)
(\end occurred when \iftrue on line 333 was incomplete)
(\end occurred when \iftrue on line 333 was incomplete)
(\end occurred when \iftrue on line 333 was incomplete)
(\end occurred when \iftrue on line 333 was incomplete)
(\end occurred when \iftrue on line 333 was incomplete)
(\end occurred when \iftrue on line 333 was incomplete)
(\end occurred when \iftrue on line 318 was incomplete)
(\end occurred when \iftrue on line 318 was incomplete)
(\end occurred when \iftrue on line 318 was incomplete)
(\end occurred when \iftrue on line 318 was incomplete)
(\end occurred when \iftrue on line 318 was incomplete)
(\end occurred when \iftrue on line 318 was incomplete)
(\end occurred when \iftrue on line 289 was incomplete)
(\end occurred when \iftrue on line 289 was incomplete)
(\end occurred when \iftrue on line 289 was incomplete)
(\end occurred when \iftrue on line 289 was incomplete)
(\end occurred when \iftrue on line 289 was incomplete)
(\end occurred when \iftrue on line 289 was incomplete)
(\end occurred when \iftrue on line 272 was incomplete)
(\end occurred when \iftrue on line 272 was incomplete)
(\end occurred when \iftrue on line 272 was incomplete)
(\end occurred when \iftrue on line 272 was incomplete)
(\end occurred when \iftrue on line 272 was incomplete)
(\end occurred when \iftrue on line 272 was incomplete) 
Here is how much of TeX's memory you used:
 11444 strings out of 494779
 152591 string characters out of 6179263
 434015 words of memory out of 5000000
 14221 multiletter control sequences out of 15000+600000
 50701 words of font info for 133 fonts, out of 8000000 for 9000
 346 hyphenation exceptions out of 8191
 34i,16n,33p,3275b,538s stack positions out of 5000i,500n,10000p,200000b,80000s
pdfTeX warning (dest): n
ame{cite.DHM16} has been referenced but does not exist, replaced by a fixed one


pdfTeX warning (dest): name{cite.GT01} has been referenced but does not exist, 
replaced by a fixed one

pdfTeX warning (dest): name{cite.KW15} has been referenced but does not exist, 
replaced by a fixed one

pdfTeX warning (dest): name{cite.Boj09} has been referenced but does not exist,
 replaced by a fixed one

pdfTeX warning (dest): name{cite.DKW17} has been referenced but does not exist,
 replaced by a fixed one

pdfTeX warning (dest): name{cite.KN85} has been referenced but does not exist, 
replaced by a fixed one

{/usr/share/texlive/texmf-dist/fonts/enc/dvips/base/8r.enc}</usr/share/texlive/
texmf-dist/fonts/type1/public/amsfonts/cm/cmex10.pfb></usr/share/texlive/texmf-
dist/fonts/type1/public/amsfonts/cm/cmmi10.pfb></usr/share/texlive/texmf-dist/f
onts/type1/public/amsfonts/cm/cmr10.pfb></usr/share/texlive/texmf-dist/fonts/ty
pe1/public/amsfonts/cm/cmsy10.pfb></usr/share/texlive/texmf-dist/fonts/type1/pu
blic/esint-type1/esint10.pfb></usr/share/texlive/texmf-dist/fonts/type1/public/
amsfonts/symbols/msbm10.pfb></usr/share/texlive/texmf-dist/fonts/type1/public/r
sfs/rsfs10.pfb></usr/share/texlive/texmf-dist/fonts/type1/urw/symbol/usyr.pfb><
/usr/share/texlive/texmf-dist/fonts/type1/urw/symbol/usyr.pfb></usr/share/texli
ve/texmf-dist/fonts/type1/urw/times/utmb8a.pfb></usr/share/texlive/texmf-dist/f
onts/type1/urw/times/utmbi8a.pfb></usr/share/texlive/texmf-dist/fonts/type1/urw
/times/utmr8a.pfb></usr/share/texlive/texmf-dist/fonts/type1/urw/times/utmri8a.
pfb>
Output written on source_extraction/results/1709.09042.pdf (45 pages, 171132 by
tes).
PDF statistics:
 387 PDF objects out of 1000 (max. 8388607)
 261 compressed objects within 3 object streams
 87 named destinations out of 1000 (max. 500000)
 1 words of extra memory for PDF output out of 10000 (max. 10000000)

