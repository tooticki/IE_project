This is pdfTeX, Version 3.14159265-2.6-1.40.16 (TeX Live 2015/Debian) (preloaded format=pdflatex 2017.8.22)  14 OCT 2018 21:53
entering extended mode
 restricted \write18 enabled.
 %&-line parsing enabled.
**source_extraction/results/1808.09587.tex
(./source_extraction/results/1808.09587.tex
LaTeX2e <2016/02/01>
Babel <3.9q> and hyphenation patterns for 1 language(s) loaded.
(/usr/share/texlive/texmf-dist/tex/latex/amscls/amsart.cls
Document Class: amsart 2015/03/04 v2.20.2
\linespacing=\dimen102
\normalparindent=\dimen103
\normaltopskip=\skip41
(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amsmath.sty
Package: amsmath 2016/03/03 v2.15a AMS math features
\@mathmargin=\skip42

For additional information on amsmath, use the `?' option.
(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amstext.sty
Package: amstext 2000/06/29 v2.01 AMS text

(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amsgen.sty
File: amsgen.sty 1999/11/30 v2.0 generic functions
\@emptytoks=\toks14
\ex@=\dimen104
))
(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amsbsy.sty
Package: amsbsy 1999/11/29 v1.2d Bold Symbols
\pmbraise@=\dimen105
)
(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amsopn.sty
Package: amsopn 1999/12/14 v2.01 operator names
)
\inf@bad=\count79
LaTeX Info: Redefining \frac on input line 199.
\uproot@=\count80
\leftroot@=\count81
LaTeX Info: Redefining \overline on input line 297.
\classnum@=\count82
\DOTSCASE@=\count83
LaTeX Info: Redefining \ldots on input line 394.
LaTeX Info: Redefining \dots on input line 397.
LaTeX Info: Redefining \cdots on input line 518.
\Mathstrutbox@=\box26
\strutbox@=\box27
\big@size=\dimen106
LaTeX Font Info:    Redeclaring font encoding OML on input line 630.
LaTeX Font Info:    Redeclaring font encoding OMS on input line 631.
\macc@depth=\count84
\c@MaxMatrixCols=\count85
\dotsspace@=\muskip10
\c@parentequation=\count86
\dspbrk@lvl=\count87
\tag@help=\toks15
\row@=\count88
\column@=\count89
\maxfields@=\count90
\andhelp@=\toks16
\eqnshift@=\dimen107
\alignsep@=\dimen108
\tagshift@=\dimen109
\tagwidth@=\dimen110
\totwidth@=\dimen111
\lineht@=\dimen112
\@envbody=\toks17
\multlinegap=\skip43
\multlinetaggap=\skip44
\mathdisplay@stack=\toks18
LaTeX Info: Redefining \[ on input line 2735.
LaTeX Info: Redefining \] on input line 2736.
)
LaTeX Font Info:    Try loading font information for U+msa on input line 388.

(/usr/share/texlive/texmf-dist/tex/latex/amsfonts/umsa.fd
File: umsa.fd 2013/01/14 v3.01 AMS symbols A
)
(/usr/share/texlive/texmf-dist/tex/latex/amsfonts/amsfonts.sty
Package: amsfonts 2013/01/14 v3.01 Basic AMSFonts support
\symAMSa=\mathgroup4
\symAMSb=\mathgroup5
LaTeX Font Info:    Overwriting math alphabet `\mathfrak' in version `bold'
(Font)                  U/euf/m/n --> U/euf/b/n on input line 106.
)
\copyins=\insert199
\abstractbox=\box28
\listisep=\skip45
\c@part=\count91
\c@section=\count92
\c@subsection=\count93
\c@subsubsection=\count94
\c@paragraph=\count95
\c@subparagraph=\count96
\c@figure=\count97
\c@table=\count98
\abovecaptionskip=\skip46
\belowcaptionskip=\skip47
\captionindent=\dimen113
\thm@style=\toks19
\thm@bodyfont=\toks20
\thm@headfont=\toks21
\thm@notefont=\toks22
\thm@headpunct=\toks23
\thm@preskip=\skip48
\thm@postskip=\skip49
\thm@headsep=\skip50
\dth@everypar=\toks24
)
(/usr/share/texlive/texmf-dist/tex/latex/amsfonts/amssymb.sty
Package: amssymb 2013/01/14 v3.01 AMS font symbols
)
(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amscd.sty
Package: amscd 1999/11/29 v2.0 AMS Commutatitive Diagrams
\athelp@=\toks25
\minaw@=\dimen114
\bigaw@=\dimen115
\minCDarrowwidth=\dimen116
)
(/usr/share/texlive/texmf-dist/tex/latex/geometry/geometry.sty
Package: geometry 2010/09/12 v5.6 Page Geometry

(/usr/share/texlive/texmf-dist/tex/latex/graphics/keyval.sty
Package: keyval 2014/10/28 v1.15 key=value parser (DPC)
\KV@toks@=\toks26
)
(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/ifpdf.sty
Package: ifpdf 2011/01/30 v2.3 Provides the ifpdf switch (HO)
Package ifpdf Info: pdfTeX in PDF mode is detected.
)
(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/ifvtex.sty
Package: ifvtex 2010/03/01 v1.5 Detect VTeX and its facilities (HO)
Package ifvtex Info: VTeX not detected.
)
(/usr/share/texlive/texmf-dist/tex/generic/ifxetex/ifxetex.sty
Package: ifxetex 2010/09/12 v0.6 Provides ifxetex conditional
)
\Gm@cnth=\count99
\Gm@cntv=\count100
\c@Gm@tempcnt=\count101
\Gm@bindingoffset=\dimen117
\Gm@wd@mp=\dimen118
\Gm@odd@mp=\dimen119
\Gm@even@mp=\dimen120
\Gm@layoutwidth=\dimen121
\Gm@layoutheight=\dimen122
\Gm@layouthoffset=\dimen123
\Gm@layoutvoffset=\dimen124
\Gm@dimlist=\toks27
)
(/usr/share/texlive/texmf-dist/tex/latex/graphics/color.sty
Package: color 2016/01/03 v1.1b Standard LaTeX Color (DPC)

(/usr/share/texlive/texmf-dist/tex/latex/latexconfig/color.cfg
File: color.cfg 2007/01/18 v1.5 color configuration of teTeX/TeXLive
)
Package color Info: Driver file: pdftex.def on input line 143.

(/usr/share/texlive/texmf-dist/tex/latex/pdftex-def/pdftex.def
File: pdftex.def 2011/05/27 v0.06d Graphics/color for pdfTeX

(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/infwarerr.sty
Package: infwarerr 2010/04/08 v1.3 Providing info/warning/error messages (HO)
)
(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/ltxcmds.sty
Package: ltxcmds 2011/11/09 v1.22 LaTeX kernel commands for general use (HO)
)
\Gread@gobject=\count102
))
(/usr/share/texlive/texmf-dist/tex/latex/hyperref/hyperref.sty
Package: hyperref 2012/11/06 v6.83m Hypertext links for LaTeX

(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/hobsub-hyperref.sty
Package: hobsub-hyperref 2012/05/28 v1.13 Bundle oberdiek, subset hyperref (HO)


(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/hobsub-generic.sty
Package: hobsub-generic 2012/05/28 v1.13 Bundle oberdiek, subset generic (HO)
Package: hobsub 2012/05/28 v1.13 Construct package bundles (HO)
Package hobsub Info: Skipping package `infwarerr' (already loaded).
Package hobsub Info: Skipping package `ltxcmds' (already loaded).
Package: ifluatex 2010/03/01 v1.3 Provides the ifluatex switch (HO)
Package ifluatex Info: LuaTeX not detected.
Package hobsub Info: Skipping package `ifvtex' (already loaded).
Package: intcalc 2007/09/27 v1.1 Expandable calculations with integers (HO)
Package hobsub Info: Skipping package `ifpdf' (already loaded).
Package: etexcmds 2011/02/16 v1.5 Avoid name clashes with e-TeX commands (HO)
Package etexcmds Info: Could not find \expanded.
(etexcmds)             That can mean that you are not using pdfTeX 1.50 or
(etexcmds)             that some package has redefined \expanded.
(etexcmds)             In the latter case, load this package earlier.
Package: kvsetkeys 2012/04/25 v1.16 Key value parser (HO)
Package: kvdefinekeys 2011/04/07 v1.3 Define keys (HO)
Package: pdftexcmds 2011/11/29 v0.20 Utility functions of pdfTeX for LuaTeX (HO
)
Package pdftexcmds Info: LuaTeX not detected.
Package pdftexcmds Info: \pdf@primitive is available.
Package pdftexcmds Info: \pdf@ifprimitive is available.
Package pdftexcmds Info: \pdfdraftmode found.
Package: pdfescape 2011/11/25 v1.13 Implements pdfTeX's escape features (HO)
Package: bigintcalc 2012/04/08 v1.3 Expandable calculations on big integers (HO
)
Package: bitset 2011/01/30 v1.1 Handle bit-vector datatype (HO)
Package: uniquecounter 2011/01/30 v1.2 Provide unlimited unique counter (HO)
)
Package hobsub Info: Skipping package `hobsub' (already loaded).
Package: letltxmacro 2010/09/02 v1.4 Let assignment for LaTeX macros (HO)
Package: hopatch 2012/05/28 v1.2 Wrapper for package hooks (HO)
Package: xcolor-patch 2011/01/30 xcolor patch
Package: atveryend 2011/06/30 v1.8 Hooks at the very end of document (HO)
Package atveryend Info: \enddocument detected (standard20110627).
Package: atbegshi 2011/10/05 v1.16 At begin shipout hook (HO)
Package: refcount 2011/10/16 v3.4 Data extraction from label references (HO)
Package: hycolor 2011/01/30 v1.7 Color options for hyperref/bookmark (HO)
)
(/usr/share/texlive/texmf-dist/tex/latex/oberdiek/auxhook.sty
Package: auxhook 2011/03/04 v1.3 Hooks for auxiliary files (HO)
)
(/usr/share/texlive/texmf-dist/tex/latex/oberdiek/kvoptions.sty
Package: kvoptions 2011/06/30 v3.11 Key value format for package options (HO)
)
\@linkdim=\dimen125
\Hy@linkcounter=\count103
\Hy@pagecounter=\count104

(/usr/share/texlive/texmf-dist/tex/latex/hyperref/pd1enc.def
File: pd1enc.def 2012/11/06 v6.83m Hyperref: PDFDocEncoding definition (HO)
)
\Hy@SavedSpaceFactor=\count105

(/usr/share/texlive/texmf-dist/tex/latex/latexconfig/hyperref.cfg
File: hyperref.cfg 2002/06/06 v1.2 hyperref configuration of TeXLive
)
Package hyperref Info: Option `hypertexnames' set `false' on input line 4319.
Package hyperref Info: Option `colorlinks' set `true' on input line 4319.
Package hyperref Info: Hyper figures OFF on input line 4443.
Package hyperref Info: Link nesting OFF on input line 4448.
Package hyperref Info: Hyper index ON on input line 4451.
Package hyperref Info: Plain pages OFF on input line 4458.
Package hyperref Info: Backreferencing OFF on input line 4463.
Package hyperref Info: Implicit mode ON; LaTeX internals redefined.
Package hyperref Info: Bookmarks ON on input line 4688.
\c@Hy@tempcnt=\count106

(/usr/share/texlive/texmf-dist/tex/latex/url/url.sty
\Urlmuskip=\muskip11
Package: url 2013/09/16  ver 3.4  Verb mode for urls, etc.
)
LaTeX Info: Redefining \url on input line 5041.
\XeTeXLinkMargin=\dimen126
\Fld@menulength=\count107
\Field@Width=\dimen127
\Fld@charsize=\dimen128
Package hyperref Info: Hyper figures OFF on input line 6295.
Package hyperref Info: Link nesting OFF on input line 6300.
Package hyperref Info: Hyper index ON on input line 6303.
Package hyperref Info: backreferencing OFF on input line 6310.
Package hyperref Info: Link coloring ON on input line 6313.
Package hyperref Info: Link coloring with OCG OFF on input line 6320.
Package hyperref Info: PDF/A mode OFF on input line 6325.
LaTeX Info: Redefining \ref on input line 6365.
LaTeX Info: Redefining \pageref on input line 6369.
\Hy@abspage=\count108
\c@Item=\count109
\c@Hfootnote=\count110
)

Package hyperref Message: Driver (autodetected): hpdftex.

(/usr/share/texlive/texmf-dist/tex/latex/hyperref/hpdftex.def
File: hpdftex.def 2012/11/06 v6.83m Hyperref driver for pdfTeX
\Fld@listcount=\count111
\c@bookmark@seq@number=\count112

(/usr/share/texlive/texmf-dist/tex/latex/oberdiek/rerunfilecheck.sty
Package: rerunfilecheck 2011/04/15 v1.7 Rerun checks for auxiliary files (HO)
Package uniquecounter Info: New unique counter `rerunfilecheck' on input line 2
82.
)
\Hy@SectionHShift=\skip51
)
(/usr/share/texlive/texmf-dist/tex/latex/graphics/graphicx.sty
Package: graphicx 2014/10/28 v1.0g Enhanced LaTeX Graphics (DPC,SPQR)

(/usr/share/texlive/texmf-dist/tex/latex/graphics/graphics.sty
Package: graphics 2016/01/03 v1.0q Standard LaTeX Graphics (DPC,SPQR)

(/usr/share/texlive/texmf-dist/tex/latex/graphics/trig.sty
Package: trig 2016/01/03 v1.10 sin cos tan (DPC)
)
(/usr/share/texlive/texmf-dist/tex/latex/latexconfig/graphics.cfg
File: graphics.cfg 2010/04/23 v1.9 graphics configuration of TeX Live
)
Package graphics Info: Driver file: pdftex.def on input line 95.
)
\Gin@req@height=\dimen129
\Gin@req@width=\dimen130
)
(/usr/share/texlive/texmf-dist/tex/latex/pgf/frontendlayer/tikz.sty
(/usr/share/texlive/texmf-dist/tex/latex/pgf/basiclayer/pgf.sty
(/usr/share/texlive/texmf-dist/tex/latex/pgf/utilities/pgfrcs.sty
(/usr/share/texlive/texmf-dist/tex/generic/pgf/utilities/pgfutil-common.tex
\pgfutil@everybye=\toks28
\pgfutil@tempdima=\dimen131
\pgfutil@tempdimb=\dimen132

(/usr/share/texlive/texmf-dist/tex/generic/pgf/utilities/pgfutil-common-lists.t
ex)) (/usr/share/texlive/texmf-dist/tex/generic/pgf/utilities/pgfutil-latex.def
\pgfutil@abb=\box29
(/usr/share/texlive/texmf-dist/tex/latex/ms/everyshi.sty
Package: everyshi 2001/05/15 v3.00 EveryShipout Package (MS)
))
(/usr/share/texlive/texmf-dist/tex/generic/pgf/utilities/pgfrcs.code.tex
Package: pgfrcs 2015/08/07 v3.0.1a (rcs-revision 1.31)
))
Package: pgf 2015/08/07 v3.0.1a (rcs-revision 1.15)

(/usr/share/texlive/texmf-dist/tex/latex/pgf/basiclayer/pgfcore.sty
(/usr/share/texlive/texmf-dist/tex/latex/pgf/systemlayer/pgfsys.sty
(/usr/share/texlive/texmf-dist/tex/generic/pgf/systemlayer/pgfsys.code.tex
Package: pgfsys 2014/07/09 v3.0.1a (rcs-revision 1.48)

(/usr/share/texlive/texmf-dist/tex/generic/pgf/utilities/pgfkeys.code.tex
\pgfkeys@pathtoks=\toks29
\pgfkeys@temptoks=\toks30

(/usr/share/texlive/texmf-dist/tex/generic/pgf/utilities/pgfkeysfiltered.code.t
ex
\pgfkeys@tmptoks=\toks31
))
\pgf@x=\dimen133
\pgf@y=\dimen134
\pgf@xa=\dimen135
\pgf@ya=\dimen136
\pgf@xb=\dimen137
\pgf@yb=\dimen138
\pgf@xc=\dimen139
\pgf@yc=\dimen140
\w@pgf@writea=\write3
\r@pgf@reada=\read1
\c@pgf@counta=\count113
\c@pgf@countb=\count114
\c@pgf@countc=\count115
\c@pgf@countd=\count116
\t@pgf@toka=\toks32
\t@pgf@tokb=\toks33
\t@pgf@tokc=\toks34
 (/usr/share/texlive/texmf-dist/tex/generic/pgf/systemlayer/pgf.cfg
File: pgf.cfg 2008/05/14  (rcs-revision 1.7)
)
Driver file for pgf: pgfsys-pdftex.def

(/usr/share/texlive/texmf-dist/tex/generic/pgf/systemlayer/pgfsys-pdftex.def
File: pgfsys-pdftex.def 2014/10/11  (rcs-revision 1.35)

(/usr/share/texlive/texmf-dist/tex/generic/pgf/systemlayer/pgfsys-common-pdf.de
f
File: pgfsys-common-pdf.def 2013/10/10  (rcs-revision 1.13)
)))
(/usr/share/texlive/texmf-dist/tex/generic/pgf/systemlayer/pgfsyssoftpath.code.
tex
File: pgfsyssoftpath.code.tex 2013/09/09  (rcs-revision 1.9)
\pgfsyssoftpath@smallbuffer@items=\count117
\pgfsyssoftpath@bigbuffer@items=\count118
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/systemlayer/pgfsysprotocol.code.
tex
File: pgfsysprotocol.code.tex 2006/10/16  (rcs-revision 1.4)
)) (/usr/share/texlive/texmf-dist/tex/latex/xcolor/xcolor.sty
Package: xcolor 2007/01/21 v2.11 LaTeX color extensions (UK)

(/usr/share/texlive/texmf-dist/tex/latex/latexconfig/color.cfg
File: color.cfg 2007/01/18 v1.5 color configuration of teTeX/TeXLive
)
Package xcolor Info: Driver file: pdftex.def on input line 225.
LaTeX Info: Redefining \color on input line 702.
Package xcolor Info: Model `cmy' substituted by `cmy0' on input line 1337.
Package xcolor Info: Model `hsb' substituted by `rgb' on input line 1341.
Package xcolor Info: Model `RGB' extended on input line 1353.
Package xcolor Info: Model `HTML' substituted by `rgb' on input line 1355.
Package xcolor Info: Model `Hsb' substituted by `hsb' on input line 1356.
Package xcolor Info: Model `tHsb' substituted by `hsb' on input line 1357.
Package xcolor Info: Model `HSB' substituted by `hsb' on input line 1358.
Package xcolor Info: Model `Gray' substituted by `gray' on input line 1359.
Package xcolor Info: Model `wave' substituted by `hsb' on input line 1360.
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcore.code.tex
Package: pgfcore 2010/04/11 v3.0.1a (rcs-revision 1.7)

(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmath.code.tex
(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathcalc.code.tex
(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathutil.code.tex)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathparser.code.tex
\pgfmath@dimen=\dimen141
\pgfmath@count=\count119
\pgfmath@box=\box30
\pgfmath@toks=\toks35
\pgfmath@stack@operand=\toks36
\pgfmath@stack@operation=\toks37
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.code.tex
(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.basic.code
.tex)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.trigonomet
ric.code.tex)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.random.cod
e.tex)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.comparison
.code.tex)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.base.code.
tex)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.round.code
.tex)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.misc.code.
tex)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.integerari
thmetics.code.tex)))
(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmathfloat.code.tex
\c@pgfmathroundto@lastzeros=\count120
))
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcorepoints.code.te
x
File: pgfcorepoints.code.tex 2013/10/07  (rcs-revision 1.27)
\pgf@picminx=\dimen142
\pgf@picmaxx=\dimen143
\pgf@picminy=\dimen144
\pgf@picmaxy=\dimen145
\pgf@pathminx=\dimen146
\pgf@pathmaxx=\dimen147
\pgf@pathminy=\dimen148
\pgf@pathmaxy=\dimen149
\pgf@xx=\dimen150
\pgf@xy=\dimen151
\pgf@yx=\dimen152
\pgf@yy=\dimen153
\pgf@zx=\dimen154
\pgf@zy=\dimen155
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcorepathconstruct.
code.tex
File: pgfcorepathconstruct.code.tex 2013/10/07  (rcs-revision 1.29)
\pgf@path@lastx=\dimen156
\pgf@path@lasty=\dimen157
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcorepathusage.code
.tex
File: pgfcorepathusage.code.tex 2014/11/02  (rcs-revision 1.24)
\pgf@shorten@end@additional=\dimen158
\pgf@shorten@start@additional=\dimen159
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcorescopes.code.te
x
File: pgfcorescopes.code.tex 2015/05/08  (rcs-revision 1.46)
\pgfpic=\box31
\pgf@hbox=\box32
\pgf@layerbox@main=\box33
\pgf@picture@serial@count=\count121
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcoregraphicstate.c
ode.tex
File: pgfcoregraphicstate.code.tex 2014/11/02  (rcs-revision 1.12)
\pgflinewidth=\dimen160
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcoretransformation
s.code.tex
File: pgfcoretransformations.code.tex 2015/08/07  (rcs-revision 1.20)
\pgf@pt@x=\dimen161
\pgf@pt@y=\dimen162
\pgf@pt@temp=\dimen163
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcorequick.code.tex
File: pgfcorequick.code.tex 2008/10/09  (rcs-revision 1.3)
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcoreobjects.code.t
ex
File: pgfcoreobjects.code.tex 2006/10/11  (rcs-revision 1.2)
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcorepathprocessing
.code.tex
File: pgfcorepathprocessing.code.tex 2013/09/09  (rcs-revision 1.9)
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcorearrows.code.te
x
File: pgfcorearrows.code.tex 2015/05/14  (rcs-revision 1.43)
\pgfarrowsep=\dimen164
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcoreshade.code.tex
File: pgfcoreshade.code.tex 2013/07/15  (rcs-revision 1.15)
\pgf@max=\dimen165
\pgf@sys@shading@range@num=\count122
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcoreimage.code.tex
File: pgfcoreimage.code.tex 2013/07/15  (rcs-revision 1.18)

(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcoreexternal.code.
tex
File: pgfcoreexternal.code.tex 2014/07/09  (rcs-revision 1.21)
\pgfexternal@startupbox=\box34
))
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcorelayers.code.te
x
File: pgfcorelayers.code.tex 2013/07/18  (rcs-revision 1.7)
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcoretransparency.c
ode.tex
File: pgfcoretransparency.code.tex 2013/09/30  (rcs-revision 1.5)
)
(/usr/share/texlive/texmf-dist/tex/generic/pgf/basiclayer/pgfcorepatterns.code.
tex
File: pgfcorepatterns.code.tex 2013/11/07  (rcs-revision 1.5)
)))
(/usr/share/texlive/texmf-dist/tex/generic/pgf/modules/pgfmoduleshapes.code.tex
File: pgfmoduleshapes.code.tex 2014/03/21  (rcs-revision 1.35)
\pgfnodeparttextbox=\box35
) (/usr/share/texlive/texmf-dist/tex/generic/pgf/modules/pgfmoduleplot.code.tex
File: pgfmoduleplot.code.tex 2015/08/03  (rcs-revision 1.13)
)
(/usr/share/texlive/texmf-dist/tex/latex/pgf/compatibility/pgfcomp-version-0-65
.sty
Package: pgfcomp-version-0-65 2007/07/03 v3.0.1a (rcs-revision 1.7)
\pgf@nodesepstart=\dimen166
\pgf@nodesepend=\dimen167
)
(/usr/share/texlive/texmf-dist/tex/latex/pgf/compatibility/pgfcomp-version-1-18
.sty
Package: pgfcomp-version-1-18 2007/07/23 v3.0.1a (rcs-revision 1.1)
)) (/usr/share/texlive/texmf-dist/tex/latex/pgf/utilities/pgffor.sty
(/usr/share/texlive/texmf-dist/tex/latex/pgf/utilities/pgfkeys.sty
(/usr/share/texlive/texmf-dist/tex/generic/pgf/utilities/pgfkeys.code.tex))
(/usr/share/texlive/texmf-dist/tex/latex/pgf/math/pgfmath.sty
(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmath.code.tex))
(/usr/share/texlive/texmf-dist/tex/generic/pgf/utilities/pgffor.code.tex
Package: pgffor 2013/12/13 v3.0.1a (rcs-revision 1.25)

(/usr/share/texlive/texmf-dist/tex/generic/pgf/math/pgfmath.code.tex)
\pgffor@iter=\dimen168
\pgffor@skip=\dimen169
\pgffor@stack=\toks38
\pgffor@toks=\toks39
))
(/usr/share/texlive/texmf-dist/tex/generic/pgf/frontendlayer/tikz/tikz.code.tex
Package: tikz 2015/08/07 v3.0.1a (rcs-revision 1.151)

(/usr/share/texlive/texmf-dist/tex/generic/pgf/libraries/pgflibraryplothandlers
.code.tex
File: pgflibraryplothandlers.code.tex 2013/08/31 v3.0.1a (rcs-revision 1.20)
\pgf@plot@mark@count=\count123
\pgfplotmarksize=\dimen170
)
\tikz@lastx=\dimen171
\tikz@lasty=\dimen172
\tikz@lastxsaved=\dimen173
\tikz@lastysaved=\dimen174
\tikzleveldistance=\dimen175
\tikzsiblingdistance=\dimen176
\tikz@figbox=\box36
\tikz@figbox@bg=\box37
\tikz@tempbox=\box38
\tikz@tempbox@bg=\box39
\tikztreelevel=\count124
\tikznumberofchildren=\count125
\tikznumberofcurrentchild=\count126
\tikz@fig@count=\count127

(/usr/share/texlive/texmf-dist/tex/generic/pgf/modules/pgfmodulematrix.code.tex
File: pgfmodulematrix.code.tex 2013/09/17  (rcs-revision 1.8)
\pgfmatrixcurrentrow=\count128
\pgfmatrixcurrentcolumn=\count129
\pgf@matrix@numberofcolumns=\count130
)
\tikz@expandcount=\count131

(/usr/share/texlive/texmf-dist/tex/generic/pgf/frontendlayer/tikz/libraries/tik
zlibrarytopaths.code.tex
File: tikzlibrarytopaths.code.tex 2008/06/17 v3.0.1a (rcs-revision 1.2)
))) (./extract.sty
(/usr/share/texlive/texmf-dist/tex/latex/environ/environ.sty
Package: environ 2014/05/04 v0.3 A new way to define environments

(/usr/share/texlive/texmf-dist/tex/latex/trimspaces/trimspaces.sty
Package: trimspaces 2009/09/17 v1.1 Trim spaces around a token list
))
(/usr/share/texlive/texmf-dist/tex/latex/etextools/etextools.sty
Package: etextools 2010/12/07 v3.1415926 e-TeX more useful tools for LaTeX pack
age writers

(/usr/share/texlive/texmf-dist/tex/latex/etex-pkg/etex.sty
Package: etex 2016/01/11 v2.6 eTeX basic definition package (PEB,DPC)
\et@xins=\count132
)
(/usr/share/texlive/texmf-dist/tex/latex/etoolbox/etoolbox.sty
Package: etoolbox 2015/08/02 v2.2a e-TeX tools for LaTeX (JAW)
\etb@tempcnta=\count133
)
\ettl@fter=\count134
\ettl@for@nested=\count277
)
(/usr/share/texmf/tex/latex/preview/preview.sty
Package: preview 2010/02/14 11.88 (AUCTeX/preview-latex)

(/usr/share/texmf/tex/latex/preview/prtightpage.def
\PreviewBorder=\dimen177
)
\pr@snippet=\count135
\pr@box=\box40
\pr@output=\toks40
)
\c@propcounter=\count136
\mybox=\box41
)
\c@Thm=\count137

(source_extraction/results/1808.09587.aux)
\openout1 = `1808.09587.aux'.

LaTeX Font Info:    Checking defaults for OML/cmm/m/it on input line 89.
LaTeX Font Info:    ... okay on input line 89.
LaTeX Font Info:    Checking defaults for T1/cmr/m/n on input line 89.
LaTeX Font Info:    ... okay on input line 89.
LaTeX Font Info:    Checking defaults for OT1/cmr/m/n on input line 89.
LaTeX Font Info:    ... okay on input line 89.
LaTeX Font Info:    Checking defaults for OMS/cmsy/m/n on input line 89.
LaTeX Font Info:    ... okay on input line 89.
LaTeX Font Info:    Checking defaults for OMX/cmex/m/n on input line 89.
LaTeX Font Info:    ... okay on input line 89.
LaTeX Font Info:    Checking defaults for U/cmr/m/n on input line 89.
LaTeX Font Info:    ... okay on input line 89.
LaTeX Font Info:    Checking defaults for PD1/pdf/m/n on input line 89.
LaTeX Font Info:    ... okay on input line 89.
LaTeX Font Info:    Try loading font information for U+msa on input line 89.

(/usr/share/texlive/texmf-dist/tex/latex/amsfonts/umsa.fd
File: umsa.fd 2013/01/14 v3.01 AMS symbols A
)
LaTeX Font Info:    Try loading font information for U+msb on input line 89.

(/usr/share/texlive/texmf-dist/tex/latex/amsfonts/umsb.fd
File: umsb.fd 2013/01/14 v3.01 AMS symbols B
)
*geometry* driver: auto-detecting
*geometry* detected driver: pdftex
*geometry* verbose mode - [ preamble ] result:
* driver: pdftex
* paper: a4paper
* layout: <same size as paper>
* layoutoffset:(h,v)=(0.0pt,0.0pt)
* hratio: 1:1
* vratio: 1:1
* modes: twoside 
* h-part:(L,W,R)=(99.58464pt, 398.33858pt, 99.58466pt)
* v-part:(T,H,B)=(81.09035pt, 682.86613pt, 81.09036pt)
* \paperwidth=597.50787pt
* \paperheight=845.04684pt
* \textwidth=398.33858pt
* \textheight=682.86613pt
* \oddsidemargin=27.31465pt
* \evensidemargin=27.31467pt
* \topmargin=-13.406pt
* \headheight=8.0pt
* \headsep=14.22636pt
* \topskip=10.0pt
* \footskip=28.45274pt
* \marginparwidth=90.0pt
* \marginparsep=11.0pt
* \columnsep=10.0pt
* \skip\footins=7.0pt plus 11.0pt
* \hoffset=0.0pt
* \voffset=0.0pt
* \mag=1000
* \@twocolumnfalse
* \@twosidetrue
* \@mparswitchtrue
* \@reversemarginfalse
* (1in=72.27pt=25.4mm, 1cm=28.453pt)

(/usr/share/texlive/texmf-dist/tex/context/base/supp-pdf.mkii
[Loading MPS to PDF converter (version 2006.09.02).]
\scratchcounter=\count138
\scratchdimen=\dimen178
\scratchbox=\box42
\nofMPsegments=\count139
\nofMParguments=\count140
\everyMPshowfont=\toks41
\MPscratchCnt=\count141
\MPscratchDim=\dimen179
\MPnumerator=\count142
\makeMPintoPDFobject=\count143
\everyMPtoPDFconversion=\toks42
)
\AtBeginShipoutBox=\box43
Package hyperref Info: Link coloring ON on input line 89.
 (/usr/share/texlive/texmf-dist/tex/latex/hyperref/nameref.sty
Package: nameref 2012/10/27 v2.43 Cross-referencing by name of section

(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/gettitlestring.sty
Package: gettitlestring 2010/12/03 v1.4 Cleanup title references (HO)
)
\c@section@level=\count144
)
LaTeX Info: Redefining \ref on input line 89.
LaTeX Info: Redefining \pageref on input line 89.
LaTeX Info: Redefining \nameref on input line 89.

(source_extraction/results/1808.09587.out)
(source_extraction/results/1808.09587.out)
\@outlinefile=\write4
\openout4 = `1808.09587.out'.


(/usr/share/texlive/texmf-dist/tex/latex/oberdiek/epstopdf-base.sty
Package: epstopdf-base 2010/02/09 v2.5 Base part for package epstopdf

(/usr/share/texlive/texmf-dist/tex/latex/oberdiek/grfext.sty
Package: grfext 2010/08/19 v1.1 Manage graphics extensions (HO)
)
Package grfext Info: Graphics extension search list:
(grfext)             [.png,.pdf,.jpg,.mps,.jpeg,.jbig2,.jb2,.PNG,.PDF,.JPG,.JPE
G,.JBIG2,.JB2,.eps]
(grfext)             \AppendGraphicsExtensions on input line 452.

(/usr/share/texlive/texmf-dist/tex/latex/latexconfig/epstopdf-sys.cfg
File: epstopdf-sys.cfg 2010/07/13 v1.3 Configuration of (r)epstopdf for TeX Liv
e
))
ABD: EveryShipout initializing macros
Preview: Fontsize 10.95pt
Preview: PDFoutput 1
\extractedfile=\write5
\openout5 = `propositions.txt'.

LaTeX Font Info:    Try loading font information for U+euf on input line 133.
(/usr/share/texlive/texmf-dist/tex/latex/amsfonts/ueuf.fd
File: ueuf.fd 2013/01/14 v3.01 Euler Fraktur
)

LaTeX Warning: Reference `sec:2' on page 1 undefined on input line 145.


LaTeX Warning: Reference `sec:3' on page 1 undefined on input line 145.

Preview: Tightpage -32891 -32891 32891 32891
[1{/var/lib/texmf/fonts/map/pdftex/updmap/pdftex.map}]
Overfull \hbox (12.0pt too wide) in paragraph at lines 159--159
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.159 \end{Thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.159 \end{Thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.159 \end{Thm}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.159 \end{Thm}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.159 \end{Thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.159 \end{Thm}
               
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.159 \end{Thm}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.159 \end{Thm}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[2]
Overfull \hbox (12.0pt too wide) in paragraph at lines 170--170
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.170 \end{Cor}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.170 \end{Cor}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.170 \end{Cor}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.170 \end{Cor}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.170 \end{Cor}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.170 \end{Cor}
               
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.170 \end{Cor}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.170 \end{Cor}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[3]
Overfull \hbox (12.0pt too wide) in paragraph at lines 183--183
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.183 \end{Cor}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.183 \end{Cor}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.183 \end{Cor}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.183 \end{Cor}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.183 \end{Cor}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.183 \end{Cor}
               
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.183 \end{Cor}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.183 \end{Cor}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[4]
Overfull \hbox (12.0pt too wide) in paragraph at lines 203--203
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.203 \end{Thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.203 \end{Thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.203 \end{Thm}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.203 \end{Thm}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.203 \end{Thm}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.203 \end{Thm}
               
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.203 \end{Thm}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.203 \end{Thm}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[5]
Overfull \hbox (12.0pt too wide) in paragraph at lines 289--289
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.289 \end{Def}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.289 \end{Def}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.289 \end{Def}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.289 \end{Def}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.289 \end{Def}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.289 \end{Def}
               
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.289 \end{Def}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.289 \end{Def}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[6]
Overfull \hbox (12.0pt too wide) in paragraph at lines 323--323
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.323 \end{Def}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.323 \end{Def}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.323 \end{Def}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.323 \end{Def}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.323 \end{Def}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.323 \end{Def}
               
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.323 \end{Def}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.323 \end{Def}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[7]
Overfull \hbox (12.0pt too wide) in paragraph at lines 349--349
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.349 \end{Def}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.349 \end{Def}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.349 \end{Def}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.349 \end{Def}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.349 \end{Def}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.349 \end{Def}
               
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.349 \end{Def}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.349 \end{Def}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[8]
Overfull \hbox (12.0pt too wide) in paragraph at lines 387--387
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.387 \end{Def}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.387 \end{Def}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.387 \end{Def}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.387 \end{Def}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.387 \end{Def}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.387 \end{Def}
               
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.387 \end{Def}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.387 \end{Def}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[9]
Overfull \hbox (12.0pt too wide) in paragraph at lines 399--399
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.399 \end{Lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.399 \end{Lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.399 \end{Lem}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.399 \end{Lem}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.399 \end{Lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.399 \end{Lem}
               
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.399 \end{Lem}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.399 \end{Lem}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[10]
Overfull \hbox (12.0pt too wide) in paragraph at lines 417--417
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.417 \end{Ex}
              
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.417 \end{Ex}
              
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.417 \end{Ex}
              
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.417 \end{Ex}
              
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.417 \end{Ex}
              
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.417 \end{Ex}
              
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.417 \end{Ex}
              
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.417 \end{Ex}
              
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[11]
Overfull \hbox (12.0pt too wide) in paragraph at lines 428--428
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.428 \end{Lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.428 \end{Lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.428 \end{Lem}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.428 \end{Lem}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.428 \end{Lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.428 \end{Lem}
               
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.428 \end{Lem}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.428 \end{Lem}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[12]
Overfull \hbox (12.0pt too wide) in paragraph at lines 479--479
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.479 \end{Rk}
              
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.479 \end{Rk}
              
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.479 \end{Rk}
              
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.479 \end{Rk}
              
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.479 \end{Rk}
              
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.479 \end{Rk}
              
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.479 \end{Rk}
              
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.479 \end{Rk}
              
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Underfull \vbox (badness 10000) has occurred while \output is active []

 [13]
Overfull \hbox (12.0pt too wide) in paragraph at lines 500--500
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.500 \end{Setup}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.500 \end{Setup}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.500 \end{Setup}
                 
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.500 \end{Setup}
                 
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.500 \end{Setup}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.500 \end{Setup}
                 
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.500 \end{Setup}
                 
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.500 \end{Setup}
                 
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[14]
Overfull \hbox (12.0pt too wide) in paragraph at lines 542--542
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.542 \end{Constr}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.542 \end{Constr}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.542 \end{Constr}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.542 \end{Constr}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.542 \end{Constr}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.542 \end{Constr}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.542 \end{Constr}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.542 \end{Constr}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

Missing character: There is no ; in font nullfont!
Missing character: There is no ; in font nullfont!
[15]
Overfull \hbox (12.0pt too wide) in paragraph at lines 601--601
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.601 \end{Rk}
              
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.601 \end{Rk}
              
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.601 \end{Rk}
              
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.601 \end{Rk}
              
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.601 \end{Rk}
              
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.601 \end{Rk}
              
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.601 \end{Rk}
              
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.601 \end{Rk}
              
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Underfull \vbox (badness 10000) has occurred while \output is active []

 [16]
Overfull \hbox (12.0pt too wide) in paragraph at lines 611--611
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.611 \end{Def}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.611 \end{Def}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.611 \end{Def}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.611 \end{Def}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.611 \end{Def}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.611 \end{Def}
               
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.611 \end{Def}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.611 \end{Def}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[17]
Overfull \hbox (12.0pt too wide) in paragraph at lines 620--620
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.620 \end{Lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.620 \end{Lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.620 \end{Lem}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.620 \end{Lem}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.620 \end{Lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.620 \end{Lem}
               
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.620 \end{Lem}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.620 \end{Lem}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

Missing character: There is no ; in font nullfont!
Missing character: There is no ; in font nullfont!
Missing character: There is no ; in font nullfont!
Missing character: There is no ; in font nullfont!
Missing character: There is no ; in font nullfont!
Missing character: There is no ; in font nullfont!
[18]
Overfull \hbox (12.0pt too wide) in paragraph at lines 731--731
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.731 \end{Obs}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.731 \end{Obs}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.731 \end{Obs}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.731 \end{Obs}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.731 \end{Obs}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.731 \end{Obs}
               
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.731 \end{Obs}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.731 \end{Obs}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Underfull \vbox (badness 10000) has occurred while \output is active []


Underfull \vbox (badness 10000) has occurred while \output is active []

 [19]
Overfull \hbox (12.0pt too wide) in paragraph at lines 776--776
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.776 \end{Lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.776 \end{Lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.776 \end{Lem}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.776 \end{Lem}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.776 \end{Lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.776 \end{Lem}
               
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.776 \end{Lem}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.776 \end{Lem}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[20]
Overfull \hbox (12.0pt too wide) in paragraph at lines 852--852
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.852 \end{Ex}
              
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.852 \end{Ex}
              
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.852 \end{Ex}
              
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.852 \end{Ex}
              
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.852 \end{Ex}
              
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.852 \end{Ex}
              
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.852 \end{Ex}
              
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.852 \end{Ex}
              
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[21]
Overfull \hbox (12.0pt too wide) in paragraph at lines 865--865
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.865 \end{Lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.865 \end{Lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.865 \end{Lem}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.865 \end{Lem}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.865 \end{Lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.865 \end{Lem}
               
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.865 \end{Lem}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.865 \end{Lem}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Underfull \vbox (badness 1484) has occurred while \output is active []

 [22]
Overfull \hbox (12.0pt too wide) in paragraph at lines 897--897
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.897 \end{Lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.897 \end{Lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.897 \end{Lem}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.897 \end{Lem}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.897 \end{Lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.897 \end{Lem}
               
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.897 \end{Lem}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.897 \end{Lem}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[23]
Overfull \hbox (12.0pt too wide) in paragraph at lines 914--914
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.914 \end{Lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.914 \end{Lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.914 \end{Lem}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.914 \end{Lem}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.914 \end{Lem}
               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.914 \end{Lem}
               
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.914 \end{Lem}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.914 \end{Lem}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[24]
Overfull \hbox (12.0pt too wide) in paragraph at lines 935--935
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.935 \end{Rk}
              
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.935 \end{Rk}
              
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.935 \end{Rk}
              
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.935 \end{Rk}
              
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.935 \end{Rk}
              
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.935 \end{Rk}
              
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.935 \end{Rk}
              
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.935 \end{Rk}
              
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (5.09222pt too wide) in paragraph at lines 1086--1086
\OT1/cmr/m/n/10.95 Note that $\OML/cmm/m/it/10.95 ^^^[] \OT1/cmr/m/n/10.95 = \O
ML/cmm/m/it/10.95 g[]h[] \OT1/cmr/m/n/10.95 + [][](\OML/cmm/m/it/10.95 g[]h[] \
OT1/cmr/m/n/10.95 + \OML/cmm/m/it/10.95 h[]g[]\OT1/cmr/m/n/10.95 ) + [][] \OML/
cmm/m/it/10.95 g[]h[]$ \OT1/cmr/m/n/10.95 and, by construction,
 []

LaTeX Font Info:    Try loading font information for OMS+cmr on input line 1129
.
(/usr/share/texlive/texmf-dist/tex/latex/base/omscmr.fd
File: omscmr.fd 2014/09/29 v2.5h Standard LaTeX font definitions
)
LaTeX Font Info:    Font shape `OMS/cmr/m/n' in size <10.95> not available
(Font)              Font shape `OMS/cmsy/m/n' tried instead on input line 1129.


Overfull \hbox (2.96902pt too wide) in paragraph at lines 1216--1216
[]\OT1/cmr/m/sc/9 Bernd Schober, Institut f[]ur Algebraische Geometrie, Leibniz
 Universit[]at Hannover,
 []

Package atveryend Info: Empty hook `BeforeClearDocument' on input line 1216.
Package atveryend Info: Empty hook `AfterLastShipout' on input line 1216.
(source_extraction/results/1808.09587.aux)
Package atveryend Info: Executing hook `AtVeryEndDocument' on input line 1216.
Package atveryend Info: Executing hook `AtEndAfterFileList' on input line 1216.

Package rerunfilecheck Info: File `1808.09587.out' has not changed.
(rerunfilecheck)             Checksum: <no file>.


LaTeX Warning: There were undefined references.

Package atveryend Info: Empty hook `AtVeryVeryEnd' on input line 1216.
 )
(\end occurred when \iftrue on line 935 was incomplete)
(\end occurred when \iftrue on line 935 was incomplete)
(\end occurred when \iftrue on line 935 was incomplete)
(\end occurred when \iftrue on line 935 was incomplete)
(\end occurred when \iftrue on line 935 was incomplete)
(\end occurred when \iftrue on line 935 was incomplete)
(\end occurred when \iftrue on line 914 was incomplete)
(\end occurred when \iftrue on line 914 was incomplete)
(\end occurred when \iftrue on line 914 was incomplete)
(\end occurred when \iftrue on line 914 was incomplete)
(\end occurred when \iftrue on line 914 was incomplete)
(\end occurred when \iftrue on line 914 was incomplete)
(\end occurred when \iftrue on line 897 was incomplete)
(\end occurred when \iftrue on line 897 was incomplete)
(\end occurred when \iftrue on line 897 was incomplete)
(\end occurred when \iftrue on line 897 was incomplete)
(\end occurred when \iftrue on line 897 was incomplete)
(\end occurred when \iftrue on line 897 was incomplete)
(\end occurred when \iftrue on line 865 was incomplete)
(\end occurred when \iftrue on line 865 was incomplete)
(\end occurred when \iftrue on line 865 was incomplete)
(\end occurred when \iftrue on line 865 was incomplete)
(\end occurred when \iftrue on line 865 was incomplete)
(\end occurred when \iftrue on line 865 was incomplete)
(\end occurred when \iftrue on line 852 was incomplete)
(\end occurred when \iftrue on line 852 was incomplete)
(\end occurred when \iftrue on line 852 was incomplete)
(\end occurred when \iftrue on line 852 was incomplete)
(\end occurred when \iftrue on line 852 was incomplete)
(\end occurred when \iftrue on line 852 was incomplete)
(\end occurred when \iftrue on line 776 was incomplete)
(\end occurred when \iftrue on line 776 was incomplete)
(\end occurred when \iftrue on line 776 was incomplete)
(\end occurred when \iftrue on line 776 was incomplete)
(\end occurred when \iftrue on line 776 was incomplete)
(\end occurred when \iftrue on line 776 was incomplete)
(\end occurred when \iftrue on line 731 was incomplete)
(\end occurred when \iftrue on line 731 was incomplete)
(\end occurred when \iftrue on line 731 was incomplete)
(\end occurred when \iftrue on line 731 was incomplete)
(\end occurred when \iftrue on line 731 was incomplete)
(\end occurred when \iftrue on line 731 was incomplete)
(\end occurred when \iftrue on line 620 was incomplete)
(\end occurred when \iftrue on line 620 was incomplete)
(\end occurred when \iftrue on line 620 was incomplete)
(\end occurred when \iftrue on line 620 was incomplete)
(\end occurred when \iftrue on line 620 was incomplete)
(\end occurred when \iftrue on line 620 was incomplete)
(\end occurred when \iftrue on line 611 was incomplete)
(\end occurred when \iftrue on line 611 was incomplete)
(\end occurred when \iftrue on line 611 was incomplete)
(\end occurred when \iftrue on line 611 was incomplete)
(\end occurred when \iftrue on line 611 was incomplete)
(\end occurred when \iftrue on line 611 was incomplete)
(\end occurred when \iftrue on line 601 was incomplete)
(\end occurred when \iftrue on line 601 was incomplete)
(\end occurred when \iftrue on line 601 was incomplete)
(\end occurred when \iftrue on line 601 was incomplete)
(\end occurred when \iftrue on line 601 was incomplete)
(\end occurred when \iftrue on line 601 was incomplete)
(\end occurred when \iftrue on line 542 was incomplete)
(\end occurred when \iftrue on line 542 was incomplete)
(\end occurred when \iftrue on line 542 was incomplete)
(\end occurred when \iftrue on line 542 was incomplete)
(\end occurred when \iftrue on line 542 was incomplete)
(\end occurred when \iftrue on line 542 was incomplete)
(\end occurred when \iftrue on line 500 was incomplete)
(\end occurred when \iftrue on line 500 was incomplete)
(\end occurred when \iftrue on line 500 was incomplete)
(\end occurred when \iftrue on line 500 was incomplete)
(\end occurred when \iftrue on line 500 was incomplete)
(\end occurred when \iftrue on line 500 was incomplete)
(\end occurred when \iftrue on line 479 was incomplete)
(\end occurred when \iftrue on line 479 was incomplete)
(\end occurred when \iftrue on line 479 was incomplete)
(\end occurred when \iftrue on line 479 was incomplete)
(\end occurred when \iftrue on line 479 was incomplete)
(\end occurred when \iftrue on line 479 was incomplete)
(\end occurred when \iftrue on line 428 was incomplete)
(\end occurred when \iftrue on line 428 was incomplete)
(\end occurred when \iftrue on line 428 was incomplete)
(\end occurred when \iftrue on line 428 was incomplete)
(\end occurred when \iftrue on line 428 was incomplete)
(\end occurred when \iftrue on line 428 was incomplete)
(\end occurred when \iftrue on line 417 was incomplete)
(\end occurred when \iftrue on line 417 was incomplete)
(\end occurred when \iftrue on line 417 was incomplete)
(\end occurred when \iftrue on line 417 was incomplete)
(\end occurred when \iftrue on line 417 was incomplete)
(\end occurred when \iftrue on line 417 was incomplete)
(\end occurred when \iftrue on line 399 was incomplete)
(\end occurred when \iftrue on line 399 was incomplete)
(\end occurred when \iftrue on line 399 was incomplete)
(\end occurred when \iftrue on line 399 was incomplete)
(\end occurred when \iftrue on line 399 was incomplete)
(\end occurred when \iftrue on line 399 was incomplete)
(\end occurred when \iftrue on line 387 was incomplete)
(\end occurred when \iftrue on line 387 was incomplete)
(\end occurred when \iftrue on line 387 was incomplete)
(\end occurred when \iftrue on line 387 was incomplete)
(\end occurred when \iftrue on line 387 was incomplete)
(\end occurred when \iftrue on line 387 was incomplete)
(\end occurred when \iftrue on line 349 was incomplete)
(\end occurred when \iftrue on line 349 was incomplete)
(\end occurred when \iftrue on line 349 was incomplete)
(\end occurred when \iftrue on line 349 was incomplete)
(\end occurred when \iftrue on line 349 was incomplete)
(\end occurred when \iftrue on line 349 was incomplete)
(\end occurred when \iftrue on line 323 was incomplete)
(\end occurred when \iftrue on line 323 was incomplete)
(\end occurred when \iftrue on line 323 was incomplete)
(\end occurred when \iftrue on line 323 was incomplete)
(\end occurred when \iftrue on line 323 was incomplete)
(\end occurred when \iftrue on line 323 was incomplete)
(\end occurred when \iftrue on line 289 was incomplete)
(\end occurred when \iftrue on line 289 was incomplete)
(\end occurred when \iftrue on line 289 was incomplete)
(\end occurred when \iftrue on line 289 was incomplete)
(\end occurred when \iftrue on line 289 was incomplete)
(\end occurred when \iftrue on line 289 was incomplete)
(\end occurred when \iftrue on line 203 was incomplete)
(\end occurred when \iftrue on line 203 was incomplete)
(\end occurred when \iftrue on line 203 was incomplete)
(\end occurred when \iftrue on line 203 was incomplete)
(\end occurred when \iftrue on line 203 was incomplete)
(\end occurred when \iftrue on line 203 was incomplete)
(\end occurred when \iftrue on line 183 was incomplete)
(\end occurred when \iftrue on line 183 was incomplete)
(\end occurred when \iftrue on line 183 was incomplete)
(\end occurred when \iftrue on line 183 was incomplete)
(\end occurred when \iftrue on line 183 was incomplete)
(\end occurred when \iftrue on line 183 was incomplete)
(\end occurred when \iftrue on line 170 was incomplete)
(\end occurred when \iftrue on line 170 was incomplete)
(\end occurred when \iftrue on line 170 was incomplete)
(\end occurred when \iftrue on line 170 was incomplete)
(\end occurred when \iftrue on line 170 was incomplete)
(\end occurred when \iftrue on line 170 was incomplete)
(\end occurred when \iftrue on line 159 was incomplete)
(\end occurred when \iftrue on line 159 was incomplete)
(\end occurred when \iftrue on line 159 was incomplete)
(\end occurred when \iftrue on line 159 was incomplete)
(\end occurred when \iftrue on line 159 was incomplete)
(\end occurred when \iftrue on line 159 was incomplete) 
Here is how much of TeX's memory you used:
 17957 strings out of 494779
 324526 string characters out of 6179263
 460029 words of memory out of 5000000
 20719 multiletter control sequences out of 15000+600000
 14497 words of font info for 54 fonts, out of 8000000 for 9000
 346 hyphenation exceptions out of 8191
 55i,12n,55p,1017b,781s stack positions out of 5000i,500n,10000p,200000b,80000s
pdfTeX warning (dest): n
ame{cite.BerndThesis} has been referenced but does not exist, replaced by a fix
ed one

pdfTeX warning (dest): name{cite.CSdim2} has been referenced but does not exist
, replaced by a fixed one

pdfTeX warning (dest): name{cite.CPmixed2} has been referenced but does not exi
st, replaced by a fixed one

pdfTeX warning (dest): name{cite.HiroCharPoly} has been referenced but does not
 exist, replaced by a fixed one

pdfTeX warning (dest): name{cite.RS} has been referenced but does not exist, re
placed by a fixed one

</usr/share/texlive/texmf-dist/fonts/type1/public/amsfonts/cm/cmbx10.pfb></usr/
share/texlive/texmf-dist/fonts/type1/public/amsfonts/cm/cmex10.pfb></usr/share/
texlive/texmf-dist/fonts/type1/public/amsfonts/cm/cmmi10.pfb></usr/share/texliv
e/texmf-dist/fonts/type1/public/amsfonts/cm/cmmi6.pfb></usr/share/texlive/texmf
-dist/fonts/type1/public/amsfonts/cm/cmmi8.pfb></usr/share/texlive/texmf-dist/f
onts/type1/public/amsfonts/cm/cmr10.pfb></usr/share/texlive/texmf-dist/fonts/ty
pe1/public/amsfonts/cm/cmr6.pfb></usr/share/texlive/texmf-dist/fonts/type1/publ
ic/amsfonts/cm/cmr8.pfb></usr/share/texlive/texmf-dist/fonts/type1/public/amsfo
nts/cm/cmsy10.pfb></usr/share/texlive/texmf-dist/fonts/type1/public/amsfonts/cm
/cmsy6.pfb></usr/share/texlive/texmf-dist/fonts/type1/public/amsfonts/cm/cmsy8.
pfb></usr/share/texlive/texmf-dist/fonts/type1/public/amsfonts/cm/cmti10.pfb></
usr/share/texlive/texmf-dist/fonts/type1/public/amsfonts/euler/eufm10.pfb></usr
/share/texlive/texmf-dist/fonts/type1/public/amsfonts/symbols/msbm10.pfb>
Output written on source_extraction/results/1808.09587.pdf (24 pages, 186599 by
tes).
PDF statistics:
 225 PDF objects out of 1000 (max. 8388607)
 147 compressed objects within 2 object streams
 31 named destinations out of 1000 (max. 500000)
 13 words of extra memory for PDF output out of 10000 (max. 10000000)

