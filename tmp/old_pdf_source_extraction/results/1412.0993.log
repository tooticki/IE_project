This is pdfTeX, Version 3.14159265-2.6-1.40.16 (TeX Live 2015/Debian) (preloaded format=pdflatex 2017.8.22)  14 OCT 2018 21:51
entering extended mode
 restricted \write18 enabled.
 %&-line parsing enabled.
**source_extraction/results/1412.0993.tex
(./source_extraction/results/1412.0993.tex
LaTeX2e <2016/02/01>
Babel <3.9q> and hyphenation patterns for 1 language(s) loaded.
(/usr/share/texlive/texmf-dist/tex/latex/base/article.cls
Document Class: article 2014/09/29 v1.4h Standard LaTeX document class
(/usr/share/texlive/texmf-dist/tex/latex/base/size12.clo
File: size12.clo 2014/09/29 v1.4h Standard LaTeX file (size option)
)
\c@part=\count79
\c@section=\count80
\c@subsection=\count81
\c@subsubsection=\count82
\c@paragraph=\count83
\c@subparagraph=\count84
\c@figure=\count85
\c@table=\count86
\abovecaptionskip=\skip41
\belowcaptionskip=\skip42
\bibindent=\dimen102
)
(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amsmath.sty
Package: amsmath 2016/03/03 v2.15a AMS math features
\@mathmargin=\skip43

For additional information on amsmath, use the `?' option.
(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amstext.sty
Package: amstext 2000/06/29 v2.01 AMS text

(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amsgen.sty
File: amsgen.sty 1999/11/30 v2.0 generic functions
\@emptytoks=\toks14
\ex@=\dimen103
))
(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amsbsy.sty
Package: amsbsy 1999/11/29 v1.2d Bold Symbols
\pmbraise@=\dimen104
)
(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amsopn.sty
Package: amsopn 1999/12/14 v2.01 operator names
)
\inf@bad=\count87
LaTeX Info: Redefining \frac on input line 199.
\uproot@=\count88
\leftroot@=\count89
LaTeX Info: Redefining \overline on input line 297.
\classnum@=\count90
\DOTSCASE@=\count91
LaTeX Info: Redefining \ldots on input line 394.
LaTeX Info: Redefining \dots on input line 397.
LaTeX Info: Redefining \cdots on input line 518.
\Mathstrutbox@=\box26
\strutbox@=\box27
\big@size=\dimen105
LaTeX Font Info:    Redeclaring font encoding OML on input line 630.
LaTeX Font Info:    Redeclaring font encoding OMS on input line 631.
\macc@depth=\count92
\c@MaxMatrixCols=\count93
\dotsspace@=\muskip10
\c@parentequation=\count94
\dspbrk@lvl=\count95
\tag@help=\toks15
\row@=\count96
\column@=\count97
\maxfields@=\count98
\andhelp@=\toks16
\eqnshift@=\dimen106
\alignsep@=\dimen107
\tagshift@=\dimen108
\tagwidth@=\dimen109
\totwidth@=\dimen110
\lineht@=\dimen111
\@envbody=\toks17
\multlinegap=\skip44
\multlinetaggap=\skip45
\mathdisplay@stack=\toks18
LaTeX Info: Redefining \[ on input line 2735.
LaTeX Info: Redefining \] on input line 2736.
)
(/usr/share/texlive/texmf-dist/tex/latex/amscls/amsthm.sty
Package: amsthm 2015/03/04 v2.20.2
\thm@style=\toks19
\thm@bodyfont=\toks20
\thm@headfont=\toks21
\thm@notefont=\toks22
\thm@headpunct=\toks23
\thm@preskip=\skip46
\thm@postskip=\skip47
\thm@headsep=\skip48
\dth@everypar=\toks24
)
(/usr/share/texlive/texmf-dist/tex/latex/amsfonts/amssymb.sty
Package: amssymb 2013/01/14 v3.01 AMS font symbols

(/usr/share/texlive/texmf-dist/tex/latex/amsfonts/amsfonts.sty
Package: amsfonts 2013/01/14 v3.01 Basic AMSFonts support
\symAMSa=\mathgroup4
\symAMSb=\mathgroup5
LaTeX Font Info:    Overwriting math alphabet `\mathfrak' in version `bold'
(Font)                  U/euf/m/n --> U/euf/b/n on input line 106.
))
(/usr/share/texlive/texmf-dist/tex/latex/hyperref/hyperref.sty
Package: hyperref 2012/11/06 v6.83m Hypertext links for LaTeX

(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/hobsub-hyperref.sty
Package: hobsub-hyperref 2012/05/28 v1.13 Bundle oberdiek, subset hyperref (HO)


(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/hobsub-generic.sty
Package: hobsub-generic 2012/05/28 v1.13 Bundle oberdiek, subset generic (HO)
Package: hobsub 2012/05/28 v1.13 Construct package bundles (HO)
Package: infwarerr 2010/04/08 v1.3 Providing info/warning/error messages (HO)
Package: ltxcmds 2011/11/09 v1.22 LaTeX kernel commands for general use (HO)
Package: ifluatex 2010/03/01 v1.3 Provides the ifluatex switch (HO)
Package ifluatex Info: LuaTeX not detected.
Package: ifvtex 2010/03/01 v1.5 Detect VTeX and its facilities (HO)
Package ifvtex Info: VTeX not detected.
Package: intcalc 2007/09/27 v1.1 Expandable calculations with integers (HO)
Package: ifpdf 2011/01/30 v2.3 Provides the ifpdf switch (HO)
Package ifpdf Info: pdfTeX in PDF mode is detected.
Package: etexcmds 2011/02/16 v1.5 Avoid name clashes with e-TeX commands (HO)
Package etexcmds Info: Could not find \expanded.
(etexcmds)             That can mean that you are not using pdfTeX 1.50 or
(etexcmds)             that some package has redefined \expanded.
(etexcmds)             In the latter case, load this package earlier.
Package: kvsetkeys 2012/04/25 v1.16 Key value parser (HO)
Package: kvdefinekeys 2011/04/07 v1.3 Define keys (HO)
Package: pdftexcmds 2011/11/29 v0.20 Utility functions of pdfTeX for LuaTeX (HO
)
Package pdftexcmds Info: LuaTeX not detected.
Package pdftexcmds Info: \pdf@primitive is available.
Package pdftexcmds Info: \pdf@ifprimitive is available.
Package pdftexcmds Info: \pdfdraftmode found.
Package: pdfescape 2011/11/25 v1.13 Implements pdfTeX's escape features (HO)
Package: bigintcalc 2012/04/08 v1.3 Expandable calculations on big integers (HO
)
Package: bitset 2011/01/30 v1.1 Handle bit-vector datatype (HO)
Package: uniquecounter 2011/01/30 v1.2 Provide unlimited unique counter (HO)
)
Package hobsub Info: Skipping package `hobsub' (already loaded).
Package: letltxmacro 2010/09/02 v1.4 Let assignment for LaTeX macros (HO)
Package: hopatch 2012/05/28 v1.2 Wrapper for package hooks (HO)
Package: xcolor-patch 2011/01/30 xcolor patch
Package: atveryend 2011/06/30 v1.8 Hooks at the very end of document (HO)
Package atveryend Info: \enddocument detected (standard20110627).
Package: atbegshi 2011/10/05 v1.16 At begin shipout hook (HO)
Package: refcount 2011/10/16 v3.4 Data extraction from label references (HO)
Package: hycolor 2011/01/30 v1.7 Color options for hyperref/bookmark (HO)
)
(/usr/share/texlive/texmf-dist/tex/latex/graphics/keyval.sty
Package: keyval 2014/10/28 v1.15 key=value parser (DPC)
\KV@toks@=\toks25
)
(/usr/share/texlive/texmf-dist/tex/generic/ifxetex/ifxetex.sty
Package: ifxetex 2010/09/12 v0.6 Provides ifxetex conditional
)
(/usr/share/texlive/texmf-dist/tex/latex/oberdiek/auxhook.sty
Package: auxhook 2011/03/04 v1.3 Hooks for auxiliary files (HO)
)
(/usr/share/texlive/texmf-dist/tex/latex/oberdiek/kvoptions.sty
Package: kvoptions 2011/06/30 v3.11 Key value format for package options (HO)
)
\@linkdim=\dimen112
\Hy@linkcounter=\count99
\Hy@pagecounter=\count100

(/usr/share/texlive/texmf-dist/tex/latex/hyperref/pd1enc.def
File: pd1enc.def 2012/11/06 v6.83m Hyperref: PDFDocEncoding definition (HO)
)
\Hy@SavedSpaceFactor=\count101

(/usr/share/texlive/texmf-dist/tex/latex/latexconfig/hyperref.cfg
File: hyperref.cfg 2002/06/06 v1.2 hyperref configuration of TeXLive
)
Package hyperref Info: Option `colorlinks' set `true' on input line 4319.
Package hyperref Info: Hyper figures OFF on input line 4443.
Package hyperref Info: Link nesting OFF on input line 4448.
Package hyperref Info: Hyper index ON on input line 4451.
Package hyperref Info: Plain pages OFF on input line 4458.
Package hyperref Info: Backreferencing OFF on input line 4463.
Package hyperref Info: Implicit mode ON; LaTeX internals redefined.
Package hyperref Info: Bookmarks ON on input line 4688.
\c@Hy@tempcnt=\count102

(/usr/share/texlive/texmf-dist/tex/latex/url/url.sty
\Urlmuskip=\muskip11
Package: url 2013/09/16  ver 3.4  Verb mode for urls, etc.
)
LaTeX Info: Redefining \url on input line 5041.
\XeTeXLinkMargin=\dimen113
\Fld@menulength=\count103
\Field@Width=\dimen114
\Fld@charsize=\dimen115
Package hyperref Info: Hyper figures OFF on input line 6295.
Package hyperref Info: Link nesting OFF on input line 6300.
Package hyperref Info: Hyper index ON on input line 6303.
Package hyperref Info: backreferencing OFF on input line 6310.
Package hyperref Info: Link coloring ON on input line 6313.
Package hyperref Info: Link coloring with OCG OFF on input line 6320.
Package hyperref Info: PDF/A mode OFF on input line 6325.
LaTeX Info: Redefining \ref on input line 6365.
LaTeX Info: Redefining \pageref on input line 6369.
\Hy@abspage=\count104
\c@Item=\count105
\c@Hfootnote=\count106
)

Package hyperref Message: Driver (autodetected): hpdftex.

(/usr/share/texlive/texmf-dist/tex/latex/hyperref/hpdftex.def
File: hpdftex.def 2012/11/06 v6.83m Hyperref driver for pdfTeX
\Fld@listcount=\count107
\c@bookmark@seq@number=\count108

(/usr/share/texlive/texmf-dist/tex/latex/oberdiek/rerunfilecheck.sty
Package: rerunfilecheck 2011/04/15 v1.7 Rerun checks for auxiliary files (HO)
Package uniquecounter Info: New unique counter `rerunfilecheck' on input line 2
82.
)
\Hy@SectionHShift=\skip49
)
(/usr/share/texlive/texmf-dist/tex/latex/graphics/color.sty
Package: color 2016/01/03 v1.1b Standard LaTeX Color (DPC)

(/usr/share/texlive/texmf-dist/tex/latex/latexconfig/color.cfg
File: color.cfg 2007/01/18 v1.5 color configuration of teTeX/TeXLive
)
Package color Info: Driver file: pdftex.def on input line 143.

(/usr/share/texlive/texmf-dist/tex/latex/pdftex-def/pdftex.def
File: pdftex.def 2011/05/27 v0.06d Graphics/color for pdfTeX
\Gread@gobject=\count109
))
(/usr/share/texlive/texmf-dist/tex/latex/tools/enumerate.sty
Package: enumerate 2015/07/23 v3.00 enumerate extensions (DPC)
\@enLab=\toks26
) (./extract.sty
(/usr/share/texlive/texmf-dist/tex/latex/environ/environ.sty
Package: environ 2014/05/04 v0.3 A new way to define environments

(/usr/share/texlive/texmf-dist/tex/latex/trimspaces/trimspaces.sty
Package: trimspaces 2009/09/17 v1.1 Trim spaces around a token list
))
(/usr/share/texlive/texmf-dist/tex/latex/etextools/etextools.sty
Package: etextools 2010/12/07 v3.1415926 e-TeX more useful tools for LaTeX pack
age writers

(/usr/share/texlive/texmf-dist/tex/latex/etex-pkg/etex.sty
Package: etex 2016/01/11 v2.6 eTeX basic definition package (PEB,DPC)
\et@xins=\count110
)
(/usr/share/texlive/texmf-dist/tex/latex/etoolbox/etoolbox.sty
Package: etoolbox 2015/08/02 v2.2a e-TeX tools for LaTeX (JAW)
\etb@tempcnta=\count111
)
\ettl@fter=\count112
\ettl@for@nested=\count277
)
(/usr/share/texmf/tex/latex/preview/preview.sty
Package: preview 2010/02/14 11.88 (AUCTeX/preview-latex)

(/usr/share/texmf/tex/latex/preview/prtightpage.def
\PreviewBorder=\dimen116
)
\pr@snippet=\count113
\pr@box=\box28
\pr@output=\toks27
)
\c@propcounter=\count114
\mybox=\box29
)
\c@theorem=\count115

(source_extraction/results/1412.0993.aux)
\openout1 = `1412.0993.aux'.

LaTeX Font Info:    Checking defaults for OML/cmm/m/it on input line 36.
LaTeX Font Info:    ... okay on input line 36.
LaTeX Font Info:    Checking defaults for T1/cmr/m/n on input line 36.
LaTeX Font Info:    ... okay on input line 36.
LaTeX Font Info:    Checking defaults for OT1/cmr/m/n on input line 36.
LaTeX Font Info:    ... okay on input line 36.
LaTeX Font Info:    Checking defaults for OMS/cmsy/m/n on input line 36.
LaTeX Font Info:    ... okay on input line 36.
LaTeX Font Info:    Checking defaults for OMX/cmex/m/n on input line 36.
LaTeX Font Info:    ... okay on input line 36.
LaTeX Font Info:    Checking defaults for U/cmr/m/n on input line 36.
LaTeX Font Info:    ... okay on input line 36.
LaTeX Font Info:    Checking defaults for PD1/pdf/m/n on input line 36.
LaTeX Font Info:    ... okay on input line 36.
\AtBeginShipoutBox=\box30
Package hyperref Info: Link coloring ON on input line 36.

(/usr/share/texlive/texmf-dist/tex/latex/hyperref/nameref.sty
Package: nameref 2012/10/27 v2.43 Cross-referencing by name of section

(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/gettitlestring.sty
Package: gettitlestring 2010/12/03 v1.4 Cleanup title references (HO)
)
\c@section@level=\count116
)
LaTeX Info: Redefining \ref on input line 36.
LaTeX Info: Redefining \pageref on input line 36.
LaTeX Info: Redefining \nameref on input line 36.

(source_extraction/results/1412.0993.out)
(source_extraction/results/1412.0993.out)
\@outlinefile=\write3
\openout3 = `1412.0993.out'.


(/usr/share/texlive/texmf-dist/tex/context/base/supp-pdf.mkii
[Loading MPS to PDF converter (version 2006.09.02).]
\scratchcounter=\count117
\scratchdimen=\dimen117
\scratchbox=\box31
\nofMPsegments=\count118
\nofMParguments=\count119
\everyMPshowfont=\toks28
\MPscratchCnt=\count120
\MPscratchDim=\dimen118
\MPnumerator=\count121
\makeMPintoPDFobject=\count122
\everyMPtoPDFconversion=\toks29
)
Preview: Fontsize 12pt
Preview: PDFoutput 1
\extractedfile=\write4
\openout4 = `propositions.txt'.

LaTeX Font Info:    Try loading font information for U+msa on input line 72.
(/usr/share/texlive/texmf-dist/tex/latex/amsfonts/umsa.fd
File: umsa.fd 2013/01/14 v3.01 AMS symbols A
)
LaTeX Font Info:    Try loading font information for U+msb on input line 72.

(/usr/share/texlive/texmf-dist/tex/latex/amsfonts/umsb.fd
File: umsb.fd 2013/01/14 v3.01 AMS symbols B
)
LaTeX Font Info:    Try loading font information for OMS+cmr on input line 72.

(/usr/share/texlive/texmf-dist/tex/latex/base/omscmr.fd
File: omscmr.fd 2014/09/29 v2.5h Standard LaTeX font definitions
)
LaTeX Font Info:    Font shape `OMS/cmr/m/n' in size <10> not available
(Font)              Font shape `OMS/cmsy/m/n' tried instead on input line 72.

Overfull \hbox (7.59966pt too wide) in paragraph at lines 72--72
 [][] 
 []

LaTeX Font Info:    Font shape `OMS/cmr/m/n' in size <7> not available
(Font)              Font shape `OMS/cmsy/m/n' tried instead on input line 72.

Underfull \hbox (badness 1052) in paragraph at lines 72--72
[][]\OT1/cmr/m/n/10 Department of Mathematics, Universitas Gadjah Mada, Sekip U
tara Bulaksumur, 55281
 []


Overfull \hbox (5.8346pt too wide) in paragraph at lines 145--151
\OT1/cmr/m/n/12 Despite that, in earlier times, many other authors have dedicat
ed themselves to obtaining
 []


Overfull \hbox (16.84181pt too wide) in paragraph at lines 220--223
\OT1/cmr/m/n/12 function $\OML/cmm/m/it/12 t \OMS/cmsy/m/n/12 2 \OT1/cmr/m/n/12
 [\OML/cmm/m/it/12 a; b \OT1/cmr/m/n/12 ] \OMS/cmsy/m/n/12 ! \OML/cmm/m/it/12 F
\OT1/cmr/m/n/12 (\OML/cmm/m/it/12 t\OT1/cmr/m/n/12 ) \OML/cmm/m/it/12 x \OMS/cm
sy/m/n/12 2 \OML/cmm/m/it/12 X$ \OT1/cmr/m/n/12 is regulated. In this case, we 
write $\OML/cmm/m/it/12 F [] \OT1/cmr/m/n/12 (\OMS/cmsy/m/n/12 B\OT1/cmr/m/n/12
 )\OML/cmm/m/it/12 G\OT1/cmr/m/n/12 ([\OML/cmm/m/it/12 a; b \OT1/cmr/m/n/12 ]\O
ML/cmm/m/it/12 ; L\OT1/cmr/m/n/12 (\OML/cmm/m/it/12 X\OT1/cmr/m/n/12 ))\OML/cmm
/m/it/12 :$ 
 []


Overfull \hbox (12.51924pt too wide) in paragraph at lines 234--236
[]\OT1/cmr/m/n/12 Now, let us recall the definition of the abstract Kurzweil-St
ieltjes integral as introduced
 []


LaTeX Warning: Reference `break-2' on page 5 undefined on input line 305.


LaTeX Warning: Reference `break-3' on page 5 undefined on input line 314.


LaTeX Warning: Reference `break-2' on page 5 undefined on input line 314.

Preview: Tightpage -32891 -32891 32891 32891
[1{/var/lib/texmf/fonts/map/pdftex/updmap/pdftex.map}]
Overfull \hbox (17.62482pt too wide) in paragraph at lines 337--337
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.337 \end{theorem}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.337 \end{theorem}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.337 \end{theorem}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.337 \end{theorem}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.337 \end{theorem}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.337 \end{theorem}
                   
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.337 \end{theorem}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.337 \end{theorem}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `f-2' on page 6 undefined on input line 376.


LaTeX Warning: Reference `break-1' on page 6 undefined on input line 376.


LaTeX Warning: Reference `c_k' on page 7 undefined on input line 401.


LaTeX Warning: Reference `d_k' on page 7 undefined on input line 401.

[2]
Overfull \hbox (17.62482pt too wide) in paragraph at lines 401--401
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.401 \end{remark}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.401 \end{remark}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.401 \end{remark}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.401 \end{remark}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.401 \end{remark}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.401 \end{remark}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.401 \end{remark}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.401 \end{remark}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[3]
Overfull \hbox (17.62482pt too wide) in paragraph at lines 432--432
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.432 \end{definition}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.432 \end{definition}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.432 \end{definition}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.432 \end{definition}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.432 \end{definition}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.432 \end{definition}
                      
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.432 \end{definition}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.432 \end{definition}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Underfull \vbox (badness 10000) has occurred while \output is active []

 [4]
Overfull \hbox (17.62482pt too wide) in paragraph at lines 448--448
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.448 \end{remark}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.448 \end{remark}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.448 \end{remark}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.448 \end{remark}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.448 \end{remark}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.448 \end{remark}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.448 \end{remark}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.448 \end{remark}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[5]
Overfull \hbox (17.62482pt too wide) in paragraph at lines 460--460
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.460 \end{proposition}
                       
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.460 \end{proposition}
                       
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.460 \end{proposition}
                       
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.460 \end{proposition}
                       
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.460 \end{proposition}
                       
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.460 \end{proposition}
                       
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.460 \end{proposition}
                       
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.460 \end{proposition}
                       
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[6]
Overfull \hbox (17.62482pt too wide) in paragraph at lines 481--481
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.481 \end{theorem}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.481 \end{theorem}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.481 \end{theorem}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.481 \end{theorem}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.481 \end{theorem}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.481 \end{theorem}
                   
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.481 \end{theorem}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.481 \end{theorem}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Underfull \vbox (badness 1755) has occurred while \output is active []

 [7]
Overfull \hbox (17.62482pt too wide) in paragraph at lines 521--521
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.521 \end{lemma}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.521 \end{lemma}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.521 \end{lemma}
                 
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.521 \end{lemma}
                 
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.521 \end{lemma}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.521 \end{lemma}
                 
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.521 \end{lemma}
                 
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.521 \end{lemma}
                 
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[8]
Overfull \hbox (17.62482pt too wide) in paragraph at lines 559--559
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.559 \end{theorem}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.559 \end{theorem}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.559 \end{theorem}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.559 \end{theorem}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.559 \end{theorem}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.559 \end{theorem}
                   
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.559 \end{theorem}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.559 \end{theorem}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `r4.1' on page 11 undefined on input line 602.

[9]
Overfull \hbox (17.62482pt too wide) in paragraph at lines 615--615
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.615 \end{corollary}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.615 \end{corollary}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.615 \end{corollary}
                     
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.615 \end{corollary}
                     
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.615 \end{corollary}
                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.615 \end{corollary}
                     
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.615 \end{corollary}
                     
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.615 \end{corollary}
                     
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[10]
Overfull \hbox (17.62482pt too wide) in paragraph at lines 631--631
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.631 \end{remark}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.631 \end{remark}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.631 \end{remark}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.631 \end{remark}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.631 \end{remark}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.631 \end{remark}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.631 \end{remark}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.631 \end{remark}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[11]
Overfull \hbox (17.62482pt too wide) in paragraph at lines 652--652
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.652 \end{definition}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.652 \end{definition}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.652 \end{definition}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.652 \end{definition}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.652 \end{definition}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.652 \end{definition}
                      
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.652 \end{definition}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.652 \end{definition}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[12]
Overfull \hbox (17.62482pt too wide) in paragraph at lines 672--672
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.672 \end{definition}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.672 \end{definition}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.672 \end{definition}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.672 \end{definition}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.672 \end{definition}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.672 \end{definition}
                      
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.672 \end{definition}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.672 \end{definition}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[13]
Overfull \hbox (17.62482pt too wide) in paragraph at lines 701--701
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.701 \end{remark}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.701 \end{remark}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.701 \end{remark}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.701 \end{remark}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.701 \end{remark}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.701 \end{remark}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.701 \end{remark}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.701 \end{remark}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[14]
Overfull \hbox (17.62482pt too wide) in paragraph at lines 721--721
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.721 \end{lemma}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.721 \end{lemma}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.721 \end{lemma}
                 
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.721 \end{lemma}
                 
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.721 \end{lemma}
                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.721 \end{lemma}
                 
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.721 \end{lemma}
                 
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.721 \end{lemma}
                 
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `En' on page 13 undefined on input line 774.


LaTeX Warning: Reference `r4.2' on page 13 undefined on input line 774.

[15]
Overfull \hbox (17.62482pt too wide) in paragraph at lines 800--800
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.800 \end{definition}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.800 \end{definition}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.800 \end{definition}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.800 \end{definition}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.800 \end{definition}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.800 \end{definition}
                      
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.800 \end{definition}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.800 \end{definition}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[16]
Overfull \hbox (17.62482pt too wide) in paragraph at lines 841--841
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.841 \end{proposition}
                       
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.841 \end{proposition}
                       
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.841 \end{proposition}
                       
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.841 \end{proposition}
                       
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.841 \end{proposition}
                       
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.841 \end{proposition}
                       
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.841 \end{proposition}
                       
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.841 \end{proposition}
                       
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[17]
Overfull \hbox (17.62482pt too wide) in paragraph at lines 859--859
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.859 \end{remark}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.859 \end{remark}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.859 \end{remark}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.859 \end{remark}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.859 \end{remark}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.859 \end{remark}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.859 \end{remark}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.859 \end{remark}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[18]
Overfull \hbox (17.62482pt too wide) in paragraph at lines 872--872
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.872 \end{theorem}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.872 \end{theorem}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.872 \end{theorem}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.872 \end{theorem}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.872 \end{theorem}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.872 \end{theorem}
                   
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.872 \end{theorem}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.872 \end{theorem}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Underfull \vbox (badness 10000) has occurred while \output is active []

 [19]
Overfull \hbox (17.62482pt too wide) in paragraph at lines 891--891
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.891 \end{proposition}
                       
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.891 \end{proposition}
                       
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.891 \end{proposition}
                       
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.891 \end{proposition}
                       
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.891 \end{proposition}
                       
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.891 \end{proposition}
                       
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.891 \end{proposition}
                       
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.891 \end{proposition}
                       
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (4.986pt too wide) in paragraph at lines 899--900
[]\OT1/cmr/m/n/12 The estimates presented in the sequel are, in a sense, the an
alogues of [[], Proposition
 []

[20]
Overfull \hbox (17.62482pt too wide) in paragraph at lines 932--932
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.932 \end{theorem}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.932 \end{theorem}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.932 \end{theorem}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.932 \end{theorem}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.932 \end{theorem}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.932 \end{theorem}
                   
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.932 \end{theorem}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.932 \end{theorem}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Underfull \vbox (badness 10000) has occurred while \output is active []


Overfull \hbox (0.26732pt too wide) in paragraph at lines 1083--1083
\OML/cmm/m/it/12 a [] c [] d [] b:$ \OT1/cmr/m/n/12 Denoting $\OML/cmm/m/it/12 
P[] [] \OMS/cmsy/m/n/12 f\OT1/cmr/m/n/12 (\OML/cmm/m/it/12 ^^X[]; \OT1/cmr/m/n/
12 [\OML/cmm/m/it/12 ^^L[]; ^^L[]\OT1/cmr/m/n/12 ])[] \OML/cmm/m/it/12 j [] \OT
1/cmr/m/n/12 1\OML/cmm/m/it/12 ; [] ; ^^W\OT1/cmr/m/n/12 (\OML/cmm/m/it/12 P[]\
OT1/cmr/m/n/12 )\OMS/cmsy/m/n/12 g\OML/cmm/m/it/12 ;$ \OT1/cmr/m/n/12 without l
oss of generality
 []


LaTeX Warning: Reference `intJ' on page 18 undefined on input line 1083.


LaTeX Warning: Reference `c,d-special' on page 18 undefined on input line 1083.



LaTeX Warning: Reference `P' on page 18 undefined on input line 1083.


LaTeX Warning: Reference `intJ' on page 18 undefined on input line 1083.


LaTeX Warning: Reference `c,d-special' on page 19 undefined on input line 1083.



LaTeX Warning: Reference `P' on page 19 undefined on input line 1083.


LaTeX Warning: Reference `intJ' on page 19 undefined on input line 1083.


LaTeX Warning: Reference `c,d-special' on page 19 undefined on input line 1083.



LaTeX Warning: Reference `P' on page 19 undefined on input line 1083.


LaTeX Warning: Reference `intJ' on page 19 undefined on input line 1083.

[21]
Overfull \hbox (17.62482pt too wide) in paragraph at lines 1110--1110
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1110 \end{proposition}
                        
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1110 \end{proposition}
                        
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1110 \end{proposition}
                        
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1110 \end{proposition}
                        
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1110 \end{proposition}
                        
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1110 \end{proposition}
                        
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1110 \end{proposition}
                        
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1110 \end{proposition}
                        
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (0.51242pt too wide) in paragraph at lines 1114--1118
\OT1/cmr/m/n/12 over compact intervals coincides with the abstract Kurzweil-Sti
eltjes integral introduced
 []

[22]
Overfull \hbox (17.62482pt too wide) in paragraph at lines 1135--1135
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1135 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1135 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1135 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1135 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1135 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1135 \end{theorem}
                    
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1135 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1135 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[23]
Overfull \hbox (17.62482pt too wide) in paragraph at lines 1166--1166
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1166 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1166 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1166 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1166 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1166 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1166 \end{remark}
                   
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1166 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1166 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[24]
Overfull \hbox (17.62482pt too wide) in paragraph at lines 1183--1183
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1183 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1183 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1183 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1183 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1183 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1183 \end{theorem}
                    
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1183 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1183 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[25]
Overfull \hbox (17.62482pt too wide) in paragraph at lines 1234--1234
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1234 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1234 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1234 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1234 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1234 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1234 \end{theorem}
                    
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1234 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1234 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Underfull \hbox (badness 2173) in paragraph at lines 1254--1254
[][]\OT1/cmr/bx/n/12 5.12  .Remark. []\OT1/cmr/m/n/12 According to Theorems 5.8
 , 5.10  and 5.11 , for $\OML/cmm/m/it/12 F \OMS/cmsy/m/n/12 2
 []

[26]
Overfull \hbox (17.62482pt too wide) in paragraph at lines 1254--1254
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1254 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1254 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1254 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1254 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1254 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1254 \end{remark}
                   
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1254 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1254 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Underfull \vbox (badness 10000) has occurred while \output is active []

 [27]
Overfull \hbox (17.62482pt too wide) in paragraph at lines 1267--1267
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1267 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1267 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1267 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1267 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1267 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1267 \end{theorem}
                    
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1267 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1267 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[28]
Overfull \hbox (17.62482pt too wide) in paragraph at lines 1311--1311
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1311 \end{corollary}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1311 \end{corollary}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1311 \end{corollary}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1311 \end{corollary}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1311 \end{corollary}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1311 \end{corollary}
                      
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1311 \end{corollary}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1311 \end{corollary}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[29]
Overfull \hbox (17.62482pt too wide) in paragraph at lines 1325--1325
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1325 \end{corollary}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1325 \end{corollary}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1325 \end{corollary}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1325 \end{corollary}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1325 \end{corollary}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1325 \end{corollary}
                      
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1325 \end{corollary}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1325 \end{corollary}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[30]
Overfull \hbox (17.62482pt too wide) in paragraph at lines 1343--1343
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1343 \end{corollary}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1343 \end{corollary}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1343 \end{corollary}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1343 \end{corollary}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1343 \end{corollary}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1343 \end{corollary}
                      
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1343 \end{corollary}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1343 \end{corollary}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[31]
Overfull \hbox (17.62482pt too wide) in paragraph at lines 1351--1351
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1351 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1351 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1351 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1351 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1351 \end{remark}
                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1351 \end{remark}
                   
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1351 \end{remark}
                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1351 \end{remark}
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Underfull \vbox (badness 10000) has occurred while \output is active []

 [32]
Overfull \hbox (17.62482pt too wide) in paragraph at lines 1376--1376
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1376 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1376 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1376 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1376 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1376 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1376 \end{theorem}
                    
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1376 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1376 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `step' on page 26 undefined on input line 1458.


LaTeX Warning: Reference `step' on page 26 undefined on input line 1458.


LaTeX Warning: Reference `r6.5' on page 26 undefined on input line 1458.


LaTeX Warning: Reference `r6.6' on page 26 undefined on input line 1458.


LaTeX Warning: Reference `r6.7' on page 26 undefined on input line 1458.

[33]
Overfull \hbox (17.62482pt too wide) in paragraph at lines 1474--1474
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1474 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1474 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1474 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1474 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1474 \end{lemma}
                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1474 \end{lemma}
                  
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1474 \end{lemma}
                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1474 \end{lemma}
                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


LaTeX Warning: Reference `f-2' on page 27 undefined on input line 1505.

[34]
Overfull \hbox (17.62482pt too wide) in paragraph at lines 1524--1524
[][] 
 []

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1524 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1524 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \@refstar has an extra }.
<inserted text> 
                \par 
l.1524 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@refstar was complete.
<to be read again> 
                   \par 
l.1524 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Undefined control sequence.
\pr@startbox ...uter \toks@ {#2}\edef \pr@cleanup 
                                                  {\the \toks@ }\setbox \pr@...
l.1524 \end{theorem}
                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing \endcsname inserted.
<to be read again> 
                   \endgraf 
l.1524 \end{theorem}
                    
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.

! Argument of \@firstoffive has an extra }.
<inserted text> 
                \par 
l.1524 \end{theorem}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@firstoffive was complete.
<to be read again> 
                   \par 
l.1524 \end{theorem}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

Package atveryend Info: Empty hook `BeforeClearDocument' on input line 1704.
Package atveryend Info: Empty hook `AfterLastShipout' on input line 1704.
(source_extraction/results/1412.0993.aux)
Package atveryend Info: Executing hook `AtVeryEndDocument' on input line 1704.
Package atveryend Info: Executing hook `AtEndAfterFileList' on input line 1704.

Package rerunfilecheck Info: File `1412.0993.out' has not changed.
(rerunfilecheck)             Checksum: <no file>.


LaTeX Warning: There were undefined references.

Package atveryend Info: Empty hook `AtVeryVeryEnd' on input line 1704.
 )
(\end occurred inside a group at level 1)

### simple group (level 1) entered at line 88 ({)
### bottom level
(\end occurred when \iftrue on line 1524 was incomplete)
(\end occurred when \iftrue on line 1524 was incomplete)
(\end occurred when \iftrue on line 1524 was incomplete)
(\end occurred when \iftrue on line 1524 was incomplete)
(\end occurred when \iftrue on line 1524 was incomplete)
(\end occurred when \iftrue on line 1524 was incomplete)
(\end occurred when \iftrue on line 1474 was incomplete)
(\end occurred when \iftrue on line 1474 was incomplete)
(\end occurred when \iftrue on line 1474 was incomplete)
(\end occurred when \iftrue on line 1474 was incomplete)
(\end occurred when \iftrue on line 1474 was incomplete)
(\end occurred when \iftrue on line 1474 was incomplete)
(\end occurred when \iftrue on line 1376 was incomplete)
(\end occurred when \iftrue on line 1376 was incomplete)
(\end occurred when \iftrue on line 1376 was incomplete)
(\end occurred when \iftrue on line 1376 was incomplete)
(\end occurred when \iftrue on line 1376 was incomplete)
(\end occurred when \iftrue on line 1376 was incomplete)
(\end occurred when \iftrue on line 1351 was incomplete)
(\end occurred when \iftrue on line 1351 was incomplete)
(\end occurred when \iftrue on line 1351 was incomplete)
(\end occurred when \iftrue on line 1351 was incomplete)
(\end occurred when \iftrue on line 1351 was incomplete)
(\end occurred when \iftrue on line 1351 was incomplete)
(\end occurred when \iftrue on line 1343 was incomplete)
(\end occurred when \iftrue on line 1343 was incomplete)
(\end occurred when \iftrue on line 1343 was incomplete)
(\end occurred when \iftrue on line 1343 was incomplete)
(\end occurred when \iftrue on line 1343 was incomplete)
(\end occurred when \iftrue on line 1343 was incomplete)
(\end occurred when \iftrue on line 1325 was incomplete)
(\end occurred when \iftrue on line 1325 was incomplete)
(\end occurred when \iftrue on line 1325 was incomplete)
(\end occurred when \iftrue on line 1325 was incomplete)
(\end occurred when \iftrue on line 1325 was incomplete)
(\end occurred when \iftrue on line 1325 was incomplete)
(\end occurred when \iftrue on line 1311 was incomplete)
(\end occurred when \iftrue on line 1311 was incomplete)
(\end occurred when \iftrue on line 1311 was incomplete)
(\end occurred when \iftrue on line 1311 was incomplete)
(\end occurred when \iftrue on line 1311 was incomplete)
(\end occurred when \iftrue on line 1311 was incomplete)
(\end occurred when \iftrue on line 1267 was incomplete)
(\end occurred when \iftrue on line 1267 was incomplete)
(\end occurred when \iftrue on line 1267 was incomplete)
(\end occurred when \iftrue on line 1267 was incomplete)
(\end occurred when \iftrue on line 1267 was incomplete)
(\end occurred when \iftrue on line 1267 was incomplete)
(\end occurred when \iftrue on line 1254 was incomplete)
(\end occurred when \iftrue on line 1254 was incomplete)
(\end occurred when \iftrue on line 1254 was incomplete)
(\end occurred when \iftrue on line 1254 was incomplete)
(\end occurred when \iftrue on line 1254 was incomplete)
(\end occurred when \iftrue on line 1254 was incomplete)
(\end occurred when \iftrue on line 1234 was incomplete)
(\end occurred when \iftrue on line 1234 was incomplete)
(\end occurred when \iftrue on line 1234 was incomplete)
(\end occurred when \iftrue on line 1234 was incomplete)
(\end occurred when \iftrue on line 1234 was incomplete)
(\end occurred when \iftrue on line 1234 was incomplete)
(\end occurred when \iftrue on line 1183 was incomplete)
(\end occurred when \iftrue on line 1183 was incomplete)
(\end occurred when \iftrue on line 1183 was incomplete)
(\end occurred when \iftrue on line 1183 was incomplete)
(\end occurred when \iftrue on line 1183 was incomplete)
(\end occurred when \iftrue on line 1183 was incomplete)
(\end occurred when \iftrue on line 1166 was incomplete)
(\end occurred when \iftrue on line 1166 was incomplete)
(\end occurred when \iftrue on line 1166 was incomplete)
(\end occurred when \iftrue on line 1166 was incomplete)
(\end occurred when \iftrue on line 1166 was incomplete)
(\end occurred when \iftrue on line 1166 was incomplete)
(\end occurred when \iftrue on line 1135 was incomplete)
(\end occurred when \iftrue on line 1135 was incomplete)
(\end occurred when \iftrue on line 1135 was incomplete)
(\end occurred when \iftrue on line 1135 was incomplete)
(\end occurred when \iftrue on line 1135 was incomplete)
(\end occurred when \iftrue on line 1135 was incomplete)
(\end occurred when \iftrue on line 1110 was incomplete)
(\end occurred when \iftrue on line 1110 was incomplete)
(\end occurred when \iftrue on line 1110 was incomplete)
(\end occurred when \iftrue on line 1110 was incomplete)
(\end occurred when \iftrue on line 1110 was incomplete)
(\end occurred when \iftrue on line 1110 was incomplete)
(\end occurred when \iftrue on line 932 was incomplete)
(\end occurred when \iftrue on line 932 was incomplete)
(\end occurred when \iftrue on line 932 was incomplete)
(\end occurred when \iftrue on line 932 was incomplete)
(\end occurred when \iftrue on line 932 was incomplete)
(\end occurred when \iftrue on line 932 was incomplete)
(\end occurred when \iftrue on line 891 was incomplete)
(\end occurred when \iftrue on line 891 was incomplete)
(\end occurred when \iftrue on line 891 was incomplete)
(\end occurred when \iftrue on line 891 was incomplete)
(\end occurred when \iftrue on line 891 was incomplete)
(\end occurred when \iftrue on line 891 was incomplete)
(\end occurred when \iftrue on line 872 was incomplete)
(\end occurred when \iftrue on line 872 was incomplete)
(\end occurred when \iftrue on line 872 was incomplete)
(\end occurred when \iftrue on line 872 was incomplete)
(\end occurred when \iftrue on line 872 was incomplete)
(\end occurred when \iftrue on line 872 was incomplete)
(\end occurred when \iftrue on line 859 was incomplete)
(\end occurred when \iftrue on line 859 was incomplete)
(\end occurred when \iftrue on line 859 was incomplete)
(\end occurred when \iftrue on line 859 was incomplete)
(\end occurred when \iftrue on line 859 was incomplete)
(\end occurred when \iftrue on line 859 was incomplete)
(\end occurred when \iftrue on line 841 was incomplete)
(\end occurred when \iftrue on line 841 was incomplete)
(\end occurred when \iftrue on line 841 was incomplete)
(\end occurred when \iftrue on line 841 was incomplete)
(\end occurred when \iftrue on line 841 was incomplete)
(\end occurred when \iftrue on line 841 was incomplete)
(\end occurred when \iftrue on line 800 was incomplete)
(\end occurred when \iftrue on line 800 was incomplete)
(\end occurred when \iftrue on line 800 was incomplete)
(\end occurred when \iftrue on line 800 was incomplete)
(\end occurred when \iftrue on line 800 was incomplete)
(\end occurred when \iftrue on line 800 was incomplete)
(\end occurred when \iftrue on line 721 was incomplete)
(\end occurred when \iftrue on line 721 was incomplete)
(\end occurred when \iftrue on line 721 was incomplete)
(\end occurred when \iftrue on line 721 was incomplete)
(\end occurred when \iftrue on line 721 was incomplete)
(\end occurred when \iftrue on line 721 was incomplete)
(\end occurred when \iftrue on line 701 was incomplete)
(\end occurred when \iftrue on line 701 was incomplete)
(\end occurred when \iftrue on line 701 was incomplete)
(\end occurred when \iftrue on line 701 was incomplete)
(\end occurred when \iftrue on line 701 was incomplete)
(\end occurred when \iftrue on line 701 was incomplete)
(\end occurred when \iftrue on line 672 was incomplete)
(\end occurred when \iftrue on line 672 was incomplete)
(\end occurred when \iftrue on line 672 was incomplete)
(\end occurred when \iftrue on line 672 was incomplete)
(\end occurred when \iftrue on line 672 was incomplete)
(\end occurred when \iftrue on line 672 was incomplete)
(\end occurred when \iftrue on line 652 was incomplete)
(\end occurred when \iftrue on line 652 was incomplete)
(\end occurred when \iftrue on line 652 was incomplete)
(\end occurred when \iftrue on line 652 was incomplete)
(\end occurred when \iftrue on line 652 was incomplete)
(\end occurred when \iftrue on line 652 was incomplete)
(\end occurred when \iftrue on line 631 was incomplete)
(\end occurred when \iftrue on line 631 was incomplete)
(\end occurred when \iftrue on line 631 was incomplete)
(\end occurred when \iftrue on line 631 was incomplete)
(\end occurred when \iftrue on line 631 was incomplete)
(\end occurred when \iftrue on line 631 was incomplete)
(\end occurred when \iftrue on line 615 was incomplete)
(\end occurred when \iftrue on line 615 was incomplete)
(\end occurred when \iftrue on line 615 was incomplete)
(\end occurred when \iftrue on line 615 was incomplete)
(\end occurred when \iftrue on line 615 was incomplete)
(\end occurred when \iftrue on line 615 was incomplete)
(\end occurred when \iftrue on line 559 was incomplete)
(\end occurred when \iftrue on line 559 was incomplete)
(\end occurred when \iftrue on line 559 was incomplete)
(\end occurred when \iftrue on line 559 was incomplete)
(\end occurred when \iftrue on line 559 was incomplete)
(\end occurred when \iftrue on line 559 was incomplete)
(\end occurred when \iftrue on line 521 was incomplete)
(\end occurred when \iftrue on line 521 was incomplete)
(\end occurred when \iftrue on line 521 was incomplete)
(\end occurred when \iftrue on line 521 was incomplete)
(\end occurred when \iftrue on line 521 was incomplete)
(\end occurred when \iftrue on line 521 was incomplete)
(\end occurred when \iftrue on line 481 was incomplete)
(\end occurred when \iftrue on line 481 was incomplete)
(\end occurred when \iftrue on line 481 was incomplete)
(\end occurred when \iftrue on line 481 was incomplete)
(\end occurred when \iftrue on line 481 was incomplete)
(\end occurred when \iftrue on line 481 was incomplete)
(\end occurred when \iftrue on line 460 was incomplete)
(\end occurred when \iftrue on line 460 was incomplete)
(\end occurred when \iftrue on line 460 was incomplete)
(\end occurred when \iftrue on line 460 was incomplete)
(\end occurred when \iftrue on line 460 was incomplete)
(\end occurred when \iftrue on line 460 was incomplete)
(\end occurred when \iftrue on line 448 was incomplete)
(\end occurred when \iftrue on line 448 was incomplete)
(\end occurred when \iftrue on line 448 was incomplete)
(\end occurred when \iftrue on line 448 was incomplete)
(\end occurred when \iftrue on line 448 was incomplete)
(\end occurred when \iftrue on line 448 was incomplete)
(\end occurred when \iftrue on line 432 was incomplete)
(\end occurred when \iftrue on line 432 was incomplete)
(\end occurred when \iftrue on line 432 was incomplete)
(\end occurred when \iftrue on line 432 was incomplete)
(\end occurred when \iftrue on line 432 was incomplete)
(\end occurred when \iftrue on line 432 was incomplete)
(\end occurred when \iftrue on line 401 was incomplete)
(\end occurred when \iftrue on line 401 was incomplete)
(\end occurred when \iftrue on line 401 was incomplete)
(\end occurred when \iftrue on line 401 was incomplete)
(\end occurred when \iftrue on line 401 was incomplete)
(\end occurred when \iftrue on line 401 was incomplete)
(\end occurred when \iftrue on line 337 was incomplete)
(\end occurred when \iftrue on line 337 was incomplete)
(\end occurred when \iftrue on line 337 was incomplete)
(\end occurred when \iftrue on line 337 was incomplete)
(\end occurred when \iftrue on line 337 was incomplete)
(\end occurred when \iftrue on line 337 was incomplete) 
Here is how much of TeX's memory you used:
 6957 strings out of 494779
 97647 string characters out of 6179263
 213681 words of memory out of 5000000
 10098 multiletter control sequences out of 15000+600000
 16059 words of font info for 60 fonts, out of 8000000 for 9000
 184 hyphenation exceptions out of 8191
 30i,19n,30p,1033b,489s stack positions out of 5000i,500n,10000p,200000b,80000s
pdfTeX warning (dest): n
ame{cite.S} has been referenced but does not exist, replaced by a fixed one

pdfTeX warning (dest): name{cite.G} has been referenced but does not exist, rep
laced by a fixed one

pdfTeX warning (dest): name{cite.H1} has been referenced but does not exist, re
placed by a fixed one

pdfTeX warning (dest): name{cite.STV} has been referenced but does not exist, r
eplaced by a fixed one

</usr/share/texlive/texmf-dist/fonts/type1/public/amsfonts/cm/cmbx12.pfb></usr/
share/texlive/texmf-dist/fonts/type1/public/amsfonts/cm/cmex10.pfb></usr/share/
texlive/texmf-dist/fonts/type1/public/amsfonts/cm/cmmi12.pfb></usr/share/texliv
e/texmf-dist/fonts/type1/public/amsfonts/cm/cmmi6.pfb></usr/share/texlive/texmf
-dist/fonts/type1/public/amsfonts/cm/cmmi8.pfb></usr/share/texlive/texmf-dist/f
onts/type1/public/amsfonts/cm/cmr12.pfb></usr/share/texlive/texmf-dist/fonts/ty
pe1/public/amsfonts/cm/cmr6.pfb></usr/share/texlive/texmf-dist/fonts/type1/publ
ic/amsfonts/cm/cmr8.pfb></usr/share/texlive/texmf-dist/fonts/type1/public/amsfo
nts/cm/cmsy10.pfb></usr/share/texlive/texmf-dist/fonts/type1/public/amsfonts/cm
/cmsy6.pfb></usr/share/texlive/texmf-dist/fonts/type1/public/amsfonts/cm/cmsy8.
pfb></usr/share/texlive/texmf-dist/fonts/type1/public/amsfonts/cm/cmti12.pfb></
usr/share/texlive/texmf-dist/fonts/type1/public/amsfonts/symbols/msbm10.pfb>
Output written on source_extraction/results/1412.0993.pdf (34 pages, 177563 byt
es).
PDF statistics:
 289 PDF objects out of 1000 (max. 8388607)
 200 compressed objects within 2 object streams
 64 named destinations out of 1000 (max. 500000)
 1 words of extra memory for PDF output out of 10000 (max. 10000000)

